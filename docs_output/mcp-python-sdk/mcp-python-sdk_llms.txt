# Document Index
- [python-sdk](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk.md): The official Python SDK for Model Context Protocol (MCP) servers and clients, enabling applications to provide context for LLMs in a standardized way using features like resources, prompts, tools, and various transport methods.
- [CONTRIBUTING](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk/blob/main/CONTRIBUTING.md): This document outlines the process for contributing to the MCP Python SDK, including development setup, workflow, code style guidelines, pull request process, and code of conduct.
- [SECURITY](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk/blob/main/SECURITY.md): This document outlines Anthropic's security policy for the Model Context Protocol project, including guidelines for reporting security issues through their HackerOne vulnerability disclosure program.
- [CODE_OF_CONDUCT](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk/blob/main/CODE_OF_CONDUCT.md): This document outlines the code of conduct for the community, promoting a harassment-free environment and detailing acceptable and unacceptable behaviors, enforcement responsibilities, scope, and guidelines.
- [CLAUDE Development Guidelines](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk/blob/main/CLAUDE.md): This document outlines core development rules, code quality standards, testing requirements, and error resolution strategies for the CLAUDE project, emphasizing package management with uv, code formatting with Ruff, and type checking with Pyright.
- [mkdocs.yml Configuration](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk/blob/main/mkdocs.yml): This mkdocs.yml file configures the documentation site for the MCP Server, including theme settings, navigation, markdown extensions, plugins, and links to external documentation.
- [README](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk/blob/main/README.md): The MCP Python SDK implements the Model Context Protocol, enabling applications to provide context for LLMs in a standardized way by building clients and servers that expose resources, prompts, and tools and handle protocol messages.
- [provider](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk/blob/main/src/mcp/server/auth/provider.py): Defines the OAuthAuthorizationServerProvider protocol with methods for client registration, authorization, token exchange, and token revocation, along with related data models and error types for building an OAuth 2.0 authorization server.
- [RELEASE](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk/blob/main/RELEASE.md): This document outlines the process for releasing new versions of the project, including bumping dependencies and creating GitHub releases.
- [python-sdk](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp-python-sdk/modelcontextprotocol/python-sdk.md): This document describes the Model Context Protocol (MCP) Python SDK, which enables applications to provide context for LLMs in a standardized way and implements the full MCP specification for building clients and servers.
