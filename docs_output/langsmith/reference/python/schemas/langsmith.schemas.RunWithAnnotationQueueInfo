# RunWithAnnotationQueueInfo ‚Äî ü¶úÔ∏èüõ†Ô∏è LangSmith  documentation

# RunWithAnnotationQueueInfo#

_class _langsmith.schemas.RunWithAnnotationQueueInfo(

    _*_ ,
    _id : UUID_,
    _name : str_,
    _start_time : datetime_,
    _run_type : str_,
    _end_time : datetime | None = None_,
    _extra : dict | None = None_,
    _error : str | None = None_,
    _serialized : dict | None = None_,
    _events : list[dict] | None = None_,
    _inputs : dict = None_,
    _outputs : dict | None = None_,
    _reference_example_id : UUID | None = None_,
    _parent_run_id : UUID | None = None_,
    _tags : list[str] | None = None_,
    _attachments : dict[str, tuple[str, bytes] | [Attachment](langsmith.schemas.Attachment.html#langsmith.schemas.Attachment "langsmith.schemas.Attachment") | tuple[str, Path]] | dict[str, [AttachmentInfo](langsmith.schemas.AttachmentInfo.html#langsmith.schemas.AttachmentInfo "langsmith.schemas.AttachmentInfo")] = None_,
    _last_reviewed_time : datetime | None = None_,
    _added_at : datetime | None = None_,
)[[source]](../_modules/langsmith/schemas.html#RunWithAnnotationQueueInfo)#
    

Run schema with annotation queue info.

Create a new model by parsing and validating input data from keyword arguments.

Raises ValidationError if the input data cannot be parsed to form a valid model.

Attributes

`metadata` | Retrieve the metadata (if any).  
---|---  
`revision_id` | Retrieve the revision ID (if any).  
  
Methods

`__init__`(**data) | Create a new model by parsing and validating input data from keyword arguments.  
---|---  
`construct`([_fields_set]) | Creates a new model setting __dict__ and __fields_set__ from trusted or pre-validated data.  
`copy`(*[, include, exclude, update, deep]) | Duplicate a model, optionally choose which fields to include, exclude and change.  
`dict`(*[, include, exclude, by_alias, ...]) | Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.  
`from_orm`(obj) |   
`json`(*[, include, exclude, by_alias, ...]) | Generate a JSON representation of the model, include and exclude arguments as per dict().  
`parse_file`(path, *[, content_type, ...]) |   
`parse_obj`(obj) |   
`parse_raw`(b, *[, content_type, encoding, ...]) |   
`schema`([by_alias, ref_template]) |   
`schema_json`(*[, by_alias, ref_template]) |   
`update_forward_refs`(**localns) | Try to update ForwardRefs on fields based on this Model, globalns and localns.  
`validate`(value) |   
  
Parameters:
    

  * **id** (_UUID_)

  * **name** (_str_)

  * **start_time** (_datetime_)

  * **run_type** (_str_)

  * **end_time** (_datetime_ _|__None_)

  * **extra** (_dict_ _|__None_)

  * **error** (_str_ _|__None_)

  * **serialized** (_dict_ _|__None_)

  * **events** (_list_ _[__dict_ _]__|__None_)

  * **inputs** (_dict_)

  * **outputs** (_dict_ _|__None_)

  * **reference_example_id** (_UUID_ _|__None_)

  * **parent_run_id** (_UUID_ _|__None_)

  * **tags** (_list_ _[__str_ _]__|__None_)

  * **attachments** (_dict_ _[__str_ _,__tuple_ _[__str_ _,__bytes_ _]__|_[_Attachment_](langsmith.schemas.Attachment.html#langsmith.schemas.Attachment "langsmith.schemas.Attachment") _|__tuple_ _[__str_ _,__Path_ _]__]__|__dict_ _[__str_ _,_[_AttachmentInfo_](langsmith.schemas.AttachmentInfo.html#langsmith.schemas.AttachmentInfo "langsmith.schemas.AttachmentInfo") _]_)

  * **last_reviewed_time** (_datetime_ _|__None_)

  * **added_at** (_datetime_ _|__None_)

__init__(

    _** data: Any_,
) ‚Üí None#
    

Create a new model by parsing and validating input data from keyword arguments.

Raises ValidationError if the input data cannot be parsed to form a valid model.

Parameters:
    

**data** (_Any_)

Return type:
    

None

_classmethod _construct(

    __fields_set : SetStr | None = None_,
    _** values: Any_,
) ‚Üí Model#
    

Creates a new model setting __dict__ and __fields_set__ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = ‚Äòallow‚Äô was set since it adds all passed values

Parameters:
    

  * **_fields_set** (_SetStr_ _|__None_)

  * **values** (_Any_)

Return type:
    

Model

copy(

    _*_ ,
    _include : AbstractSetIntStr | MappingIntStrAny | None = None_,
    _exclude : AbstractSetIntStr | MappingIntStrAny | None = None_,
    _update : DictStrAny | None = None_,
    _deep : bool = False_,
) ‚Üí Model#
    

Duplicate a model, optionally choose which fields to include, exclude and change.

Parameters:
    

  * **include** (_AbstractSetIntStr_ _|__MappingIntStrAny_ _|__None_) ‚Äì fields to include in new model

  * **exclude** (_AbstractSetIntStr_ _|__MappingIntStrAny_ _|__None_) ‚Äì fields to exclude from new model, as with values this takes precedence over include

  * **update** (_DictStrAny_ _|__None_) ‚Äì values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data

  * **deep** (_bool_) ‚Äì set to True to make a deep copy of the model

  * **self** (_Model_)

Returns:
    

new model instance

Return type:
    

Model

dict(

    _*_ ,
    _include : AbstractSetIntStr | MappingIntStrAny | None = None_,
    _exclude : AbstractSetIntStr | MappingIntStrAny | None = None_,
    _by_alias : bool = False_,
    _skip_defaults : bool | None = None_,
    _exclude_unset : bool = False_,
    _exclude_defaults : bool = False_,
    _exclude_none : bool = False_,
) ‚Üí DictStrAny#
    

Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

Parameters:
    

  * **include** (_AbstractSetIntStr_ _|__MappingIntStrAny_ _|__None_)

  * **exclude** (_AbstractSetIntStr_ _|__MappingIntStrAny_ _|__None_)

  * **by_alias** (_bool_)

  * **skip_defaults** (_bool_ _|__None_)

  * **exclude_unset** (_bool_)

  * **exclude_defaults** (_bool_)

  * **exclude_none** (_bool_)

Return type:
    

DictStrAny

_classmethod _from_orm(

    _obj : Any_,
) ‚Üí Model#
    

Parameters:
    

**obj** (_Any_)

Return type:
    

Model

json(

    _*_ ,
    _include : AbstractSetIntStr | MappingIntStrAny | None = None_,
    _exclude : AbstractSetIntStr | MappingIntStrAny | None = None_,
    _by_alias : bool = False_,
    _skip_defaults : bool | None = None_,
    _exclude_unset : bool = False_,
    _exclude_defaults : bool = False_,
    _exclude_none : bool = False_,
    _encoder : Callable[[Any], Any] | None = None_,
    _models_as_dict : bool = True_,
    _** dumps_kwargs: Any_,
) ‚Üí str#
    

Generate a JSON representation of the model, include and exclude arguments as per dict().

encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().

Parameters:
    

  * **include** (_AbstractSetIntStr_ _|__MappingIntStrAny_ _|__None_)

  * **exclude** (_AbstractSetIntStr_ _|__MappingIntStrAny_ _|__None_)

  * **by_alias** (_bool_)

  * **skip_defaults** (_bool_ _|__None_)

  * **exclude_unset** (_bool_)

  * **exclude_defaults** (_bool_)

  * **exclude_none** (_bool_)

  * **encoder** (_Callable_ _[__[__Any_ _]__,__Any_ _]__|__None_)

  * **models_as_dict** (_bool_)

  * **dumps_kwargs** (_Any_)

Return type:
    

str

_classmethod _parse_file(

    _path : str | Path_,
    _*_ ,
    _content_type : str = None_,
    _encoding : str = 'utf8'_,
    _proto : Protocol = None_,
    _allow_pickle : bool = False_,
) ‚Üí Model#
    

Parameters:
    

  * **path** (_str_ _|__Path_)

  * **content_type** (_str_)

  * **encoding** (_str_)

  * **proto** (_Protocol_)

  * **allow_pickle** (_bool_)

Return type:
    

Model

_classmethod _parse_obj(

    _obj : Any_,
) ‚Üí Model#
    

Parameters:
    

**obj** (_Any_)

Return type:
    

Model

_classmethod _parse_raw(

    _b : str | bytes_,
    _*_ ,
    _content_type : str = None_,
    _encoding : str = 'utf8'_,
    _proto : Protocol = None_,
    _allow_pickle : bool = False_,
) ‚Üí Model#
    

Parameters:
    

  * **b** (_str_ _|__bytes_)

  * **content_type** (_str_)

  * **encoding** (_str_)

  * **proto** (_Protocol_)

  * **allow_pickle** (_bool_)

Return type:
    

Model

_classmethod _schema(

    _by_alias : bool = True_,
    _ref_template : str = '#/definitions/{model}'_,
) ‚Üí DictStrAny#
    

Parameters:
    

  * **by_alias** (_bool_)

  * **ref_template** (_str_)

Return type:
    

DictStrAny

_classmethod _schema_json(

    _*_ ,
    _by_alias : bool = True_,
    _ref_template : str = '#/definitions/{model}'_,
    _** dumps_kwargs: Any_,
) ‚Üí str#
    

Parameters:
    

  * **by_alias** (_bool_)

  * **ref_template** (_str_)

  * **dumps_kwargs** (_Any_)

Return type:
    

str

_classmethod _update_forward_refs(

    _** localns: Any_,
) ‚Üí None#
    

Try to update ForwardRefs on fields based on this Model, globalns and localns.

Parameters:
    

**localns** (_Any_)

Return type:
    

None

_classmethod _validate(

    _value : Any_,
) ‚Üí Model#
    

Parameters:
    

**value** (_Any_)

Return type:
    

Model

__On this page
  *[/]: Positional-only parameter separator (PEP 570)
  *[*]: Keyword-only parameters separator (PEP 3102)