# Document Index
- [python-sdk](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk.md): This document describes the Model Context Protocol (MCP) Python SDK, which enables applications to provide context for LLMs in a standardized way by building MCP clients and servers using transports like stdio, SSE, and Streamable HTTP.
- [CONTRIBUTING](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk/blob/main/CONTRIBUTING.md): This document provides guidelines for contributing to the MCP Python SDK, including development setup, workflow, code style, and pull request process, ensuring code quality and adherence to the project's Code of Conduct and MIT License.
- [mkdocs.yml Configuration](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk/blob/main/mkdocs.yml): This YAML file configures the MkDocs documentation generator for the MCP Server project, specifying the site name, description, theme, navigation, markdown extensions, plugins, and other settings.
- [SECURITY](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk/blob/main/SECURITY.md): This document outlines the security policy for the Model Context Protocol project SDK, including how to report security issues and information about Anthropic's vulnerability disclosure program managed on HackerOne.
- [README](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk/blob/main/README.md): The MCP Python SDK implements the Model Context Protocol, enabling applications to provide context to LLMs in a standardized way by building MCP clients and servers that expose resources, prompts, and tools using transports like stdio, SSE, and Streamable HTTP.
- [Contributor Covenant Code of Conduct](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk/blob/main/CODE_OF_CONDUCT.md): This document outlines the code of conduct for the community, promoting a harassment-free and inclusive environment for all members, contributors, and leaders, and details enforcement responsibilities and guidelines.
- [provider](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk/blob/main/src/mcp/server/auth/provider.py): Defines the OAuthAuthorizationServerProvider protocol and related data structures for implementing an OAuth 2.0 authorization server, including client registration, authorization code management, and token exchange.
- [RELEASE](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk/blob/main/RELEASE.md): This document describes the process for releasing new versions of the package, including bumping dependencies and creating GitHub releases.
- [CLAUDE Development Guidelines](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk/blob/main/CLAUDE.md): This document outlines the development guidelines for the codebase, covering package management (uv), code quality (type hints, docstrings), testing requirements (pytest, anyio), pull request procedures, Python tools (Ruff, Pyright, pre-commit), and error resolution strategies.
- [python-sdk](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/mcp/modelcontextprotocol/python-sdk.md): The official Python SDK for Model Context Protocol (MCP) servers and clients, enabling applications to provide standardized context for Large Language Models by building MCP clients and servers, using standard transports, and handling protocol messages.
