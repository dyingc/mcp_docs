# Document Index
- [n8n v1.0 Migration Guide](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/1-0-migration-checklist.md): This document summarizes key considerations for updating to n8n version 1.0, covering new features like Python support in the Code node and changes to execution order, as well as deprecations, breaking changes, and migration steps related to database support, Docker configurations, workflow behavior, user management, custom node directories, WebSockets, date transformations, and execution data retention.
- [Light Evaluations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/evaluations/light-evaluations.md): Light evaluations allow users to test workflows with a dataset, write outputs to a Google Sheet, and visually compare them to expected outputs, and are available on registered community and paid plans.
- [Metric-based evaluations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/evaluations/metric-based-evaluations.md): This page explains how to use metric-based evaluations in n8n to measure workflow performance using scores, track changes between runs, and analyze the reasons for those changes, enabling data-driven improvements and quality assurance.
- [Evaluations Overview](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/evaluations/overview.md): This document introduces evaluations, a technique for ensuring the reliability of AI workflows by running test datasets and comparing performance across different models or prompts, and describes light (pre-deployment) and metric-based (post-deployment) evaluation types.
- [Tips and Common Issues for AI Evaluations in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/evaluations/tips-and-common-issues.md): This document provides tips and solutions for common problems encountered when using AI evaluations in n8n, such as combining multiple triggers, avoiding evaluation breaking the chat, accessing tool data, managing multiple evaluations, and dealing with inconsistent results.
- [Agents vs Chains Comparison](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/agent-chain-comparison.md): This n8n workflow demonstrates the key differences between agents and chains, highlighting the greater power of agents through their ability to interact with tools and make decisions based on the query.
- [Call an API to Fetch Data with n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/api-workflow-tool.md): This n8n workflow demonstrates how to use the Chat Trigger and Call n8n Workflow Tool to connect to any API and bring data into your AI, using AI functionality to refine the API request based on user queries.
- [Chat with a Google Sheet using AI](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/data-google-sheets.md): This n8n workflow demonstrates how to use the Chat Trigger, Agent, and Call n8n Workflow Tool to create a chat interface that queries Google Sheets, allowing you to bring your own data to AI. The workflow uses a second workflow to query Google Sheets, providing the AI model with access to information beyond its built-in dataset. The example workflows use Sticky Notes to guide you.
- [Human Fallback for AI Workflows](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/human-fallback.md): This workflow uses the GPT-4 model to answer user queries and sends a message to Slack to ask for human help when it cannot answer, prompting the user to supply an email address; it uses the Chat Trigger, Agent, and Call n8n Workflow Tool nodes.
- [Advanced AI examples and concepts](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/introduction.md): This section introduces advanced AI concepts and provides workflow templates with explanations and configuration guides, covering agents, chains, tools, vector databases, and memory in AI workflows within n8n.
- [What's an agent in AI?](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/understand-agents.md): An AI agent is a decision-maker that strategically uses tools and interacts with other agents to answer queries, adapting its behavior based on prompts and the specific request.
- [What's a Chain in AI?](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/understand-chains.md): Chains in AI connect different components, like models and memory, to create cohesive systems by setting up a sequence of calls between the components; n8n provides Basic LLM, Question and Answer, and Summarization chain nodes, but unlike other tools, n8n chains don't support memory, requiring the use of agents for ongoing conversations.
- [AI Memory in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/understand-memory.md): This document explains how AI memory works in n8n, and how to add memory to AI workflows using simple memory, memory services (Motorhead, Redis, Postgres, Xata, Zep), and the Chat Memory Manager node.
- [What's a Tool in AI?](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/understand-tools.md): This document explains the concept of 'tools' in AI, which are like addons that AI can use to access extra context or resources, and highlights the AI tools available in n8n, including Call n8n Workflow, Custom Code, and HTTP Request tools.
- [Understand Vector Databases](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/understand-vector-databases.md): Vector databases store data as high-dimensional vectors, enabling fast similarity searches based on semantic meaning, and require tools like document loaders, text splitters, embeddings, and retrievers to function.
- [Using the $fromAI() Function](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/using-the-fromai-function.md): The $fromAI() function uses AI to dynamically fill in parameters for tools connected to the Tools AI agent in n8n, allowing AI to populate fields like email addresses or names based on context and user input, and it can be used in conjunction with other expressions.
- [Populate a Pinecone vector database from a website](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/examples/vector-store-website.md): This n8n workflow scrapes a website, loads the data into Pinecone, and then queries it using a chat workflow, utilizing HTTP, HTML, and Pinecone Vector Store nodes along with Embeddings OpenAI and a Question and Answer Chain.
- [Build an AI chat agent with n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/intro-tutorial.md): This tutorial guides users through building an AI-powered chat agent using n8n, covering AI concepts, the AI Agent node, chat input, connecting to AI models, customization, observation, and persistence.
- [LangChain Learning Resources](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/langchain/langchain-learning-resources.md): This page lists learning resources for LangChain, including documentation, code templates, and a YouTube series, as well as a link to the n8n Discord server for discussing LangChain projects.
- [LangChain concepts in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/langchain/langchain-n8n.md): This page explains how LangChain concepts and features map to n8n nodes, including trigger nodes, cluster nodes (chains, agents, vector stores, and miscellaneous utilities), and sub-nodes (document loaders, language models, memory, output parsers, and retrievers).
- [Use LangSmith with n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/langchain/langsmith.md): This document explains how to connect an n8n instance to LangSmith, a developer platform by the LangChain team, to record and monitor runs within n8n. It provides the necessary environment variables and setup instructions for self-hosted n8n instances.
- [LangChain in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai/langchain/overview.md): n8n offers a collection of nodes that implement LangChain's functionality, allowing users to integrate their LangChain logic with other data sources and services.
- [Advanced AI in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/advanced-ai.md): Learn how to build AI functionality in n8n, including chatbots and AI-powered data processing, using LangChain and n8n's AI Starter Kit.
- [Choose your n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/choose-n8n.md): This document outlines the different platforms (n8n Cloud, self-hosted, and embeddable), licenses (Sustainable Use and Enterprise), and pricing options (free trial, community edition, and paid plans) available for n8n, a workflow automation platform, with a focus on the technical knowledge required for self-hosting and a recommendation to use n8n Cloud for users without server management experience.
- [AI Coding with GPT in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/ai-code.md): This document describes how to use AI coding with GPT in n8n to generate JavaScript code for the Code node, including feature availability, usage limits, writing good prompts, and example prompts, and how to reference incoming node data explicitly.
- [Convenience Methods in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/convenience.md): This document describes the convenience methods available in n8n expressions and the Code node for performing common tasks, including evaluating expressions and handling empty values.
- [Current Node Input](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/current-node-input.md): This document describes methods for accessing and working with the input of the current node in n8n workflows, including accessing item data, parameters, and context, with specific considerations for the Code node and the Loop Over Items node.
- [Arrays](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/data-transformation-functions/arrays.md): This document lists built-in convenience functions for data transformation in expressions for arrays, including average, chunk, compact, difference, intersection, and more.
- [Dates](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/data-transformation-functions/dates.md): This document describes built-in functions for data transformation of dates in n8n expressions, including functions for formatting, extracting, and manipulating dates.
- [Numbers Data Transformation Functions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/data-transformation-functions/numbers.md): This document lists built-in convenience functions for data transformation in expressions for numbers, including functions for rounding, formatting, and converting numbers to booleans and dates.
- [Objects - Data Transformation Functions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/data-transformation-functions/objects.md): This document lists built-in convenience functions for data transformation in expressions for objects, including isEmpty, merge, hasField, removeField, removeFieldsContaining, keepFieldsContaining, compact, toJsonString, and urlEncode.
- [Strings Data Transformation Functions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/data-transformation-functions/strings.md): This document lists built-in string functions available in n8n expressions for data transformation, including encoding, decoding, extraction, validation, parsing, formatting, and conversion functions.
- [Data transformation functions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/data-transformation-functions.md): This document describes data transformation functions available in n8n expressions, which are helper functions to make data transformation easier, and provides links to lists of available functions for arrays, dates, numbers, objects, and strings.
- [Date and time](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/date-time.md): This document describes the built-in date and time methods available in n8n, including `$now` and `$today`, which provide Luxon objects for the current timestamp. It explains how to use these methods in both JavaScript expressions and Python code within the Code node. Dates are passed between nodes as strings, requiring parsing with Luxon, and the document references additional resources for data transformation and Luxon usage. 
- [HTTP Node Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/http-node-variables.md): Describes variables for working with HTTP node requests and responses, including $pageCount, $request, and $response, for use in expressions in the HTTP node.
- [LangChain Code Node Methods](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/langchain-methods.md): This document describes the methods available in the LangChain Code node in n8n, which facilitate common tasks such as populating input/output data, accessing input data, retrieving node information, and handling execution cancellation.
- [n8n Metadata](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/n8n-metadata.md): This document describes methods for accessing n8n metadata, including environment variables, workflow and execution information, node details, instance variables, and external secrets, with specific notes on Python support within the Code node.
- [Output of other nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/output-other-nodes.md): This document describes methods for accessing output from other nodes within n8n workflows, including retrieving items, parameters, and context, with specific considerations for the Code node and item linking.
- [Overview of Built-in Methods and Variables in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/builtin/overview.md): This document provides a reference of built-in methods and variables available in n8n expressions, including current node input, output of other nodes, date and time, JMESPath, HTTP node, LangChain Code node, n8n metadata, convenience methods, and data transformation functions, with notes on availability in the expressions editor and Code node.
- [Using the Code Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/code-node.md): The Code node allows users to write custom JavaScript or Python code to run as a step within an n8n workflow, enabling flexibility and custom logic.
- [(node-name).all](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/builtin/all.md): This document describes the `("<node-name>").all()` function in n8n, which provides access to all items of the current or parent nodes, with examples in both Javascript and Python for getting items and accessing item data.
- [execution](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/builtin/execution.md): This document describes the `execution` object in n8n, which provides information about the current workflow execution, including its unique ID (`execution.id`), the resume URL for waiting workflows (`execution.resumeUrl`), and custom data storage (`execution.customData`).
- [getWorkflowStaticData](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/builtin/get-workflow-static-data.md): This document describes how to use the `getWorkflowStaticData(type)` function in n8n to access and modify static workflow data, which can be either global or node-specific, and provides examples in both JavaScript and Python.
- [Retrieve Linked Items from Earlier in the Workflow](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/builtin/itemmatching.md): This document explains how to retrieve linked items from earlier nodes in an n8n workflow using the `itemMatching` method, providing an example of restoring email addresses based on data from a 'Customer Datastore' node using a Code node.
- [vars](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/builtin/vars.md): The `vars` object in n8n provides read-only access to user-defined variables within the active environment, as distinct from `env` which exposes configuration environment variables.
- [Built-in Methods and Variables Examples](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/builtin.md): This document provides examples of how to use n8n's built-in methods and variables for data manipulation and accessing n8n data within workflows, including execution details, static workflow data retrieval, item matching, accessing all node data, and using variables.
- [Output to Browser Console](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/code-node/console-log.md): This document explains how to use `console.log()` in JavaScript and `print()` in Python within n8n Code nodes to output information to the browser console for debugging, including how to handle JsProxy objects when working with node data.
- [Get Binary Data Buffer in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/code-node/get-binary-data-buffer.md): The binary data buffer contains binary file data processed by a workflow, accessible for manipulation, calculations, and complex HTTP requests using n8n's `getBinaryDataBuffer()` function.
- [Get Number of Items Returned by Last Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/code-node/number-items-last-node.md): This page provides JavaScript and Python code snippets to obtain the number of items returned by the previous node in n8n workflows, which can be useful for handling empty datasets.
- [Check Incoming Data in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/expressions/check-incoming-data.md): This document provides code snippets for checking incoming data in n8n, including how to return a different value if the data does not meet a specific condition using ternary, nullish coalescing, and logical OR operators.
- [Expressions Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/expressions/common-issues.md): This document provides solutions to common errors encountered when using expressions in n8n, such as invalid JSON, inability to retrieve data, and syntax errors, along with troubleshooting steps for each issue.
- [Pagination in HTTP Request Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/http-node/pagination.md): This document explains how to use pagination with the HTTP Request node in n8n, covering different API pagination methods such as using the next URL, page numbers, and body parameters, along with setting the page size in the query.
- [Query JSON with JMESPath](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/jmespath.md): This document explains how to use JMESPath, a query language for JSON, within n8n to extract and transform elements from JSON documents using the custom `jmespath()` method. It includes examples of common tasks like applying JMESPath expressions to collections with projections and selecting multiple elements to create new lists or objects, with JavaScript and Python code snippets.
- [Date and time with Luxon](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/cookbook/luxon.md): This document explains how to use the Luxon JavaScript library within n8n to handle date and time manipulations, including parsing dates, setting timezones, and performing common tasks like calculating dates in the past or future and formatting them for readability, while also noting the differences in functionality between JavaScript and Python code nodes.
- [Expressions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/expressions.md): Expressions are a powerful n8n feature that allow node parameters to be set dynamically based on data from previous node executions, the workflow, or your n8n environment, and they also allow execution of JavaScript.
- [Custom Variables in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code/variables.md): This document describes custom variables, a feature available in Self-hosted Enterprise and Pro Cloud plans (version 0.225.0 and above), that allows users to store and reuse read-only values in n8n workflows, accessible via the Code node and expressions.
- [Code in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/code.md): This page of the n8n documentation describes how to use code within n8n workflows, including expressions, the Code node, technical nodes, the n8n API, self-hosting, and building custom nodes.
- [Navigating the editor UI](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-1.md): This document guides users through the n8n Editor UI, covering the canvas, left-side panel, top bar, and node functionalities, essential for building workflows.
- [Building a Mini-workflow](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-2.md): This lesson guides you through building a simple n8n workflow that retrieves automation-related articles from Hacker News, covering steps like adding a manual trigger, configuring the Hacker News node, executing the workflow, and saving it.
- [Automating a Real-World Use Case](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-3.md): An automation expert helps Nathan, an Analytics Manager, automate his weekly sales reporting task using n8n, which involves collecting data from a legacy data warehouse, calculating the sum of booked orders, announcing it on Discord, and creating a spreadsheet of processing sales for Sales Managers.
- [Designing the Workflow](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-4.md): This chapter outlines the steps to design an n8n workflow that automates data retrieval from a data warehouse, filters and calculates order values, notifies team members via Discord, inserts data into Airtable, and schedules the workflow execution.
- [Getting Data from the Data Warehouse](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-5/chapter-5.1.md): This chapter explains how to use the HTTP Request node in n8n to retrieve data from a data warehouse API, covering node configuration, credential setup, and data extraction.
- [Inserting Data into Airtable](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-5/chapter-5.2.md): This document explains how to insert data from an HTTP Request node into an Airtable table using the Airtable node in n8n, including configuring the table, setting up the Airtable node, and testing the workflow.
- [Filtering Orders](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-5/chapter-5.3.md): This document explains how to filter data in n8n workflows using the If node to conditionally split a workflow based on comparison operations, specifically filtering orders by their status before inserting them into Airtable.
- [Setting Values for Processing Orders](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-5/chapter-5.4.md): This tutorial teaches you how to use the Edit Fields (Set) node in n8n to select and set data before transferring it to Airtable, focusing on extracting the employeeName and orderID of processing orders.
- [Calculating Booked Orders](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-5/chapter-5.5.md): This n8n docs page explains how to use the Code node to calculate the total number and value of booked orders, demonstrating data processing and JavaScript integration within n8n workflows.
- [Notifying the Team](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-5/chapter-5.6.md): This chapter explains how to configure a Discord node in n8n to send messages to a Discord channel, specifically to notify a team about booked orders. It walks through connecting to the n8n server on Discord, setting up the Discord node with a webhook, and sending a formatted message with order details. The chapter also suggests alternative communication apps like Slack and Mattermost and previews the next step of scheduling the workflow.
- [Scheduling the Workflow](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-5/chapter-5.7.md): This document explains how to schedule an n8n workflow to run automatically at a set time or interval using the Schedule Trigger node, including how to configure the trigger interval, weekdays, and time, as well as the importance of setting the correct timezone.
- [Activating and Examining the Workflow](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-5/chapter-5.8.md): Learn how to activate n8n workflows, examine workflow executions, and configure workflow settings such as execution order, error workflows, timezone, and saving options for executions and progress.
- [Exporting and Importing Workflows](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-6.md): This chapter explains how to export and import n8n workflows as JSON files, which is useful for sharing workflows or importing them from others. Workflows can be exported and imported from the Editor UI menu, the Editor UI canvas, or the command line. When sharing workflows, be sure to remove or anonymize credential information from the JSON file to protect your credentials.
- [Test your knowledge | n8n Docs](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one/chapter-7.md): This page provides a quiz to test knowledge of n8n Course Level 1, covering theoretical concepts and workflows, with a passing score of 80% required to pass.
- [Level One: Introduction to n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-one.md): This n8n course introduces fundamental concepts and develops low-code automation expertise, teaching users how to set up n8n, structure data, configure nodes, use conditional logic, schedule workflows, and share them, culminating in building two practical workflows.
- [Understanding the data structure | n8n Docs](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-1.md): This chapter explains the n8n data structure, which is an array of JSON objects, and how to use the Code node to transform data and simulate node outputs by creating, referencing, and transforming data sets. It covers creating data sets with the Code node, referencing node data, and transforming data using data transformation nodes or JavaScript code. The chapter also provides exercises to practice creating and manipulating data within n8n. The data structure is crucial for nodes to recognize and interpret data in a workflow. Data sent from one node to another is sent as an array of JSON objects, with each element in the collection called an item.
- [Processing Different Data Types](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-2.md): This chapter teaches you how to process different data types using n8n core nodes, including working with HTML/XML data using the HTML and XML nodes, and date/time data using the Date & Time and Schedule Trigger nodes. It also covers how to use the Wait node to pause workflow execution.
- [Merging and Splitting Data](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-3.md): This chapter explains how to merge and split data in n8n, including one-way and two-way syncing, and provides a hands-on exercise using the Merge node to combine data from different sources.
- [Dealing with errors in workflows](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-4.md): This document explains how to troubleshoot and handle errors in n8n workflows by checking execution logs, creating error workflows with the Error Trigger node, and using the Stop and Error node to throw custom exceptions for data validation.
- [Automating a business workflow](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-5/chapter-5.0.md): This chapter guides users through automating a business workflow involving data from multiple sources, report generation, and error monitoring using n8n, including steps for data merging, report creation, and setting up error notifications via email and Discord.
- [Workflow 1: Merging Data](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-5/chapter-5.1.md): This document describes a workflow that merges customer data from Airtable with country data from the REST Countries API to add region and subregion information to the customer records. The workflow uses Airtable, HTTP Request, and Merge nodes to accomplish this task. It outlines the steps to retrieve customer data, fetch country information, merge the data based on country name, and update the Airtable records with the missing region and subregion details. The document also includes quiz questions related to the workflow.
- [Workflow 2: Generating Reports](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-5/chapter-5.2.md): This document outlines a workflow that merges data from multiple sources, transforms binary data, generates files, and sends notifications. The workflow is divided into three parts: getting data, generating files for regional sales, and generating files for total sales, and utilizes nodes such as HTTP Request, Airtable, Merge, Sort, If, Convert to File, Gmail, and Discord. It also includes quiz questions to test understanding.
- [Workflow 3: Monitoring Workflow Errors](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-5/chapter-5.3.md): This guide explains how to create an error workflow in n8n to monitor a main workflow and send notifications via Discord upon encountering errors, including instructions on configuring the Error Trigger and Discord nodes, and setting the error workflow for the main workflow.
- [Test your knowledge | n8n Docs](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two/chapter-6.md): This page congratulates the user for finishing the n8n Course Level 2 and encourages them to test their knowledge with a quiz, create new workflows, and explore n8n's features.
- [Level Two: Introduction](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses/level-two.md): This n8n course is for users who want to automate complex business processes and dive deeper into n8n after taking the Level 1 course, focusing on working with data, processing different data types, merging data from different sources, using functions and JavaScript code, and dealing with error workflows.
- [Text courses](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/courses.md): This page introduces n8n's text courses, designed to help users of all technical levels automate tasks and improve efficiency using no-code tools.
- [Create and Edit Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/credentials/add-edit-credentials.md): This page describes how to create and edit credentials in n8n, which are securely stored authentication information used to connect workflows to external services like APIs and databases, including how to use expressions to set credentials dynamically.
- [Credential Sharing in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/credentials/credential-sharing.md): This document explains how to share n8n credentials with other users or projects, granting them access to use the credential in their workflows without being able to view or edit the credential details; this feature is available on all Cloud plans, and Enterprise self-hosted plans.
- [Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/credentials.md): Credentials are private pieces of information issued by apps and services to authenticate you as a user and allow you to connect and share information between the app or service and the n8n node.
- [Binary Data in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/binary-data.md): This page provides resources for working with binary data in n8n workflows, including dedicated nodes, code examples, and configuration options for self-hosted instances.
- [Data Editing](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-editing.md): This document describes how to edit pinned data in n8n to test different scenarios during development, including how to edit output data and use data from previous executions.
- [Item Linking in the Code Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-mapping/data-item-linking/item-linking-code-node.md): This document explains how to use item linking in n8n's Code node to access data from previous items, focusing on scenarios where manual configuration of the `pairedItem` property is required when adding or returning new items with more than one incoming item.
- [Item Linking Concepts](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-mapping/data-item-linking/item-linking-concepts.md): This document provides a conceptual overview of item linking in n8n, a feature that links output items to the input items that the node used to generate them, creating a chain of items that you can work back along to access previous items, which is important for building custom nodes or using the Code node.
- [Item Linking Errors](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-mapping/data-item-linking/item-linking-errors.md): This document describes common item linking errors in n8n, which occur when n8n cannot determine the correct item to use when referencing data from previous nodes using the `.item` expression, and provides solutions for fixing these errors, including using alternative methods like `.first()`, `.last()`, or `.all()[index]` or addressing the root cause of the broken or ambiguous thread.
- [Item Linking for Node Creators](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-mapping/data-item-linking/item-linking-node-building.md): This guide explains how to implement item linking in programmatic-style nodes in n8n to ensure data from preceding items can be accessed correctly, focusing on setting the `pairedItem` property for proper expression evaluation in other nodes.
- [Data item linking](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-mapping/data-item-linking.md): This document explains data item linking in n8n, including concepts, node creation, working with data paths, and troubleshooting errors.
- [Data Mapping in Expressions Editor](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-mapping/data-mapping-expressions.md): This document explains how to access linked items in the n8n expressions editor, providing examples for accessing linked items in a previous node's output and the current node's input.
- [Data Mapping in the UI](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-mapping/data-mapping-ui.md): Data mapping in n8n refers to referencing data from previous nodes within the user interface, achieved through the expression editor or by dragging and dropping data from the INPUT panel into parameters to automatically generate expressions.
- [Data Mocking](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-mocking.md): This document explains how to simulate or fake data in n8n for workflow development, which avoids repeated calls to data sources, allows working with small datasets, and prevents overwriting live data.
- [Data Pinning](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-pinning.md): This document explains how to use data pinning in n8n to save node output data and reuse it in subsequent workflow executions during development, which helps avoid repeated requests to external systems and ensures data consistency for testing.
- [Data structure](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/data-structure.md): In n8n, all data passed between nodes is an array of objects with a specific structure, including JSON and binary data, and nodes can process multiple items.
- [Schema Preview](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/schema-preview.md): Schema Preview in n8n allows users to view the expected data schema from a previous node without needing credentials or execution, enabling workflow construction with field selection for subsequent nodes.
- [Transforming Data in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data/transforming-data.md): This document explains how to transform data into n8n's data structure using nodes like Aggregate, Limit, Remove Duplicates, Sort, Split Out, and Summarize.
- [Data in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/data.md): This document explains how n8n handles data, covering data structures, data flow within nodes, data transformation, code usage, pinning, editing, data mapping, and item linking.
- [n8n Embed Configuration](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/embed/configuration.md): This document describes the configuration options for n8n Embed, including authentication methods like User management, LDAP, and SAML, as well as credential overwrites using environment variables or REST APIs, environment variables relevant for hosted solutions, and backend hooks for extending n8n functionality.
- [Deployment](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/embed/deployment.md): This document covers deployment strategies for n8n, including user data management, backups, and handling restarts to minimize missed executions, recommending solutions like Rook for data persistence and nightly backups.
- [Workflow management in Embed](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/embed/managing-workflows.md): This document outlines two options for managing workflows in an embedded n8n deployment: creating a workflow for each user or creating a single workflow and passing user credentials during execution, including the pros, cons, and steps for each approach, with a focus on using the Editor UI and API calls to manage user credentials and workflows.
- [Prerequisites](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/embed/prerequisites.md): This document outlines the prerequisites for using n8n Embed, including CPU, database, and memory considerations, along with best practices for database setup and memory management.
- [White labelling](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/embed/white-labelling.md): This document explains how to customize the n8n frontend styling and assets, including theme colors, logos, and text, to match a specific brand identity, focusing on modifications within the design-system and editor-ui packages. It covers prerequisites like Git, Node.js, and npm, and provides instructions for customizing theme colors, logos, and text localization, including the window title. White labelling n8n requires an embed license.
- [Workflow Templates](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/embed/workflow-templates.md): This document explains how to use, disable, or create custom workflow template libraries when embedding n8n, including details on endpoints, query parameters, and data schema.
- [n8n Embed](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/embed.md): n8n Embed allows you to white label n8n or incorporate it into your software as part of your commercial product, but it is not available in Russia and Belarus.
- [External Secrets](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/external-secrets.md): This document explains how to configure n8n to use external secrets stores like AWS Secrets Manager, Azure Key Vault, GCP Secrets Manager, Infisical, and HashiCorp Vault to manage credentials, providing an extra layer of security and centralized management across multiple n8n environments.
- [Error Handling](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/flow-logic/error-handling.md): Learn how to handle errors in n8n workflows by creating error workflows and using the Stop And Error node to control how n8n responds to execution failures.
- [Execution order in multi-branch workflows](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/flow-logic/execution-order.md): This document explains how n8n's node execution order in multi-branch workflows depends on the n8n version and how to change the execution order in workflow settings.
- [Looping in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/flow-logic/looping.md): This document explains how looping works in n8n, which automatically handles repetitive processing of items in a workflow, and describes how to create loops using nodes like IF and Loop Over Items for specific scenarios, including exceptions where manual loop design is necessary.
- [Merging Data](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/flow-logic/merging.md): This document explains how to merge data streams in n8n using the Merge, Code, and Compare Datasets nodes, covering scenarios like merging data from different sources, handling multiple node executions, and comparing datasets before merging.
- [Splitting Workflows with Conditionals](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/flow-logic/splitting.md): Splitting workflows in n8n uses IF or Switch nodes to turn a single-branch workflow into a multi-branch workflow, allowing for the representation of complex logic.
- [Sub-workflows](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/flow-logic/subworkflows.md): This document explains how to create modular workflows in n8n by calling one workflow from another, using the "Execute Workflow" and "Execute Sub-workflow Trigger" nodes to set up parent and sub-workflows, define input data, and pass data between them.
- [Flow Logic](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/flow-logic.md): This document covers how to represent complex logic in n8n workflows, including splitting, merging, looping, waiting, sub-workflows, error handling, and execution order, using core nodes like IF, Switch, Merge, and Wait.
- [n8n Glossary](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/glossary.md): This glossary defines common terms used in n8n, including AI agent, AI chain, AI embedding, API, canvas, credential, expression, LangChain, LLM, node, project, template, trigger node, and workflow.
- [Contributing](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/help-community/contributing.md): This document outlines various ways to contribute to the n8n project, including reviewing n8n, helping the community, contributing workflow templates, building nodes, contributing to the code or documentation, writing blog articles, and referring candidates for open positions.
- [Get help with n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/help-community/help.md): This page provides information on how to get help with n8n, including the forum, email support, and the About n8n debug tool.
- [Database Structure](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/architecture/database-structure.md): This document describes the database structure of n8n, including the purpose of each table, the database and query technology used, and an entity relationship diagram.
- [CLI Commands](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/cli-commands.md): This document details the command-line interface (CLI) for n8n, which allows users to perform actions such as starting workflows, and exporting and importing workflows and credentials, without using the n8n editor. It provides instructions for running CLI commands in different installation environments, including npm and Docker, and covers various commands for managing workflows, credentials, licenses, user management, and security audits. The document also includes information on command flags and available options for each command. Finally, it explains how to reset user management, disable multi-factor authentication (MFA), and reset LDAP settings using the CLI.
- [Community Edition Features](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/community-edition-features.md): The n8n community edition includes almost all features except custom variables, environments, external secrets, external storage, log streaming, multi-main mode, projects, SSO, sharing, version control, and workflow history, with more features unlocked upon registration.
- [Configure n8n Base URL](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/base-url.md): This document explains how to configure the VUE_APP_URL_BASE_API environment variable to set the base URL for n8n's front end, which is necessary when hosting the front end and back end separately and requires a manual build of the n8n-editor-ui package.
- [Configure n8n to use your own certificate authority](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/custom-certificate-authority.md): Starting with version 1.42.0, you can configure n8n to use your own certificate authority or self-signed certificate by mounting a folder containing your certificates to `/opt/custom-certificates` in the container.
- [Encryption Key Configuration in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/encryption-key.md): This document explains how to set a custom encryption key in n8n using the N8N_ENCRYPTION_KEY environment variable, which is crucial for encrypting credentials, especially in queue mode.
- [Configure Workflow Timeout Settings](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/execution-timeout.md): This document explains how to configure workflow timeout settings in n8n, including setting a default timeout and a maximum execution time for individual workflows using the `EXECUTIONS_TIMEOUT` and `EXECUTIONS_TIMEOUT_MAX` environment variables.
- [Isolate n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/isolation.md): This document describes how to isolate a self-hosted n8n instance from n8n's servers by disabling diagnostics, version notifications, and templates using environment variables.
- [Enable Modules in Code Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/modules-in-code-node.md): The Code node in n8n restricts module importing for security, but this restriction can be lifted for built-in and external modules by setting the NODE_FUNCTION_ALLOW_BUILTIN and NODE_FUNCTION_ALLOW_EXTERNAL environment variables.
- [Enable Prometheus metrics](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/prometheus.md): This document describes how to enable Prometheus metrics in n8n using the `N8N_METRICS` environment variable, including how to configure which metrics and labels are exposed and how to enable queue metrics.
- [Set the self-hosted instance timezone](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/time-zone.md): The default timezone for self-hosted n8n instances is America/New_York, but it can be changed by setting the GENERIC_TIMEZONE environment variable to the desired timezone.
- [Configure n8n Webhooks with Reverse Proxy](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples/webhook-url.md): This document explains how to configure n8n webhook URLs when n8n is running behind a reverse proxy, ensuring correct webhook registration and display in the Editor UI.
- [Configuration Examples](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-examples.md): This document provides configuration examples for n8n, covering various use cases such as isolating n8n, configuring the base URL, setting a custom encryption key, and enabling Prometheus metrics.
- [Configuration Methods](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/configuration-methods.md): This document explains how to configure n8n using environment variables, including setting them via command line, configuration files, and Docker. It also covers using the `_FILE` suffix to load sensitive data from separate files, such as Docker Secrets and Kubernetes Secrets, for enhanced security. The document provides examples for npm and Docker, including how to format configurations as JSON. It references the environment variables reference and schema file for more details. 
- [Binary Data Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/binary-data.md): These environment variables configure how n8n stores binary data, including options for memory, filesystem, and external services like AWS S3, with settings for storage path and default mode.
- [Credentials environment variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/credentials.md): This document describes the environment variables used to configure credentials in n8n, including file-based configuration and credential overwrites.
- [Database Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/database.md): This document outlines the environment variables used to configure either a SQLite or PostgreSQL database for a self-hosted n8n instance, including variables for connection details, SSL configuration, and performance tuning.
- [Deployment Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/deployment.md): This document lists the deployment configuration options for self-hosted n8n instances, including access URLs, templates, encryption, and server details.
- [Endpoints Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/endpoints.md): This document lists environment variables for customizing endpoints in n8n, including variables for payload size, metrics configuration, endpoint paths, and webhook URLs.
- [Executions Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/executions.md): This document details the environment variables that configure workflow execution settings in n8n, including execution mode, timeouts, data saving options, and pruning configurations. 
- [External Data Storage Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/external-data-storage.md): This document describes the environment variables used to configure external data storage, specifically S3-compatible storage, for n8n.
- [External Hooks Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/external-hooks.md): This document describes the environment variables `EXTERNAL_HOOK_FILES` and `EXTERNAL_FRONTEND_HOOKS_URLS` used to configure external hooks in n8n, which allow execution of custom code on specific operations, with file-based configuration options and links to backend and frontend hook examples and formatting details.
- [External Secrets Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/external-secrets.md): This document describes how to use external secrets stores to manage credentials for n8n, including the file-based configuration option and the update interval setting.
- [Insights Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/insights.md): This document describes the environment variables that can be used to configure the Insights feature in n8n, which provides visibility into workflow performance over time, including options for disabling the feature, setting batch sizes, and configuring compaction and flush intervals.
- [License environment variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/licenses.md): This document lists the environment variables related to n8n licensing, including variables for activation key, auto-renewal, floating entitlements, license server URL, and tenant ID.
- [Logs Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/logs.md): This page lists environment variables for setting up logging and debugging in n8n, covering general n8n logs and log streaming, including options for log level, output, file management, database logging, and event bus configuration.
- [Nodes Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/nodes.md): This document lists the environment variables for managing nodes in n8n, including specifying which nodes to load or exclude, importing modules in the Code node, enabling community nodes, and configuring the NPM registry for community packages.
- [Queue Mode Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/queue-mode.md): This document lists environment variables for configuring n8n to run in queue mode, which provides the best scalability, including Redis connection details, health check settings, worker configurations, and multi-main setup options.
- [Security Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/security.md): This document details the security-related environment variables available in n8n, including options for restricting file and environment variable access, configuring cookie security, and setting the abandoned workflow audit period.
- [Source control environment variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/source-control.md): This document describes the environment variables used to configure Git-based source control in n8n, which allows linking a Git repository to an n8n instance and managing environments.
- [Task runner environment variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/task-runners.md): This document lists and describes the environment variables used to configure task runners in n8n, which execute code defined by the Code node.
- [Timezone and Localization Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/timezone-localization.md): This document describes the environment variables `GENERIC_TIMEZONE` and `N8N_DEFAULT_LOCALE` that configure the n8n instance timezone and locale, which are important for schedule nodes and displaying UI strings in the selected locale.
- [User Management, SMTP, and Two-Factor Authentication Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/user-management-smtp-2fa.md): This document lists environment variables for configuring user management, SMTP settings, and two-factor authentication in n8n, including options for email templates, JWT secrets, and MFA enablement.
- [Workflows environment variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables/workflows.md): This document describes the environment variables that can be used to configure n8n workflows, including options for disabling onboarding tips, setting the activation batch size, configuring caller policies, disabling workflow tags, and setting the default workflow name.
- [Environment Variables Overview](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/environment-variables.md): This document lists the environment variables that can be used to configure n8n when self-hosting, covering aspects such as binary data, credentials, database, deployment, endpoints, and more.
- [Supported Databases and Settings](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/supported-databases-settings.md): This document describes the supported databases, including PostgresDB and SQLite, that n8n can use to store credentials, executions, and workflows, along with the necessary environment variables and configurations for each. 
- [Task Runners](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/task-runners.md): This document explains how task runners work in n8n, which are used to execute user-provided JavaScript code in the Code node, and how to configure them in internal and external modes, including setting up external mode with environment variables.
- [User Management Self-Hosted](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration/user-management-self-hosted.md): This document explains how to configure a self-hosted n8n instance to support user management, covering SMTP setup, initial user setup within the app, and the process of inviting new users to the instance.
- [Environment Variables Overview](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/configuration.md): This document lists the environment variables that can be used to configure n8n when self-hosting, covering various aspects such as database, deployment, security, and workflows; it also discusses file-based configuration options to provide settings.
- [Configure n8n Base URL](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/base-url.md): Instructions for configuring the VUE_APP_URL_BASE_API environment variable to host n8n's front end and back end separately, requiring a manual build of the n8n-editor-ui package.
- [Configure n8n to Use a Custom Certificate Authority](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/custom-certificate-authority.md): This document explains how to configure n8n to use a custom certificate authority or self-signed certificate by mounting a directory containing the certificates to `/opt/custom-certificates` within the container, a feature available in version 1.42.0 and later.
- [Encryption Key Configuration in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/encryption-key.md): This document explains how to set a custom encryption key in n8n using the N8N_ENCRYPTION_KEY environment variable, which is essential for encrypting credentials before saving them to the database, especially in queue mode. It also directs users to the environment variables reference page.
- [Configure Workflow Timeout Settings](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/execution-timeout.md): This document describes how to configure workflow timeout settings in n8n, including setting a global timeout and a maximum execution time for individual workflows.
- [Isolate n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/isolation.md): This document explains how to isolate a self-hosted n8n instance from n8n's servers by disabling diagnostics, version notifications, and templates using environment variables.
- [Enable modules in Code node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/modules-in-code-node.md): The Code node in n8n restricts importing modules for security reasons, but this restriction can be lifted for built-in and external modules by setting the NODE_FUNCTION_ALLOW_BUILTIN and NODE_FUNCTION_ALLOW_EXTERNAL environment variables respectively.
- [Enable Prometheus metrics](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/prometheus.md): This document describes how to enable Prometheus metrics in n8n using the `N8N_METRICS` environment variable and how to configure which metrics and labels are exposed, including queue metrics for the main instance when in single-main mode.
- [Set the self-hosted instance timezone](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/time-zone.md): The default timezone for n8n self-hosted instances is America/New_York, but can be changed by setting the GENERIC_TIMEZONE environment variable.
- [Configure n8n webhooks with reverse proxy](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples/webhook-url.md): This document explains how to configure n8n webhook URLs when n8n is running behind a reverse proxy, setting the WEBHOOK_URL environment variable to ensure correct URL display and registration with external services.
- [Configuration Examples](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-examples.md): This document provides configuration examples for n8n, covering topics such as isolating n8n, configuring the base URL, setting custom encryption keys, and enabling Prometheus metrics.
- [Configuration Methods](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/configuration-methods.md): This document outlines the different methods for configuring n8n, including using environment variables via the command line or a configuration file, with specific examples for npm and Docker deployments, and details on keeping sensitive data secure in separate files.
- [Binary Data Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/binary-data.md): These environment variables configure how n8n stores binary data, including options for memory, filesystem, and external services like AWS S3, with settings for storage paths and default modes.
- [Credentials Environment Variables in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/credentials.md): This document describes how to configure credentials using environment variables in n8n, including file-based configuration and credential overwrites.
- [Database Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/database.md): This document outlines the environment variables used to configure either SQLite or PostgreSQL databases for self-hosted n8n instances, including connection details, SSL configuration, and performance-related settings.
- [Deployment Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/deployment.md): This document lists the configurable environment variables available for self-hosting an n8n instance, covering options like access URLs, templates, encryption keys, server details, and telemetry.
- [Endpoints Environment Variables in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/endpoints.md): This document lists environment variables for customizing endpoints in n8n, including settings for payload size, metrics, and webhook configurations.
- [Executions Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/executions.md): This document lists environment variables for configuring workflow execution settings in n8n, including execution mode, timeouts, data saving policies, pruning, and concurrency limits.
- [External Data Storage Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/external-data-storage.md): This document describes the environment variables used to configure external data storage for n8n, including S3-compatible storage options, bucket names, regions, access keys, and secrets.
- [External Hooks Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/external-hooks.md): This document describes the environment variables `EXTERNAL_HOOK_FILES` and `EXTERNAL_FRONTEND_HOOKS_URLS` used to configure external hooks in n8n, which are executed when specific operations run, and it refers to backend and frontend hook examples and file formatting information.
- [External secrets environment variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/external-secrets.md): This document describes how to use external secrets stores to manage credentials for n8n, including the update interval setting.
- [Insights Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/insights.md): This document provides a comprehensive list of environment variables that can be used to configure the Insights feature in n8n, which offers visibility into workflow performance. It details variables related to disabling Insights, data compaction, and data flushing intervals and batch sizes.
- [License environment variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/licenses.md): Details the environment variables used to manage n8n licenses, including auto-renewal, floating entitlements, and license server configuration.
- [Logs environment variables | n8n Docs](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/logs.md): This page lists environment variables for setting up debugging logs in n8n, including options for log level, output, file management, and database logging, as well as variables for log streaming.
- [Nodes Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/nodes.md): This document lists the environment variables for managing nodes in n8n, including specifying which nodes to load or exclude, importing built-in or external modules in the Code node, and enabling community nodes.
- [Queue Mode Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/queue-mode.md): This document describes the environment variables used to configure n8n when running in queue mode, which provides the best scalability, including settings for Redis, health checks, worker locking, and multi-main setup.
- [Security Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/security.md): This page documents the security-related environment variables available in n8n, including options to block environment variable access, restrict file access, configure cookie security, and set the abandoned workflow audit period.
- [Source Control Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/source-control.md): This document describes the environment variables used to configure Git-based source control in n8n, including setting the default SSH key type.
- [Task Runner Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/task-runners.md): This document lists and describes the environment variables used to configure task runners in n8n, which execute code defined by the Code node, including variables for the n8n instance, task runner launcher, and the task runner itself.
- [Timezone and localization environment variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/timezone-localization.md): This document describes the environment variables `GENERIC_TIMEZONE` and `N8N_DEFAULT_LOCALE` used to configure the timezone and localization settings of an n8n instance, which are important for schedule nodes and displaying UI strings in the selected locale.
- [User Management, SMTP, and Two-Factor Authentication Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/user-management-smtp-2fa.md): This document lists environment variables for configuring user management, SMTP settings, and two-factor authentication in n8n, including options for email templates, JWT secrets, and MFA enablement.
- [Workflows Environment Variables](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables/workflows.md): This document describes the environment variables that can be used to configure n8n workflows, including options for disabling onboarding tips, setting batch sizes for workflow activation, defining workflow caller policies, disabling workflow tags, and setting the default name for new workflows.
- [Environment Variables Overview](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/environment-variables.md): This document lists the environment variables that can be used to configure n8n when self-hosting, covering various aspects such as database, security, and workflows, and also describes the file-based configuration option.
- [Supported Databases and Settings](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/supported-databases-settings.md): This document details the supported databases, including PostgresDB and SQLite, and their specific configurations for n8n, covering shared settings, connection details, required permissions for PostgresDB, TLS configurations, and the default location for SQLite.
- [Task Runners](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/task-runners.md): This document explains how n8n task runners work, how to configure them in internal and external modes, and how they are used to execute user-provided JavaScript code securely and efficiently, especially within Code nodes.
- [User Management Self-Hosted](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables/user-management-self-hosted.md): This document explains how to configure a self-hosted n8n instance to support user management, covering SMTP setup, initial owner account creation, and inviting new users.
- [Environment Variables Overview](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/environment-variables.md): This document lists the environment variables that can be used to configure n8n when self-hosting, covering various aspects such as binary data, credentials, database, deployment, and security.
- [Docker Installation](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/docker.md): This document outlines how to install n8n using Docker, including prerequisites, setup instructions, PostgreSQL configuration, timezone settings, updating n8n, and using n8n with a tunnel for local development.
- [npm Installation](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/npm.md): This document outlines how to install and update n8n using npm, including instructions for trying n8n with npx, using a tunnel for webhooks, reverting upgrades, and troubleshooting on Windows.
- [Hosting n8n on Amazon Web Services](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/server-setups/aws.md): This guide details how to self-host n8n on Amazon Web Services (AWS) using EKS (Kubernetes), Postgres, and reverse proxy for scalable deployment.
- [Hosting n8n on Azure](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/server-setups/azure.md): This guide details how to self-host n8n on Azure using Azure Kubernetes Service (AKS) with Postgres as a database, covering prerequisites, configuration, deployment, and DNS setup.
- [Digital Ocean](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/server-setups/digital-ocean.md): This guide details how to host n8n on a DigitalOcean droplet, utilizing Caddy as a reverse proxy and Docker Compose for application component management.
- [Docker Compose](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/server-setups/docker-compose.md): This document guides users on installing and configuring n8n with Docker Compose, including setting up DNS, creating environment files, and configuring Traefik for routing and TLS encryption.
- [Hosting n8n on Google Cloud](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/server-setups/google-cloud.md): This guide details how to self-host n8n on Google Cloud using Kubernetes, Postgres, and persistent volumes for scalable and robust deployments.
- [Heroku](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/server-setups/heroku.md): This guide explains how to host n8n on Heroku using Docker Compose, Heroku's PostgreSQL service, and a one-click deployment button.
- [Hetzner](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/server-setups/hetzner.md): This guide details how to self-host n8n on a Hetzner cloud server using Caddy as a reverse proxy and Docker Compose for managing application components.
- [Updating self-hosted n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/installation/updating.md): This document provides instructions and tips for updating self-hosted n8n instances, emphasizing the importance of frequent updates and testing in a separate environment before applying changes to the production instance, with links to specific instructions for npm and Docker installations.
- [Logging](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/logging-monitoring/logging.md): This document describes how to configure and use logging in n8n, covering setup, log levels, development practices, and future front-end logging capabilities.
- [Monitoring](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/logging-monitoring/monitoring.md): This document describes the /healthz, /healthz/readiness, and /metrics API endpoints that can be used to monitor the status of an n8n instance, including information on how to enable these endpoints for self-hosted instances.
- [Scaling Binary Data in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/scaling/binary-data.md): This document explains how to handle binary data in n8n, recommending the use of filesystem mode to prevent crashes when working with large files, and detailing binary data pruning as part of execution data pruning.
- [Self-hosted Concurrency Control](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/scaling/concurrency-control.md): This document explains how to configure concurrency control for self-hosted n8n instances to limit the number of concurrent production executions and prevent performance degradation, including details on enabling it, monitoring, and its relation to queue mode.
- [Execution Data](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/scaling/execution-data.md): This document explains how to manage n8n execution data to prevent database growth, including reducing saved data by configuring workflow settings and enabling data pruning to automatically delete old executions, along with specific considerations for SQLite and binary data.
- [External Storage for Binary Data](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/scaling/external-storage.md): This document explains how to configure n8n to store binary data produced by workflow executions in external storage, specifically AWS S3, to avoid relying on the filesystem for large amounts of binary data.
- [Memory-related errors](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/scaling/memory-errors.md): This page provides guidance on identifying and resolving memory-related errors in n8n, which can occur when workflow executions require more memory than available, and suggests strategies such as increasing available memory or reducing memory consumption by splitting data, avoiding certain nodes, and using sub-workflows.
- [Performance and Benchmarking](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/scaling/performance-benchmarking.md): This document outlines n8n's performance benchmarking, describing factors that affect performance and providing single and multi-instance example benchmarks using a Webhook Trigger node and Edit Fields node.
- [Configuring n8n Queue Mode](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/scaling/queue-mode.md): This document explains how to configure n8n to run in queue mode for improved scalability, using multiple n8n instances with a main instance distributing workflow information to worker instances via Redis.
- [Block Access to Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/securing/blocking-nodes.md): The NODES_EXCLUDE environment variable can be used to block users from accessing specific n8n nodes for security reasons.
- [Disable public REST API](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/securing/disable-public-api.md): This document explains how to disable the n8n public REST API and API playground by setting environment variables, enhancing the security of your n8n installation.
- [Hardening task runners](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/securing/hardening-task-runners.md): Recommendations to harden n8n task runners, which execute code from the Code node, by running them as sidecars in external mode to increase isolation.
- [Securing n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/securing/overview.md): This document outlines various methods for securing an n8n instance, including conducting security audits, setting up SSL and SSO, using two-factor authentication, disabling the public API, opting out of data collection, and blocking certain nodes.
- [Security Audit](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/securing/security-audit.md): This document describes how to run a security audit on an n8n instance to detect common security issues using the CLI, API, or n8n node, and outlines the contents of the generated risk reports, including credentials, database, file system, nodes, and instance information.
- [Set up SSL](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/securing/set-up-ssl.md): This document outlines two methods for enabling TLS/SSL in n8n: using a reverse proxy (recommended) or directly passing certificates into n8n via environment variables.
- [Set up SAML SSO](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/securing/set-up-sso.md): This document provides a guide to setting up SAML single sign-on (SSO) with n8n, including general setup, Okta configuration, troubleshooting, and user management.
- [Telemetry Opt-Out](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/securing/telemetry-opt-out.md): This document provides instructions on how to opt out of data collection in self-hosted n8n installations by configuring environment variables to disable telemetry events and version notifications.
- [Self-hosted AI Starter Kit](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/starter-kits/ai-starter-kit.md): The Self-hosted AI Starter Kit is an open-source Docker Compose template that bootstraps a local AI and low-code development environment with n8n, Ollama, Qdrant, and PostgreSQL, enabling the creation of AI agents, document summaries, Slackbots, and financial document analysis tools.
- [Supported Databases and Settings](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/supported-databases-settings.md): This document outlines the supported databases (SQLite and PostgresDB) for n8n, detailing the necessary environment variables and settings for each, including database connection details, SSL configuration, and required permissions. 
- [User Management Self-Hosted](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting/user-management-self-hosted.md): This document explains how to configure a self-hosted n8n instance to support user management, covering SMTP setup, initial in-app setup, and inviting new users.
- [Self-hosting n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/hosting.md): This document provides guides and documentation for self-hosting n8n, covering installation, configuration, authentication, scaling, security, and starter kits, while also outlining the technical knowledge prerequisites and recommending n8n Cloud for users without server management experience.
- [n8n Docs Home](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/index.md): This page introduces n8n, a fair-code workflow automation tool with AI capabilities, and provides links to quickstarts, options for choosing the right n8n setup, exploring integrations, and building AI functionality.
- [Insights](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/insights.md): Insights provide n8n instance owners and admins with visibility into workflow performance over time, including key metrics, detailed dashboards, and time saved calculations, with configurable metrics collection and data only collected from production executions after version 1.89.0.
- [Action Network Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.actionnetwork.md): The Action Network node allows n8n to automate tasks within Action Network, such as managing events, people, tags, and signatures, and can be used as an AI tool.
- [ActiveCampaign Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.activecampaign.md): The ActiveCampaign node allows users to automate tasks within ActiveCampaign and integrate it with other applications, supporting operations for accounts, contacts, deals, e-commerce, lists, and tags.
- [Adalo Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.adalo.md): The Adalo node allows you to automate tasks within Adalo and integrate it with other applications, supporting operations like creating, getting, updating, and deleting databases, records, and collections.
- [Affinity Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.affinity.md): The Affinity node allows you to automate tasks in Affinity and integrate it with other applications, with built-in support for managing lists, entries, organizations, and persons.
- [Agile CRM Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.agilecrm.md): The Agile CRM node allows n8n to automate tasks in Agile CRM, integrating it with other applications for creating, getting, updating, and deleting companies, contracts, and deals.
- [Airtable Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.airtable/common-issues.md): This document provides solutions to common errors encountered while using the Airtable node in n8n, such as credential problems and rate limits.
- [Airtable Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.airtable.md): The Airtable node allows n8n to automate tasks within Airtable, integrating it with other applications through operations like appending, deleting, listing, reading, and updating data in tables, and it also provides templates and examples for common use cases.
- [Airtop Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.airtop.md): The Airtop node allows n8n to automate tasks within Airtop, integrating it with other applications for web browser automation, querying, scraping, and interaction with web pages.
- [AMQP Sender Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.amqp.md): The AMQP Sender node allows users to automate tasks within AMQP Sender and integrate it with other applications, particularly for sending messages, within the n8n workflow automation platform.
- [APITemplate.io Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.apitemplateio.md): The APITemplate.io node allows users to automate tasks within APITemplate.io and integrate it with other applications, supporting operations such as getting accounts and creating images and PDFs.
- [Asana Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.asana.md): The Asana node allows n8n to automate tasks in Asana, integrating it with other applications for creating, updating, deleting, and retrieving users, tasks, projects, and subtasks.
- [Automizy Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.automizy.md): The Automizy node allows users to automate tasks within Automizy and integrate it with other applications, offering support for contact and list management operations such as creating, reading, updating, and deleting.
- [Autopilot Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.autopilot.md): The Autopilot node allows users to automate tasks within Autopilot and integrate it with other applications, supporting operations such as managing contacts and lists, and adding contacts to journeys. The node is compatible with Autopilot, which has been rebranded as Ortto, but the credentials and nodes are not compatible with the new Ortto API. This documentation provides details on available operations, credential setup, and links to templates and examples for using the Autopilot node in n8n workflows.
- [AWS Certificate Manager Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awscertificatemanager.md): The AWS Certificate Manager node allows users to automate tasks within AWS Certificate Manager, such as creating, deleting, getting, and renewing SSL certificates, and integrate it with other applications.
- [AWS Comprehend Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awscomprehend.md): The AWS Comprehend node allows users to automate tasks within AWS Comprehend and integrate it with other applications, including identifying dominant languages and analyzing text sentiment; it also provides guidance on setting up authentication and using the HTTP Request node for unsupported operations.
- [AWS DynamoDB Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awsdynamodb.md): The AWS DynamoDB node lets you automate tasks in AWS DynamoDB, and integrate AWS DynamoDB with other applications, including creating, reading, updating, and deleting items and records on a database.
- [AWS Elastic Load Balancing Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awselb.md): The AWS Elastic Load Balancing node allows users to automate tasks within AWS ELB and integrate it with other applications, supporting operations such as managing listener certificates and load balancers (application and network load balancers).
- [AWS Lambda Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awslambda.md): The AWS Lambda node allows users to automate tasks and integrate AWS Lambda with other applications within n8n, including invoking functions, and can be used as an AI tool.
- [AWS Rekognition Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awsrekognition.md): The AWS Rekognition node allows you to automate tasks in AWS Rekognition and integrate it with other applications, including analyzing images.
- [AWS S3 Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awss3.md): Automate tasks in AWS S3 and integrate it with other applications using the AWS S3 node in n8n, which supports bucket and file operations like creation, deletion, copying, downloading, and searching, and can be used as an AI tool.
- [AWS SES Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awsses.md): The AWS SES node allows automating tasks in AWS Simple Email Service (SES), such as managing custom verification emails, sending emails and templates, and managing templates, integrating SES with other applications. It supports operations like creating, getting, deleting, sending, and updating templates and emails, and can be used as an AI tool. If an operation is not supported, the HTTP Request node can be used to call the service's API.
- [AWS SNS Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awssns.md): The AWS SNS node allows users to automate tasks in AWS SNS and integrate it with other applications, such as publishing messages to a topic.
- [AWS SQS Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awssqs.md): The AWS SQS node allows users to automate tasks within AWS Simple Queue Service (SQS) and integrate it with other applications, with built-in support for sending messages and the option to use the HTTP Request node for unsupported operations.
- [AWS Textract Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awstextract.md): The AWS Textract node allows users to automate tasks within AWS Textract, such as analyzing invoices, and integrate it with other applications within n8n workflows.
- [AWS Transcribe Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.awstranscribe.md): The AWS Transcribe node allows users to automate tasks within AWS Transcribe, such as creating, deleting, and retrieving transcription jobs, and integrate it with other applications within n8n workflows.
- [Azure Cosmos DB Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.azurecosmosdb.md): Automate workflows in Azure Cosmos DB and integrate it with other applications using the Azure Cosmos DB node in n8n, which supports operations like creating, getting, updating, and deleting containers and items.
- [Azure Storage Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.azurestorage.md): The Azure Storage node in n8n allows users to automate tasks within the Azure Storage service, including creating, getting, and deleting blobs and containers, and it can be integrated with other services in a workflow.
- [BambooHR Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.bamboohr.md): The BambooHR node allows users to automate tasks and integrate BambooHR with other applications within n8n, supporting operations such as managing company reports, employees, and documents.
- [Bannerbear Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.bannerbear.md): The Bannerbear node allows users to automate tasks within Bannerbear, such as creating and retrieving images and templates, and integrates Bannerbear with other applications.
- [n8n Baserow Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.baserow.md): The Baserow node allows n8n to automate tasks within Baserow, such as creating, retrieving, and updating rows, and integrate it with other applications, enhancing AI agent capabilities with automatically set parameters.
- [Beeminder Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.beeminder.md): The Beeminder node allows you to automate tasks within Beeminder and integrate it with other applications, with built-in support for managing data points and more; if an operation is not supported, the HTTP Request node can be used to call the Beeminder API.
- [Bitly Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.bitly.md): The Bitly node allows users to automate tasks within Bitly, such as creating, retrieving, and updating links, and integrate Bitly with other applications within n8n.
- [Bitwarden Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.bitwarden.md): The Bitwarden node allows n8n to automate tasks within Bitwarden and integrate it with other applications, supporting operations on collections, events, groups, and members.
- [Box Node Documentation](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.box.md): The Box node allows n8n to automate tasks within Box, like file and folder management, and integrate Box with other applications by creating, copying, deleting, searching, uploading, and downloading files and folders.
- [Brandfetch node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.brandfetch.md): The Brandfetch node allows users to automate tasks within Brandfetch and integrate it with other applications, offering functionalities such as retrieving company information, colors, data, fonts, industry, logos, and icons; it also provides links to templates and examples for integration.
- [Brevo Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.brevo.md): The Brevo node allows users to automate tasks within Brevo, such as managing contacts, attributes, and sending emails, and to integrate Brevo with other applications within n8n.
- [Bubble Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.bubble.md): The Bubble node allows users to automate tasks within Bubble and integrate it with other applications, supporting operations like creating, deleting, getting, and updating objects.
- [n8n Chargebee Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.chargebee.md): The Chargebee node allows n8n to automate tasks within Chargebee, like creating customers, retrieving invoices, and canceling subscriptions, and to integrate Chargebee with other applications.
- [CircleCI Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.circleci.md): The CircleCI node allows users to automate tasks and integrate CircleCI with other applications within n8n, including triggering and retrieving pipelines.
- [Webex by Cisco Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.ciscowebex.md): The Webex by Cisco node allows users to automate tasks within Webex and integrate it with other applications, supporting operations such as creating, getting, updating, and deleting meetings and messages.
- [Clearbit Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.clearbit.md): The Clearbit node allows users to automate tasks within Clearbit and integrate it with other applications, offering built-in support for features like autocompleting and looking up companies and persons.
- [ClickUp Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.clickup.md): The ClickUp node allows n8n to automate tasks within ClickUp, integrating it with other applications for creating, managing, and updating various elements like folders, checklists, tasks, and goals.
- [Clockify Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.clockify.md): The Clockify node allows users to automate tasks within Clockify and integrate it with other applications, with built-in support for managing projects, tags, tasks, and time entries. It supports operations like creating, updating, getting, and deleting these items. The node also provides templates and examples for time logging and project management. If an operation isn't supported, users can utilize the HTTP Request node to call the Clockify API. Credentials created for the Clockify node can be used in the HTTP Request node for custom API operations.
- [Cloudflare Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.cloudflare.md): The Cloudflare node allows users to automate tasks within Cloudflare, such as managing zone certificates, and integrate Cloudflare with other applications using n8n. It supports operations like deleting, getting, and uploading zone certificates. The node also provides templates for reporting phishing websites, integrating with Cloudflare Key-Value databases, and extracting data from Excel using Cloudflare Markdown conversion. If an operation isn't supported, users can utilize the HTTP Request node with the same credentials. Refer to Cloudflare's API documentation for more information.
- [Cockpit Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.cockpit.md): The Cockpit node allows you to automate tasks within Cockpit, such as creating collection entries, storing form submission data, and retrieving singletons, integrating it with other applications.
- [Coda Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.coda.md): The Coda node allows users to automate tasks within Coda and integrate it with other applications, supporting operations such as managing controls, formulas, tables, and views.
- [CoinGecko Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.coingecko.md): The CoinGecko node allows automating tasks within CoinGecko and integrating it with other applications, offering functionalities such as retrieving coin data, candlestick charts, historical data, prices, and market information, as well as accessing event data.
- [Contentful Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.contentful.md): The Contentful node allows users to automate tasks within Contentful and integrate it with other applications, offering built-in support for managing assets, content types, entries, locales, and spaces; it supports operations such as getting assets, retrieving content types, managing entries, accessing locales, and obtaining space information, and also provides templates for generating knowledge base articles, retrieving entries, and converting Markdown content to Contentful rich text.
- [ConvertKit Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.convertkit.md): The ConvertKit node allows automating tasks in ConvertKit, such as managing custom fields, forms, sequences, and tags, and integrating ConvertKit with other applications; it supports operations like creating/deleting custom fields, adding subscribers to forms/sequences, and managing tags for subscribers.
- [Copper Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.copper.md): The Copper node allows n8n to automate tasks in Copper, integrating it with other applications, and supports operations like creating, updating, deleting, and getting companies, customer sources, leads, projects, and tasks.
- [Cortex Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.cortex.md): The Cortex node allows n8n to automate tasks in Cortex, integrating it with other applications through operations like executing analyzers and responders, and retrieving job details.
- [CrateDB Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.cratedb.md): The CrateDB node allows users to automate tasks within CrateDB and integrate it with other applications, supporting operations like executing SQL queries, inserting rows, and updating rows in the database.
- [n8n Crowd.dev Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.crowddev.md): The Crowd.dev node allows users to automate tasks within the Crowd.dev platform and integrate it with other applications, with built-in support for managing members, notes, organizations, and tasks.
- [Customer.io Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.customerio.md): The Customer.io node allows n8n to automate tasks in Customer.io, integrate it with other applications, and supports operations like creating/updating customers, tracking events, and managing campaigns and segments.
- [DeepL Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.deepl.md): The DeepL node allows n8n to integrate with DeepL, automating tasks such as language translation, and can be used as an AI tool.
- [Demio Node Documentation](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.demio.md): The Demio node allows n8n to automate tasks within Demio, such as retrieving and registering events, as well as accessing reports, enabling integration with other applications.
- [DHL Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.dhl.md): The DHL node allows users to automate tasks within DHL and integrate it with other applications, including tracking shipments; it can also be used as an AI tool.
- [Discord Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.discord/common-issues.md): This document provides solutions to common issues encountered while using the Discord node in n8n, including adding extra fields to embeds and mentioning users and channels.
- [Discord Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.discord.md): The Discord node allows n8n to automate tasks within Discord, such as sending messages, managing channels, and interacting with members, and it supports waiting for responses to trigger subsequent actions in a workflow.
- [Discourse Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.discourse.md): The Discourse node allows n8n to automate tasks within Discourse, such as managing categories, groups, posts, and users, and integrates Discourse with other applications.
- [Disqus Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.disqus.md): The Disqus node allows n8n to automate tasks and integrate with Disqus, offering operations such as retrieving forum details, categories, threads, and posts within a forum.
- [Drift Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.drift.md): The Drift node allows n8n to automate tasks in Drift, like creating, updating, deleting, and getting contacts, and to integrate Drift with other applications.
- [Dropbox Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.dropbox.md): The Dropbox node allows n8n to integrate with Dropbox, automating tasks like creating, downloading, moving, and copying files and folders, and it supports using Dropbox credentials and custom API operations.
- [Dropcontact Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.dropcontact.md): The Dropcontact node allows users to automate tasks within Dropcontact and integrate it with other applications, including fetching and enriching contacts, within the n8n automation platform.
- [E-goi Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.egoi.md): The E-goi node allows users to automate tasks in E-goi and integrate it with other applications, with built-in support for managing contacts.
- [Elasticsearch Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.elasticsearch.md): The Elasticsearch node allows n8n to automate tasks within Elasticsearch, such as creating, updating, deleting, and retrieving documents and indexes, and can be used as an AI tool.
- [Elastic Security Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.elasticsecurity.md): The Elastic Security node allows users to automate tasks within Elastic Security and integrate it with other applications, supporting operations such as creating, updating, deleting, and retrieving cases, as well as managing case comments, tags, and connectors.
- [Emelia Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.emelia.md): The Emelia node allows n8n to automate tasks in Emelia, such as creating campaigns and managing contacts, and integrate Emelia with other applications.
- [ERPNext Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.erpnext.md): The ERPNext node allows users to automate tasks within ERPNext and integrate it with other applications, supporting operations such as creating, updating, retrieving, and deleting documents, and it can also be used as an AI tool.
- [Facebook Graph API Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.facebookgraphapi.md): The Facebook Graph API node allows users to automate tasks within the Facebook Graph API, integrating it with other applications using queries such as GET, POST, and DELETE for various parameters like host URL and request methods.
- [FileMaker Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.filemaker.md): The FileMaker node allows you to automate tasks within FileMaker and integrate it with other applications, supporting operations like creating, finding, editing, and deleting records, as well as performing scripts. It also highlights available templates for common use cases, such as integrating with Xero or converting data to flat files.
- [Flow Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.flow.md): The Flow node allows n8n to automate tasks within Flow and integrate it with other applications, supporting operations like creating, updating, and retrieving tasks; it also provides links to Flow credentials setup and showcases available templates and examples.
- [Freshdesk Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.freshdesk.md): The Freshdesk node allows users to automate tasks within Freshdesk, such as creating, updating, deleting, and retrieving contacts and tickets, and integrate Freshdesk with other applications.
- [Freshservice Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.freshservice.md): The Freshservice node allows n8n to automate tasks within Freshservice, integrating it with other applications for managing agents, tickets, and various other Freshservice objects like departments, products, and requesters.
- [Freshworks CRM Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.freshworkscrm.md): The Freshworks CRM node allows you to automate tasks within Freshworks CRM and integrate it with other applications, supporting operations such as creating, updating, deleting, and retrieving accounts, appointments, contacts, deals, and more.
- [GetResponse Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.getresponse.md): The GetResponse node allows n8n to automate tasks in GetResponse, such as creating, updating, deleting, and getting contacts, and integrate GetResponse with other applications.
- [n8n Ghost Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.ghost.md): The Ghost node allows automating tasks in Ghost, such as creating, updating, deleting, and retrieving posts, and integrating Ghost with other applications using the Admin and Content APIs.
- [GitHub Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.github.md): The GitHub node allows n8n to integrate with GitHub, automating tasks such as file management, issue tracking, release management, and user administration; it supports operations like creating, updating, deleting, and editing files, repositories, issues, releases, and users..
- [GitLab Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gitlab.md): The GitLab node allows users to automate tasks in GitLab and integrate it with other applications, supporting operations like creating, updating, and managing issues, repositories, releases, and users.
- [Gmail Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gmail/common-issues.md): This document provides solutions to common errors encountered while using the Gmail node in n8n, such as removing n8n attribution, resolving "Forbidden" or "401 unauthorized" errors, and addressing "Bad request" errors due to incorrect IDs.
- [Gmail Draft Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gmail/draft-operations.md): This document explains how to use the Draft operations in the n8n Gmail node to create, delete, get, or list drafts.
- [Gmail Node Label Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gmail/label-operations.md): This document explains how to use the Label operations in the Gmail node to create, delete, get a label, or list labels in Gmail, covering parameters and options for each operation. It also links to the Gmail API documentation and provides guidance on common issues.
- [Gmail Message Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gmail/message-operations.md): The Gmail Message operations allow you to send, reply to, delete, mark read or unread, add a label to, remove a label from, get a message, or get a list of messages in Gmail using the n8n Gmail node.
- [Gmail Node Thread Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gmail/thread-operations.md): This document describes the thread operations available in the Gmail node, including adding/removing labels, deleting, getting, replying to, trashing, and untrashing threads.
- [Gmail Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gmail.md): The Gmail node allows users to automate tasks within Gmail and integrate it with other applications, supporting operations such as managing drafts, labels, messages, and threads, and it can also be used as an AI tool.
- [Gong Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gong.md): The Gong node allows n8n to automate tasks within Gong, such as retrieving calls and users, and integrates Gong with other applications; it supports Call and User operations (Get, Get Many) and offers templates for call analysis and sales insights automation.
- [Google Ads Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googleads.md): The Google Ads node allows users to automate tasks within Google Ads and integrate it with other applications, offering built-in support for various features like retrieving campaigns; it also provides instructions on using the HTTP Request node for unsupported operations and links to relevant resources and templates.
- [Google Analytics Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googleanalytics.md): The Google Analytics node allows automating tasks within Google Analytics and integrating it with other applications, offering built-in support for returning reports and user activities, and can be used as an AI tool.
- [Google BigQuery Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlebigquery.md): The Google BigQuery node allows n8n to automate tasks in Google BigQuery, such as creating and retrieving records, and integrate with other applications, and also can be used as an AI tool.
- [Google Books Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlebooks.md): The Google Books node allows n8n to automate tasks within Google Books, such as retrieving bookshelves and volumes, adding volumes to bookshelves, and integrating Google Books with other applications.
- [Google Business Profile Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlebusinessprofile.md): The Google Business Profile node allows n8n to automate tasks within Google Business Profile, such as managing posts and reviews, and integrate with other applications.
- [Google Calendar Calendar operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar/calendar-operations.md): This page describes how to use the Google Calendar node in n8n to check availability in a Google Calendar, including specifying credentials, calendar, start and end times, output format, and timezone.
- [Google Calendar Event Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar/event-operations.md): This document explains how to use the Google Calendar node in n8n to manage events, covering operations such as creating, deleting, getting, and updating events, along with their respective parameters and options.
- [Google Calendar Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar.md): Automate Google Calendar tasks like adding, retrieving, deleting, and updating events, and integrate Google Calendar with other applications using the n8n Google Calendar node.
- [Google Chat Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlechat.md): The Google Chat node allows automating tasks within Google Chat and integrating it with other applications, with built-in support for various features like managing memberships, spaces, and messages, including the ability to send messages and wait for a response with approval or custom forms.
- [Google Cloud Firestore Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlecloudfirestore.md): Automate Google Cloud Firestore tasks like creating, deleting, and retrieving documents, and integrate Firestore with other applications using n8n.
- [Google Cloud Natural Language Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlecloudnaturallanguage.md): The Google Cloud Natural Language node allows users to automate tasks within Google Cloud Natural Language, such as analyzing document sentiment, and integrate it with other applications in n8n.
- [Google Cloud Realtime Database Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlecloudrealtimedatabase.md): The Google Cloud Realtime Database node allows you to automate tasks within Google Cloud Realtime Database and integrate it with other applications, with built-in support for writing, deleting, getting, and appending data to databases.
- [Google Cloud Storage Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlecloudstorage.md): The Google Cloud Storage node allows n8n to automate tasks within Google Cloud Storage, such as managing buckets and objects, and integrate it with other applications.
- [Google Contacts Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlecontacts.md): The Google Contacts node allows users to automate tasks within Google Contacts, such as creating, updating, retrieving, and deleting contacts, and to integrate Google Contacts with other applications.
- [Google Docs Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googledocs.md): The Google Docs node allows n8n to automate Google Docs tasks like creating, getting, and updating documents, and integrates with other applications, and it can be used as an AI tool.
- [Google Drive Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/common-issues.md): This document provides solutions to common issues encountered while using the Google Drive node in n8n, including authentication problems, Google Cloud app authorization, and retrieving recent files.
- [Google Drive File and Folder Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/file-folder-operations.md): This document explains how to use the Google Drive node in n8n to search for files and folders, including specifying search methods, filters, and fields to return.
- [Google Drive File Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/file-operations.md): This document describes how to use the Google Drive node in n8n to manage files, including copying, creating from text, deleting, downloading, and moving files.
- [Google Drive Folder Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/folder-operations.md): This document explains how to use the Google Drive node to create, delete, and share folders, including setting permissions and specifying folder properties using the n8n workflow automation tool.
- [Google Drive Shared Drive operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/shared-drive-operations.md): This document explains how to use the Google Drive node in n8n to create, delete, get, and update shared drives, including details on parameters and options for each operation.
- [Google Drive Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googledrive.md): The Google Drive node allows automating tasks within Google Drive, such as creating, updating, listing, deleting, and retrieving drives, files, and folders, and integrates Google Drive with other applications.
- [Google Perspective Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googleperspective.md): The Google Perspective node allows automation of tasks within Google Perspective and integration with other applications, including analyzing comments; it also provides guidance on authentication and using the HTTP Request node for unsupported operations.
- [Google Sheets node common issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets/common-issues.md): This document provides solutions to common errors encountered while using the Google Sheets node in n8n, such as appending arrays and handling updated column names.
- [Google Sheets Document Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets/document-operations.md): This page describes how to use the Google Sheets node in n8n to create or delete Google spreadsheets, including details on setting the title, locale, recalculation interval, and selecting the spreadsheet to delete.
- [Google Sheets - Sheet Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets/sheet-operations.md): This document explains how to use the Google Sheets node in n8n to perform operations on a specific sheet within a Google spreadsheet, including appending, updating, clearing, and deleting rows, with options for mapping columns and formatting cells.
- [Google Sheets Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets.md): The Google Sheets node allows n8n to automate tasks in Google Sheets, integrating it with other applications for operations like creating, updating, and deleting documents and sheets.
- [Google Slides Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googleslides.md): The Google Slides node allows n8n to automate tasks within Google Slides, such as creating presentations, retrieving pages, and replacing text, and integrates Google Slides with other applications.
- [Google Tasks Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googletasks.md): The Google Tasks node allows users to automate tasks within Google Tasks and integrate it with other applications, supporting operations such as adding, deleting, retrieving, and updating tasks.
- [Google Translate Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.googletranslate.md): The Google Translate node allows automating tasks within Google Translate and integrating it with other applications, with built-in support for translating languages and the ability to be used as an AI tool.
- [Gotify Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gotify.md): The Gotify node allows automating tasks in Gotify, such as creating, deleting, and retrieving messages, and integrating Gotify with other applications within n8n.
- [GoToWebinar Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gotowebinar.md): The GoToWebinar node allows users to automate tasks within GoToWebinar and integrate it with other applications, supporting operations such as managing attendees, organizers, registrants, sessions, and webinars.
- [Grafana Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.grafana.md): The Grafana node allows users to automate tasks within Grafana and integrate it with other applications, supporting operations such as managing dashboards, teams, and users.
- [Grist Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.grist.md): The Grist node allows users to automate tasks within Grist and integrate it with other applications, supporting operations like creating, updating, deleting, and reading rows in a table. Includes guidance on authentication, obtaining Row IDs, and filtering records. Refer to Grist credentials for guidance on setting up authentication.
- [Google Workspace Admin Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.gsuiteadmin.md): The Google Workspace Admin node allows n8n to automate tasks within Google Workspace Admin, such as managing users and groups, by creating, updating, deleting, and retrieving data.
- [Hacker News Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.hackernews.md): The Hacker News node allows n8n to automate tasks within Hacker News, such as retrieving articles and user information, without requiring authentication.
- [HaloPSA Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.halopsa.md): The HaloPSA node allows n8n to automate tasks within HaloPSA and integrate it with other applications, supporting operations such as creating, updating, deleting, and retrieving clients, sites, tickets, and users.
- [Harvest Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.harvest.md): The Harvest node allows n8n to automate tasks in Harvest, integrating it with other applications for managing clients, contacts, invoices, and more.
- [Help Scout Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.helpscout.md): The Help Scout node allows you to automate tasks in Help Scout, such as creating, updating, deleting, and retrieving conversations and customers, and integrate Help Scout with other applications.
- [HighLevel Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.highlevel.md): The HighLevel node allows n8n to automate tasks in HighLevel, integrating it with other applications for managing contacts, opportunities, tasks, appointments, and calendar availability.
- [Home Assistant Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.homeassistant.md): The Home Assistant node allows n8n to automate tasks and integrate with Home Assistant, offering operations for camera proxies, configurations, logs, services, states, events and templates.
- [HubSpot Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.hubspot.md): The HubSpot node allows n8n to automate tasks within HubSpot, integrating it with other applications for managing contacts, deals, lists, engagements, and companies, and also supports custom API operations.
- [Humantic AI Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.humanticai.md): The Humantic AI node allows users to automate tasks and integrate Humantic AI with other applications within n8n, supporting operations such as creating, retrieving, and updating profiles.
- [Hunter Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.hunter.md): The Hunter node allows users to automate tasks within Hunter, such as getting, generating, and verifying email addresses, and integrate Hunter with other applications in n8n.
- [Intercom Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.intercom.md): The Intercom node allows you to automate tasks within Intercom and integrate it with other applications, supporting operations for companies, leads, and users, including creating, updating, deleting, and retrieving data.
- [Invoice Ninja Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.invoiceninja.md): The Invoice Ninja node allows n8n to automate tasks within Invoice Ninja, such as creating, updating, and deleting clients, expenses, invoices, payments, quotes, and tasks, and integrates Invoice Ninja with other applications.
- [Iterable Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.iterable.md): The Iterable node allows users to automate tasks in Iterable, such as creating/updating users, recording user actions, and managing user lists, seamlessly integrating Iterable with other applications within n8n.
- [Jenkins Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.jenkins.md): The Jenkins node allows users to automate tasks and integrate Jenkins with other applications within n8n, supporting operations like listing builds, managing instances, and creating/copying jobs; it can also be used as an AI tool.
- [Jina AI Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.jinaai.md): The Jina AI node allows users to automate tasks within Jina AI and integrate it with other applications, offering operations for reading content, performing web searches, and conducting deep research, as well as providing templates and examples for various use cases.
- [Jira Software Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.jira.md): The Jira Software node allows you to automate tasks within Jira and integrate it with other applications, offering support for managing issues, attachments, comments, and users; it can also be used as an AI tool.
- [Kafka Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.kafka.md): The Kafka node allows users to automate tasks in Kafka and integrate it with other applications, such as sending messages, and can be used as an AI tool.
- [Keap Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.keap.md): The Keap node allows n8n to automate tasks in Keap and integrate it with other applications, supporting operations like managing companies, contacts, ecommerce orders, emails, and files.
- [Kitemaker Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.kitemaker.md): The Kitemaker node allows users to automate tasks and integrate Kitemaker with other applications within n8n, supporting operations for organizations, spaces, users, and work items.
- [KoboToolbox Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.kobotoolbox.md): The KoboToolbox node allows users to automate tasks within KoboToolbox and integrate it with other applications, offering built-in support for managing files, forms, hooks, and submissions, including options for querying and reformatting submission data.
- [Lemlist Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.lemlist.md): The Lemlist node allows n8n to automate tasks within Lemlist and integrate it with other applications, supporting operations like managing activities, campaigns, leads, and teams.
- [Line Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.line.md): The Line node allows n8n to integrate with Line for automating tasks like sending notifications, but it is deprecated and will no longer work after April 1st, 2025 due to the discontinuation of LINE Notify service.
- [Linear Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.linear.md): The Linear node allows you to automate tasks in Linear and integrate it with other applications, with built-in support for managing issues.
- [LingvaNex Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.lingvanex.md): The LingvaNex node allows users to automate tasks within LingvaNex and integrate it with other applications, specifically for translating data, and provides examples and templates for various use cases.
- [LinkedIn Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.linkedin.md): The LinkedIn node allows n8n to automate tasks on LinkedIn, such as creating posts, and integrate with other applications, supporting both personal and organizational accounts.
- [LoneScale Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.lonescale.md): The LoneScale node allows automating tasks within LoneScale and integrating it with other applications via n8n, with built-in support for managing Lists and Items. It supports operations such as creating lists and items. Authentication information and related resources, including the LoneScale trigger node documentation and the service's API documentation, are available. If an operation isn't supported, the HTTP Request node can be used to call the service's API. Templates and examples for LoneScale integration are also provided.
- [Magento 2 Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.magento2.md): The Magento 2 node allows you to automate tasks within Magento 2 and integrate it with other applications, supporting operations for customers, invoices, orders, and products.
- [Mailcheck Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mailcheck.md): The Mailcheck node allows users to automate tasks within Mailcheck, such as checking emails, and integrate it with other applications in n8n.
- [Mailchimp Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mailchimp.md): The Mailchimp node allows n8n to automate tasks in Mailchimp and integrate it with other applications, offering support for campaigns, list groups, and member management.
- [MailerLite Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mailerlite.md): The MailerLite node allows n8n to automate tasks in MailerLite, such as creating, updating, deleting, and getting subscribers, and to integrate MailerLite with other applications.
- [Mailgun Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mailgun.md): The Mailgun node allows n8n to send emails and integrate with other applications by automating tasks within the Mailgun platform.
- [Mailjet Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mailjet.md): The Mailjet node allows n8n to automate tasks within Mailjet, such as sending emails and SMS messages, and integrate it with other applications. It supports sending emails (including templates) and SMS messages. If an operation is not supported, the HTTP Request node can be used to call the Mailjet API.
- [n8n Mandrill Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mandrill.md): The Mandrill node allows users to automate tasks within Mandrill, such as sending messages based on templates or HTML, and integrate Mandrill with other applications within n8n.
- [marketstack node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.marketstack.md): The marketstack node allows users to automate tasks in marketstack and integrate it with other applications within n8n, supporting features like retrieving exchanges, end-of-day data, and tickers.
- [Matrix Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.matrix.md): The Matrix node allows users to automate tasks within Matrix and integrate it with other applications, offering operations such as sending messages, managing rooms, and retrieving account information.
- [Mattermost Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mattermost.md): The Mattermost node allows n8n to automate tasks in Mattermost, integrating it with other applications for actions like managing channels and users, posting messages, and adding reactions.
- [Mautic Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mautic.md): The Mautic node allows you to automate tasks in Mautic and integrate it with other applications, with support for managing companies, contacts, and campaign contacts.
- [Medium Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.medium.md): The Medium node allows n8n to automate tasks in Medium, such as creating posts and getting publications, though the Medium API is no longer supported for new API keys.
- [MessageBird Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.messagebird.md): The MessageBird node allows n8n to automate tasks within MessageBird, such as sending SMS messages and getting account balance information, and to integrate MessageBird with other applications.
- [Metabase Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.metabase.md): The Metabase node allows n8n to automate tasks and integrate with Metabase, supporting operations like managing alerts, databases, metrics, and questions.
- [Microsoft Dynamics CRM Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftdynamicscrm.md): The Microsoft Dynamics CRM node allows n8n to automate tasks within Microsoft Dynamics CRM, such as creating, updating, deleting, and retrieving accounts, and integrate it with other applications.
- [Microsoft Entra ID Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftentra.md): The Microsoft Entra ID node allows n8n to automate tasks within Microsoft Entra ID, such as managing users and groups, and integrating with other applications; it supports operations like creating, getting, updating, and deleting users and groups, as well as managing group membership.
- [Microsoft Excel 365 Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftexcel.md): The Microsoft Excel 365 node allows you to automate tasks in Microsoft Excel and integrate it with other applications, offering operations for managing tables, workbooks, and worksheets, and can be used as an AI tool.
- [Microsoft Graph Security Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftgraphsecurity.md): The Microsoft Graph Security node allows users to automate tasks and integrate Microsoft Graph Security with other applications within n8n, supporting operations like getting and updating scores and profiles. It also provides guidance on using the HTTP Request node for unsupported operations. The node uses Microsoft credentials for authentication.
- [Microsoft OneDrive Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftonedrive.md): The Microsoft OneDrive node allows users to automate tasks within Microsoft OneDrive, such as file and folder manipulation, and integrate it with other applications in n8n.
- [Microsoft Outlook Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftoutlook.md): The Microsoft Outlook node allows users to automate tasks within Microsoft Outlook and integrate it with other applications, offering support for managing calendars, contacts, drafts, events, folders, messages, and attachments; it also supports waiting for a response to messages with approval, free text, or custom form options.
- [Microsoft SharePoint Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftsharepoint.md): Automate tasks in Microsoft SharePoint and integrate it with other applications using the Microsoft SharePoint node in n8n, which supports file and list management.
- [Microsoft SQL Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftsql.md): The Microsoft SQL node allows automating tasks in Microsoft SQL and integrating it with other applications, supporting operations like executing SQL queries, inserting, updating, and deleting rows in the database.
- [Microsoft Teams Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsoftteams.md): The Microsoft Teams node allows automating tasks within Microsoft Teams and integrating it with other applications, offering support for managing channels, messages, and tasks, including waiting for responses and custom forms. It supports operations like creating, deleting, getting, and updating channels and tasks, as well as creating and retrieving messages. The node also provides options for sending messages and waiting for user responses with approval, free text, or custom forms. If a desired operation is not supported, the HTTP Request node can be used to call the Microsoft Teams API directly.
- [Microsoft To Do Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.microsofttodo.md): The Microsoft To Do node allows users to automate tasks within Microsoft To Do and integrate it with other applications, supporting operations such as creating, updating, deleting, and retrieving linked resources, lists, and tasks.
- [Mindee Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mindee.md): The Mindee node allows n8n to automate tasks within Mindee, integrating it with other applications, and supports features like invoice and receipt prediction.
- [MISP Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.misp.md): The MISP node allows n8n to automate tasks within MISP and integrate it with other applications, supporting operations like creating, updating, and deleting events, feeds, and organizations.
- [Mocean Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mocean.md): The Mocean node allows n8n to automate tasks within Mocean, such as sending SMS and voice messages, and integrate Mocean with other applications.
- [monday.com Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mondaycom.md): The monday.com node allows users to automate tasks and integrate monday.com with other applications within n8n, supporting operations like creating boards, managing items, and handling board columns and groups.
- [MongoDB Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mongodb.md): The MongoDB node allows automating tasks in MongoDB and integrating it with other applications, supporting operations like aggregating, deleting, finding, and updating documents.
- [Monica CRM Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.monicacrm.md): The Monica CRM node allows n8n to automate tasks within Monica CRM, integrating it with other applications, and supports operations like creating, updating, deleting, and retrieving activities, calls, contacts, and more.
- [MQTT Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mqtt.md): The MQTT node allows n8n to interact with MQTT brokers, enabling users to send and receive messages and integrate MQTT with other applications; it supports setting message topics and using node input data as part of the message, and it can be used as an AI tool.
- [MSG91 Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.msg91.md): The MSG91 node allows n8n to automate tasks in MSG91, such as sending SMS messages, and integrate MSG91 with other applications.
- [MySQL Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mysql/common-issues.md): This document provides solutions to common issues encountered while using the MySQL node in n8n, including updating rows by composite key, connecting to a local MySQL server when using Docker, and handling decimal numbers returned as strings.
- [MySQL Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.mysql.md): The MySQL node allows automating tasks in MySQL and integrating it with other applications, supporting operations like executing SQL queries, inserting, and updating rows in a database.
- [NASA Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.nasa.md): The NASA node allows users to automate tasks within NASA, integrating its features, like retrieving imagery and data, with other applications within n8n.
- [Netlify Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.netlify.md): The Netlify node allows users to automate tasks within Netlify, such as managing deployments and sites, and integrate Netlify with other applications in n8n.
- [Netscaler ADC Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.netscaleradc.md): The Netscaler ADC node allows users to automate tasks within Netscaler ADC and integrate it with other applications, supporting operations like certificate creation/installation and file management (deletion, download, upload). It provides built-in support for a range of Netscaler ADC features. If an operation isn't supported, the HTTP Request node can be used with the service's API. Refer to Netscaler ADC's documentation for more information about the service.
- [Nextcloud Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.nextcloud.md): The Nextcloud node allows n8n to automate tasks within Nextcloud, integrating it with other applications for file, folder, and user management.
- [NocoDB Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.nocodb.md): The NocoDB node allows n8n to automate tasks in NocoDB, integrating it with other applications for creating, updating, deleting, and retrieving rows, and can be used as an AI tool.
- [Notion Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.notion/common-issues.md): This document outlines common errors and issues encountered when using the Notion node in n8n, along with troubleshooting steps and workarounds, including relation properties, creating toggle headings, and handling null and empty values.
- [Notion Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.notion.md): The Notion node allows n8n to automate tasks within Notion, integrating it with other applications via operations like managing blocks, databases, pages, and users, and it supports authentication via Notion credentials.
- [npm Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.npm.md): The npm node allows users to automate tasks within npm and integrate it with other applications, offering operations for package metadata, versions, searching, and distribution tag management.
- [Odoo Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.odoo.md): The Odoo node allows users to automate tasks and integrate Odoo with other applications within n8n, supporting operations like creating, updating, deleting, and retrieving contacts, resources, and opportunities; it can also be used as an AI tool.
- [Okta Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.okta.md): The Okta node allows n8n to automate tasks within Okta, such as user management, and integrate Okta with other applications.
- [One Simple API node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.onesimpleapi.md): The One Simple API node allows n8n to automate tasks in One Simple API and integrate it with other applications, supporting features like profile retrieval, information retrieval, and utility generation.
- [Onfleet Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.onfleet.md): The Onfleet node allows automating tasks in Onfleet and integrating it with other applications, offering built-in support for managing tasks, organizations, recipients, and more.
- [OpenWeatherMap Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.openweathermap.md): The OpenWeatherMap node allows users to automate tasks within OpenWeatherMap and integrate it with other applications, providing access to current and upcoming weather data, and can be used as an AI tool.
- [Oura Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.oura.md): The Oura node allows users to automate tasks within Oura and integrate Oura with other applications, providing built-in support for features like retrieving profiles and summaries, as detailed in the n8n documentation.
- [Paddle Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.paddle.md): The Paddle node allows n8n to automate tasks in Paddle, such as creating and updating coupons, retrieving plans and products, and managing users.
- [PagerDuty Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.pagerduty.md): The PagerDuty node allows n8n to automate tasks within PagerDuty, such as creating incident notes, updating incidents, and retrieving log entries and user information; it also integrates PagerDuty with other applications.
- [PayPal Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.paypal.md): The PayPal node allows n8n to automate tasks within PayPal and integrate it with other applications, supporting operations like creating batch payouts and canceling unclaimed payout items.
- [Peekalink Node | n8n Docs](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.peekalink.md): The Peekalink node allows users to automate tasks in Peekalink and integrate it with other applications, supporting operations such as checking link previews and returning previews for links.
- [PhantomBuster Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.phantombuster.md): The PhantomBuster node allows users to automate tasks within PhantomBuster and integrate it with other applications, offering operations such as managing agents and retrieving data; use the HTTP Request node for unsupported operations.
- [Philips Hue Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.philipshue.md): The Philips Hue node allows you to automate tasks in Philips Hue and integrate it with other applications, with built-in support for managing lights, and the ability to use the HTTP Request node for unsupported operations.
- [Pipedrive Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.pipedrive.md): The Pipedrive node allows n8n to automate tasks in Pipedrive, integrating it with other applications for managing activities, deals, files, notes, organizations, leads, and people; it supports operations like create, update, delete, and get, and can be used as an AI tool.
- [n8n-nodes-base.plivo](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.plivo.md): The Plivo node allows n8n to automate tasks within Plivo, such as making calls and sending SMS/MMS messages, and integrate Plivo with other applications.
- [n8n PostBin Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.postbin.md): The PostBin node allows users to automate interactions with the PostBin service within n8n, including creating/deleting bins, and sending/retrieving requests for testing APIs and webhooks.
- [Postgres Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.postgres/common-issues.md): This document provides solutions to common problems encountered while using the Postgres node in n8n, including dynamically populating SQL IN groups with parameters and working with timestamps and time zones.
- [Postgres Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.postgres.md): The Postgres node allows you to automate tasks in Postgres, integrating it with other applications by executing queries, inserting, and updating rows.
- [PostHog Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.posthog.md): The PostHog node allows users to automate tasks within PostHog and integrate it with other applications, supporting operations like creating aliases, events, and tracking pages and screens.
- [ProfitWell node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.profitwell.md): The ProfitWell node allows users to automate tasks and integrate ProfitWell with other applications within n8n, supporting actions like retrieving company account settings and financial metrics.
- [Pushbullet Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.pushbullet.md): The Pushbullet node allows users to automate tasks within Pushbullet and integrate it with other applications, supporting operations like creating, updating, deleting, and retrieving pushes, and offering the flexibility to use the HTTP Request node for unsupported operations.
- [Pushover Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.pushover.md): The Pushover node allows users to send push notifications and integrate Pushover with other applications within n8n workflows, supporting the "Push" message operation and offering templates for various use cases like sending weather updates or error notifications.
- [QuestDB Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.questdb.md): The QuestDB node allows n8n to automate tasks within QuestDB, such as executing SQL queries and inserting rows, and to integrate QuestDB with other applications.
- [Quick Base Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.quickbase.md): The Quick Base node allows n8n to automate tasks within Quick Base and integrate it with other applications, supporting operations like creating, updating, and deleting records, as well as managing fields and files.
- [QuickBooks Online Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.quickbooks.md): The QuickBooks Online node allows you to automate tasks within QuickBooks and integrate it with other applications, supporting operations like creating, updating, deleting, and retrieving bills, customers, employees, estimates, and invoices.
- [QuickChart Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.quickchart.md): The QuickChart node allows users to automate chart creation in QuickChart and integrate it with other applications, supporting various chart types like bar, doughnut, line, pie, and polar charts.
- [RabbitMQ Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.rabbitmq.md): The RabbitMQ node allows users to automate tasks within RabbitMQ and integrate it with other applications within n8n workflows, including sending and deleting messages.
- [Raindrop Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.raindrop.md): The Raindrop node allows n8n to automate tasks within Raindrop and integrate it with other applications, with built-in support for managing users, tags, collections, and bookmarks. It supports operations like creating, updating, deleting, and retrieving data. If a desired operation is not supported, the HTTP Request node can be used to call the Raindrop API directly, leveraging the same credentials. Browse Raindrop integration templates or search all templates for more examples.
- [Reddit Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.reddit.md): The Reddit node allows automating tasks on Reddit, such as getting profiles and users, retrieving post comments and subreddits, and submitting, getting, and deleting posts, and it can be used as an AI tool.
- [Redis Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.redis.md): The Redis node allows automating tasks in Redis and integrating it with other applications, supporting operations like deleting and getting keys, incrementing values, and publishing messages.
- [Rocket.Chat Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.rocketchat.md): The Rocket.Chat node allows n8n to automate tasks within Rocket.Chat, such as posting messages to channels or sending direct messages, and integrate it with other applications.
- [Rundeck Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.rundeck.md): The Rundeck node allows n8n to automate tasks in Rundeck, integrate it with other applications, execute jobs, and get job metadata.
- [S3 Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.s3.md): The S3 node allows n8n to interact with non-AWS S3 storage solutions like MinIO, Wasabi, and Digital Ocean spaces, enabling automation of tasks such as creating, deleting, and managing buckets, files, and folders.
- [Salesforce Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.salesforce.md): The Salesforce node allows n8n to automate tasks within Salesforce, integrating it with other applications for creating, updating, deleting, and retrieving accounts, attachments, cases, leads, and documents.
- [Salesmate Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.salesmate.md): The Salesmate node allows users to automate tasks in Salesmate and integrate it with other applications, supporting operations such as creating, updating, deleting, and retrieving activities, companies, and deals.
- [SeaTable Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.seatable.md): The SeaTable node allows users to automate tasks within SeaTable and integrate it with other applications, offering functionalities such as creating, updating, deleting, and retrieving rows.
- [SecurityScorecard Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.securityscorecard.md): The SecurityScorecard node allows n8n to automate tasks in SecurityScorecard, integrating it with other applications for managing portfolios, company data, and reports.
- [Segment Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.segment.md): The Segment node allows automating tasks in Segment and integrating it with other applications, supporting operations like adding users to groups, creating identities, and tracking activities.
- [SendGrid Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.sendgrid.md): The SendGrid node allows n8n to automate tasks in SendGrid, such as managing contacts and lists, and sending emails, integrating SendGrid with other applications.
- [Sendy Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.sendy.md): The Sendy node allows users to automate tasks in Sendy, such as creating campaigns and managing subscribers, and integrate Sendy with other applications.
- [Sentry.io Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.sentryio.md): The Sentry.io node allows n8n to automate tasks in Sentry.io, integrating it with other applications for operations on events, issues, projects, releases, organizations, and teams.
- [ServiceNow Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.servicenow.md): The ServiceNow node allows users to automate tasks and integrate ServiceNow with other applications, with built-in support for managing business services, incidents, users, and table records.
- [Shopify Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.shopify.md): The Shopify node allows users to automate tasks within Shopify and integrate it with other applications, supporting operations such as creating, updating, deleting, and retrieving orders and products.
- [SIGNL4 Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.signl4.md): The SIGNL4 node allows n8n to send and resolve alerts within the SIGNL4 platform, enabling integration with other applications and automation of SIGNL4 tasks.
- [Slack Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.slack.md): The Slack node allows you to automate tasks within Slack and integrate it with other applications, offering a wide range of operations such as managing channels, files, messages, reactions, stars, users, and user groups.
- [seven Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.sms77.md): The seven node allows users to automate tasks within seven and integrate it with other applications, supporting features like sending SMS and converting text to voice.
- [Snowflake Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.snowflake.md): The Snowflake node allows you to automate tasks within Snowflake and integrate it with other applications, supporting operations like executing SQL queries, inserting, and updating rows in a database.
- [Splunk Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.splunk.md): The Splunk node allows users to automate tasks within Splunk and integrate it with other applications, with built-in support for features like fired alerts, search configurations, and user management.
- [Spotify Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.spotify.md): The Spotify node allows n8n to automate tasks in Spotify and integrate it with other applications, offering operations for albums, artists, library, player, playlists, and tracks.
- [Stackby Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.stackby.md): The Stackby node allows n8n to automate tasks in Stackby, integrating it with other applications through operations like appending, deleting, listing, and reading data; refer to the Stackby credentials page for authentication setup.
- [n8n Storyblok Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.storyblok.md): The Storyblok node allows users to automate tasks and integrate Storyblok with other applications within n8n, supporting operations such as getting, deleting, and publishing stories using both the Content and Management APIs.
- [Strapi Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.strapi.md): The Strapi node allows n8n to automate tasks within Strapi, including creating, deleting, getting, and updating entries, and integrates Strapi with other applications; it also provides access to Strapi's API via the HTTP Request node for unsupported operations.
- [Strava Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.strava.md): The Strava node allows users to automate tasks within Strava and integrate it with other applications, offering support for creating activities, retrieving activity information, and more.
- [Stripe Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.stripe.md): The Stripe node allows n8n to automate tasks within Stripe and integrate it with other applications, supporting operations like managing balances, charges, coupons, customers, and tokens.
- [Supabase Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.supabase/common-issues.md): This document provides solutions to common issues encountered while using the Supabase node in n8n, including filtering rows by metadata, connecting to a local Supabase database when using Docker, and addressing records accessible through Postgres but not Supabase due to Row Level Security (RLS).
- [Supabase Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.supabase.md): The Supabase node allows you to automate tasks within Supabase and integrate it with other applications, supporting operations like creating, deleting, and getting rows, and it can be used as an AI tool.
- [SyncroMSP Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.syncromsp.md): The SyncroMSP node allows n8n to automate tasks within SyncroMSP and integrate it with other applications, supporting operations like creating and managing customers, tickets, and contacts.
- [Taiga Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.taiga.md): The Taiga node allows n8n to automate tasks within Taiga, integrating it with other applications via workflows that can create, update, delete, and retrieve issues, with credential setup details available.
- [n8n-nodes-base.tapfiliate](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.tapfiliate.md): The Tapfiliate node allows users to automate tasks within Tapfiliate and integrate it with other applications, with built-in support for managing affiliates, affiliate metadata, and program affiliates.
- [Telegram Node Callback Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.telegram/callback-operations.md): This document describes how to use the Telegram node to respond to callback queries sent from in-line keyboards or in-line queries, covering the Answer Query and Answer Inline Query operations, including parameters and additional fields for refining node behavior.
- [Telegram Node Chat Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.telegram/chat-operations.md): This document describes how to use the Telegram node in n8n to perform chat operations like getting chat information, managing administrators and members, leaving chats, and setting chat titles and descriptions using the Telegram Bot API.
- [Telegram Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.telegram/common-issues.md): This document provides solutions to common problems encountered while using the Telegram node in n8n, including adding a bot to a channel, obtaining the Chat ID, sending more than 30 messages per second, and removing the n8n attribution from messages.
- [Telegram Node File Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.telegram/file-operations.md): This document describes how to use the Telegram node in n8n to get files from Telegram using the Bot API getFile method, including details on required parameters like credentials, resource, operation, file ID, and download option.
- [Telegram Node Message Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.telegram/message-operations.md): This document describes the message operations available in the Telegram node, including deleting, editing, pinning, and sending messages and files to a chat, with detailed parameter descriptions and links to the Telegram Bot API documentation.
- [Telegram Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.telegram.md): The Telegram node allows n8n to automate tasks in Telegram, integrating it with other applications using a variety of operations including chat management, callback queries, file retrieval, and message manipulation, as well as sending various media types.
- [N8N Nodes Base.Thehive](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.thehive.md): A summary for n8n-nodes-base.thehive.md.
- [TheHive 5 Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.thehive5.md): TheHive 5 node allows users to automate tasks within TheHive 5 and integrate it with other applications, supporting operations like creating alerts, cases, comments, observables, and tasks.
- [TimescaleDB Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.timescaledb.md): The TimescaleDB node allows n8n to automate tasks within TimescaleDB, integrate it with other applications, execute SQL queries, and insert/update database rows.
- [Todoist Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.todoist.md): The Todoist node allows n8n to automate tasks within Todoist and integrate it with other applications, supporting operations like creating, updating, deleting, and retrieving tasks.
- [Travis CI Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.travisci.md): The Travis CI node allows users to automate tasks and integrate Travis CI with other applications within n8n, supporting operations like cancelling, getting, restarting, and triggering builds.
- [Trello Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.trello.md): The Trello node allows n8n to automate tasks within Trello, such as managing cards, boards, members, and labels, and integrates Trello with other applications.
- [Twake Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.twake.md): The Twake node allows users to automate tasks within Twake and integrate it with other applications, currently supporting the sending of messages.
- [Twilio Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.twilio.md): The Twilio node allows automating tasks within Twilio, such as sending SMS/MMS/WhatsApp messages and making phone calls, and integrating Twilio with other applications.
- [Twist Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.twist.md): The Twist node allows n8n to automate tasks within Twist, integrating it with other applications by supporting operations such as creating channels and managing comments and threads.
- [X (Formerly Twitter) Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.twitter.md): The X (Formerly Twitter) node allows users to automate tasks on X and integrate it with other applications, including creating direct messages, managing tweets, retrieving user information, and managing lists.
- [Unleashed Software Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.unleashedsoftware.md): The Unleashed Software node allows n8n to automate tasks and integrate with Unleashed Software, offering functionality such as retrieving sales orders and stock levels.
- [uProc Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.uproc.md): The uProc node allows n8n to automate tasks in uProc and integrate it with other applications, providing access to audio file analysis, communication data, and company, finance, and product information. 
- [UptimeRobot Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.uptimerobot.md): The UptimeRobot node allows n8n to automate tasks in UptimeRobot, integrating it with other applications. It supports operations like managing alerts, maintenance windows, monitors, and public status pages. The node requires UptimeRobot credentials for authentication. Browse integration templates or search all templates for examples. 
- [urlscan.io Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.urlscanio.md): The urlscan.io node lets you automate tasks in urlscan.io and integrate it with other applications, offering built-in support for features like getting and performing scans, and it can be used as an AI tool.
- [Venafi TLS Protect Cloud Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.venafitlsprotectcloud.md): The Venafi TLS Protect Cloud node allows users to automate tasks within Venafi TLS Protect Cloud and integrate it with other applications, offering operations such as certificate and certificate request management, including creating, deleting, downloading, getting, and renewing certificates, leveraging Venafi's REST API.
- [Venafi TLS Protect Datacenter Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.venafitlsprotectdatacenter.md): The Venafi TLS Protect Datacenter node allows n8n to automate tasks in Venafi TLS Protect Datacenter, such as creating, deleting, and getting certificates, and to integrate with other applications.
- [Vero Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.vero.md): The Vero node allows users to automate tasks in Vero, such as creating and deleting users, tracking events, and managing user subscriptions, and integrates Vero with other applications.
- [Vonage Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.vonage.md): The Vonage node allows users to automate tasks within Vonage, such as sending SMS messages, and integrate Vonage with other applications within n8n workflows.
- [Webflow Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.webflow.md): The Webflow node allows users to automate Webflow tasks like creating, updating, deleting, and retrieving items, and integrates Webflow with other applications within n8n.
- [n8n Wekan Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.wekan.md): The Wekan node allows n8n to automate tasks within Wekan, integrating it with other applications through operations like creating, updating, and deleting boards and cards; it also supports card comments, checklists, and lists.
- [WhatsApp Business Cloud node common issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp/common-issues.md): This document provides solutions to common errors encountered when using the WhatsApp Business Cloud node, such as bad request errors due to incorrect parameters and issues with sending non-text media. It includes guidance on checking message template parameters, data types, and the use of fallback values. Additionally, it explains how to properly configure input data fields for non-text media messages. The document guides users through troubleshooting steps and refers to external resources for further assistance. It also solicits user feedback for continuous improvement.
- [WhatsApp Business Cloud Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp.md): The WhatsApp Business Cloud node allows users to automate tasks and integrate WhatsApp Business with other applications, including sending messages, uploading, downloading, and deleting media; it also supports waiting for responses and custom forms.
- [Wise Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.wise.md): The Wise node allows n8n to automate tasks within Wise, like retrieving profiles, exchange rates, and managing recipients, and integrates Wise with other applications.
- [WooCommerce Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.woocommerce.md): The WooCommerce node allows users to automate tasks within WooCommerce and integrate it with other applications, supporting operations such as creating, deleting, retrieving, and updating customers, orders, and products.
- [WordPress Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.wordpress.md): The WordPress node allows n8n to automate tasks in WordPress, integrating it with other applications for creating, updating, and retrieving posts, pages, and users; it can also be used as an AI tool.
- [Xero Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.xero.md): The Xero node allows you to automate tasks within Xero and integrate it with other applications, supporting operations like creating, updating, and retrieving contacts and invoices. It also provides links to templates, examples, and Xero's API documentation. If a desired operation is not supported, the HTTP Request node can be used with the same credentials. This node streamlines Xero workflows by offering direct access to its features. Authentication can be set up following the Xero credentials guide.
- [Yourls Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.yourls.md): The Yourls node allows n8n to automate tasks within Yourls, such as expanding, shortening, and retrieving statistics for URLs, enabling integration with other applications.
- [YouTube Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.youtube.md): Automate YouTube tasks and integrate YouTube with other applications using the n8n YouTube node, which supports operations like managing channels, playlists, and videos.
- [Zammad Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.zammad.md): The Zammad node allows users to automate tasks within Zammad and integrate it with other applications, offering built-in support for managing groups, organizations, tickets, and users.
- [Zendesk Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.zendesk.md): The Zendesk node allows n8n to automate tasks within Zendesk, such as creating, deleting, and managing tickets, users, and organizations, and can be used to enhance AI agent capabilities.
- [Zoho CRM Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.zohocrm.md): The Zoho CRM node allows n8n to automate tasks within Zoho CRM, such as creating, updating, and deleting accounts, contacts, deals, and other records, and can be used as an AI tool.
- [Zoom Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.zoom.md): The Zoom node allows n8n to automate Zoom tasks, such as creating, retrieving, deleting, and updating meetings, and integrates with other applications; it also supports using the HTTP Request node for unsupported operations.
- [n8n Nodes Base Zulip](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-base.zulip.md): The Zulip node allows n8n to automate tasks within Zulip, such as managing users and streams, and sending messages, integrating Zulip with other applications.
- [OpenAI Assistant operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/assistant-operations.md): This document explains how to use the OpenAI Assistant operations in n8n to create, delete, list, message, and update assistants, covering parameters, options, and links to the OpenAI API documentation.
- [OpenAI Audio Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/audio-operations.md): This document explains how to use the OpenAI node in n8n to generate audio from text, transcribe audio recordings into text, or translate audio recordings into English, covering the required parameters and available options for each operation.
- [OpenAI Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/common-issues.md): This document provides solutions for common issues encountered while using the OpenAI node in n8n, including rate limits and insufficient quota errors, with troubleshooting steps for each problem.
- [OpenAI File Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/file-operations.md): This document describes how to use the OpenAI File operations within n8n to create, delete, list, message, and update files in OpenAI, including details on deleting, listing, and uploading files, as well as common issues.
- [OpenAI Image Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/image-operations.md): This document describes how to use the OpenAI node in n8n to analyze or generate images, including specifying credentials, selecting models, providing text inputs or prompts, and adjusting options like image quality and resolution.
- [OpenAI Text Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/text-operations.md): This document explains how to use the OpenAI node in n8n for text-based operations, including messaging a model and classifying text for violations, detailing the parameters and options for each operation. It also provides links to the OpenAI documentation for more information and troubleshooting common issues.
- [OpenAI Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-langchain.openai.md): The OpenAI node allows n8n to automate tasks within OpenAI, integrating its features like image creation, assistant management, and model interaction with other applications; it replaces the OpenAI assistant node from version 1.29.0.
- [Perplexity Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/app-nodes/n8n-nodes-langchain.perplexity.md): The Perplexity node allows n8n users to automate tasks within Perplexity and integrate it with other applications, with built-in support for messaging a model and links to helpful resources and templates.
- [AI Agent Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/common-issues.md): This document provides solutions to common errors encountered while using the AI Agent node in n8n, such as invalid content, issues with the Simple Memory sub-node, missing Chat Model connections, and unspecified prompts.
- [Conversational AI Agent Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/conversational-agent.md): The Conversational AI Agent node in n8n allows for human-like conversations, maintaining context and understanding user intent, commonly used for chatbots and virtual assistants, parsing JSON responses for tool calls, and offering flexibility with options for prompt configuration, output formatting, and system message guidance.
- [OpenAI Functions Agent Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/openai-functions-agent.md): The OpenAI Functions Agent node uses OpenAI functions models to detect when a function should be called and respond with appropriate inputs, requiring an OpenAI Chat Model and offering options for prompt construction, output format, system messages, and iteration control.
- [Plan and Execute Agent node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/plan-execute-agent.md): The Plan and Execute Agent node in n8n is similar to the ReAct agent but focuses on planning, creating a high-level plan to solve a task and then executing it step by step, making it suitable for tasks requiring a structured approach.
- [ReAct AI Agent Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/react-agent.md): The ReAct Agent node implements ReAct logic, which combines reasoning and action plan generation to break down complex tasks into smaller sub-tasks and execute them sequentially; it does not support memory sub-nodes. Configuration parameters include prompt selection and output format requirements, with options to customize messages for different model types and include intermediate steps in the final output. Refer to LangChain's documentation for more information.
- [SQL AI Agent Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/sql-agent.md): The SQL AI Agent node in n8n allows users to query SQL databases using natural language, converting questions into SQL queries and presenting results in a user-friendly format, supporting MySQL, SQLite, and Postgres databases.
- [Tools AI Agent node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/tools-agent.md): The Tools Agent node in n8n uses external tools and APIs to perform actions and retrieve information, integrating LLMs with various external services and databases, and it implements Langchain's tool calling interface for enhanced tool interaction and output parsing.
- [AI Agent Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent.md): The AI Agent node in n8n allows for the creation of autonomous systems that can receive data, make decisions, and act within an environment using external tools and APIs to achieve specific goals, functioning as a Tools Agent to perform tasks and retrieve information from connected sub-nodes.
- [Basic LLM Chain Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm.md): The Basic LLM Chain node in n8n allows users to set prompts for language models and optionally parse the response, and can be used with chat models to set messages with AI, System, and User roles, and also offers templates and examples for various use cases like chatting with PDF docs and summarizing YouTube videos.
- [Question and Answer Chain Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainretrievalqa/common-issues.md): This document provides solutions to common errors encountered while using the Question and Answer Chain node in n8n, including "No prompt specified," "A Retriever sub-node must be connected," and how to generate longer responses by connecting verbose models, increasing the maximum number of tokens, or building responses in stages.
- [Question and Answer Chain Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainretrievalqa.md): The Question and Answer Chain node in n8n uses a vector store as a retriever to answer questions based on provided data; this document outlines the node's parameters, provides example workflows, links to related resources, and addresses common issues related to its use within n8n.
- [Summarization Chain Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainsummarization.md): The Summarization Chain node in n8n allows users to summarize multiple documents using different methods like Map Reduce, Refine, and Stuff, with options to customize prompts and chunking strategies for various data sources including node inputs and document loaders, and also provides links to templates, examples, and related LangChain resources.
- [LangChain Code Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.code.md): The LangChain Code node allows users to import and use LangChain functionality within n8n, acting as a normal node, root node, or sub-node, and offering Execute and Supply Data modes for custom code integration.
- [Information Extractor Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor.md): The Information Extractor node in n8n extracts structured information from input text based on a defined schema, which can be specified through attribute descriptions, JSON examples, or manual JSON schema input; it also allows customization of the system prompt used for information extraction.
- [Sentiment Analysis Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.sentimentanalysis.md): The Sentiment Analysis node in n8n analyzes the sentiment of text data, classifying it into categories defined by the user and allowing for customized system prompts and detailed result inclusion.
- [n8n Text Classifier Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.text-classifier.md): The Text Classifier node in n8n allows users to categorize incoming data based on defined categories, using a language model to determine the appropriate classification for each item, with options for handling items that do not clearly match any category and for automatically fixing model output errors.
- [Simple Vector Store Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory.md): The Simple Vector Store node stores and retrieves embeddings in n8n's in-app memory, functioning as a vector database, and this document details its parameters, limitations, and usage patterns, emphasizing its suitability for development use only due to data persistence and access limitations.
- [Milvus Vector Store Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremilvus.md): The Milvus Vector Store node allows you to interact with a Milvus database as a vector store, enabling you to insert and retrieve documents for use in AI agents, chains, and tools within n8n workflows.
- [MongoDB Atlas Vector Store node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremongodbatlas.md): This document describes the MongoDB Atlas Vector Store node, which allows users to interact with Vector Search indexes in MongoDB Atlas collections to insert and retrieve documents, and use the vector store in chains or as a tool for agents.
- [PGVector Vector Store Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstorepgvector.md): This document provides information on the PGVector Vector Store node, which allows users to interact with PGVector tables in a Postgresql database for inserting, retrieving, and using documents in AI agents and chains within n8n workflows.
- [Pinecone Vector Store Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstorepinecone.md): The Pinecone Vector Store node allows interaction with Pinecone databases as vector stores, enabling insertion, retrieval, and updating of documents for use with AI agents and chains in n8n workflows.
- [Qdrant Vector Store Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreqdrant.md): The Qdrant Vector Store node allows you to interact with a Qdrant collection as a vector store, enabling you to insert and retrieve documents, connect to AI agents as a tool, or use a retriever to fetch documents for question answering.
- [Supabase Vector Store Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoresupabase.md): This document describes the Supabase Vector Store node in n8n, which allows users to interact with a Supabase database as a vector store for AI applications, including inserting, updating, and retrieving documents, connecting to AI agents, and fetching documents using a retriever. The node supports different operation modes such as Get Many, Insert Documents, Retrieve Documents (As Vector Store for Chain/Tool), Retrieve Documents (As Tool for AI Agent), and Update Documents, each with its own set of parameters. The document also provides links to templates and examples for using the node.
- [n8n Zep Vector Store Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstorezep.md): This document provides information on how to use the Zep Vector Store node in n8n to interact with Zep vector databases, including how to insert, retrieve, and manage documents, and how to connect it to AI agents and chains.
- [Root Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/root-nodes.md): Root nodes are the base nodes in a group of cluster nodes in n8n, which work together with sub-nodes to provide functionality in a workflow, extending the capabilities of a single node.
- [Default Data Loader Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.documentdefaultdataloader.md): The Default Data Loader node in n8n loads binary or JSON data for vector stores or summarization, allowing users to load all input data or specific data defined by expressions, and set metadata for the document in the vector store.
- [GitHub Document Loader Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.documentgithubloader.md): This node loads data from a GitHub repository for vector stores or summarization, allowing users to specify the repository link, branch, recursive option, and ignore paths. It uses GitHub credentials for authentication and provides information on parameter resolution in sub-nodes. The node integrates with LangChain and is part of n8n's Advanced AI capabilities. It allows users to load documents from GitHub repositories for use in AI workflows.
- [Embeddings AWS Bedrock Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsawsbedrock.md): The Embeddings AWS Bedrock node generates embeddings for text using Amazon Bedrock models within n8n workflows, allowing users to leverage AWS Bedrock's capabilities for natural language processing tasks such as semantic search and text similarity analysis; it supports credential management via n8n's built-in system and offers parameter resolution features specific to sub-nodes.
- [Embeddings Azure OpenAI Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsazureopenai.md): The Embeddings Azure OpenAI node lets you generate embeddings for text using Azure OpenAI. It supports setting the model, batch size, stripping new lines, and timeout. The documentation provides links to templates, Langchain resources, and n8n's advanced AI documentation, as well as definitions for AI terms. 
- [Embeddings Cohere Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingscohere.md): The Embeddings Cohere node generates embeddings for text using Cohere models within n8n workflows, allowing users to select from different models with varying dimensions and provides links to Cohere's model documentation and Langchain's Cohere embeddings documentation.
- [Embeddings Google Gemini Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsgooglegemini.md): The Embeddings Google Gemini node generates embeddings for text using Google's Gemini models, requiring Google AI credentials and offering parameter configuration for model selection, with considerations for sub-node parameter resolution and links to external resources and templates.
- [Embeddings Google PaLM Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsgooglepalm.md): The Embeddings Google PaLM node in n8n allows users to generate embeddings for text using Google PaLM models, as part of a Langchain implementation, and it dynamically loads available models from the Google PaLM API.
- [Embeddings Google Vertex Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsgooglevertex.md): The Embeddings Google Vertex node generates embeddings for text using Google Vertex AI. It supports selecting different models and provides examples for question answering and chatbots. The node is a sub-node, so expression resolution behaves differently than other nodes. Refer to LangChain's documentation for more information about the service.
- [Embeddings HuggingFace Inference Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingshuggingfaceinference.md): The Embeddings HuggingFace Inference node generates embeddings for text using Hugging Face models or custom inference endpoints, connecting to the Hugging Face service for AI-powered text analysis within n8n workflows.
- [Embeddings Mistral Cloud Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsmistralcloud.md): The Embeddings Mistral Cloud node generates embeddings for a given text using Mistral's cloud models, allowing users to select the model, batch size, and strip new lines. It provides access to Mistral's models for generating AI embeddings, and links to templates and related resources for advanced AI applications. The node is a sub-node, and expressions resolve to the first item in the input. Find authentication information for this node [here](../../../credentials/mistral/).
- [Embeddings Ollama Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsollama.md): The Embeddings Ollama node generates embeddings for text using Ollama models. It supports models like all-minilm and nomic-embed-text. The node is a sub-node, meaning it resolves expressions differently than root nodes. Refer to Langchain's documentation for more information about the service.
- [Embeddings OpenAI Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsopenai.md): The Embeddings OpenAI node generates embeddings for a given text using the OpenAI API. It allows users to select the model, set a base URL for self-hosted models, adjust batch size, strip new lines, and configure request timeouts. The node is a sub-node, meaning it resolves expressions to the first item when processing multiple items. It integrates with Langchain and can be used in various AI workflows. 
- [Anthropic Chat Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatanthropic.md): This document describes the Anthropic Chat Model node, which allows users to interact with Anthropic's Claude family of chat models within n8n for conversational AI agents, including details on credentials, parameters, options, and related resources, like LangChain's documentation.
- [AWS Bedrock Chat Model node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatawsbedrock.md): The AWS Bedrock Chat Model node allows users to leverage LLM models through the AWS Bedrock platform within n8n, detailing its parameters, options, and providing links to related resources and templates.
- [Azure OpenAI Chat Model node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatazureopenai.md): The Azure OpenAI Chat Model node allows you to use OpenAI's chat models with conversational agents within n8n, and this page provides information on its parameters, options, and related resources.
- [DeepSeek Chat Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatdeepseek.md): The DeepSeek Chat Model node allows n8n users to access DeepSeek's chat models for conversational AI agents, offering parameters like model selection, frequency penalty, and sampling temperature to refine the model's behavior and integrates with LangChain. It supports text and JSON response formats and provides options for base URL overrides, timeouts, and retry attempts. Additionally, the documentation provides links to templates, examples, and related resources for leveraging DeepSeek's capabilities. The node allows you to use DeepSeek's chat models with conversational agents.
- [Google Gemini Chat Model node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatgooglegemini.md): This page provides documentation for the Google Gemini Chat Model node in n8n, which allows users to leverage Google's Gemini chat models within conversational agents, including details on credentials, parameters, options like temperature and safety settings, and example templates.
- [Google Vertex Chat Model node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatgooglevertex.md): The Google Vertex AI Chat Model node lets you use Google's Vertex AI chat models with conversational agents in n8n, allowing you to generate completions using models like Gemini 1.5 Pro. It supports adjusting parameters like project ID, model name, maximum tokens, sampling temperature, and safety settings. Sub-nodes resolve expressions to the first item when processing multiple items. Refer to Google's and LangChain's documentation for additional information.
- [Groq Chat Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatgroq.md): The Groq Chat Model node allows users to access Groq's large language models within n8n for conversational AI and text generation, offering options to set the model, maximum tokens, and sampling temperature, and it also provides links to templates, examples, and related resources for advanced AI applications and Groq's API documentation, including a glossary of AI terms like completion and hallucinations.
- [Mistral Cloud Chat Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatmistralcloud.md): The Mistral Cloud Chat Model node lets you use Mistral Cloud's chat models with AI agents, select a model, set options such as temperature and max tokens, and enable safe mode for offensive content prevention.
- [Ollama Chat Model Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatollama/common-issues.md): This document provides solutions to common problems encountered while using the Ollama Chat Model node in n8n, including how to connect to local and remote Ollama instances, resolving connection errors, and handling HTTP/HTTPS proxies.
- [Ollama Chat Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatollama.md): The Ollama Chat Model node lets you use local Llama 2 models with conversational agents in n8n, allowing you to select models, control sampling temperature, and set token probabilities for generating completions, while also providing access to templates, examples, and related resources for further exploration.
- [OpenAI Chat Model Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatopenai/common-issues.md): This document provides solutions to common issues encountered when using the OpenAI Chat Model node in n8n, including rate limits, quota issues, and sub-node parameter processing, offering workarounds such as splitting data into smaller chunks or using the HTTP Request node with the OpenAI API.
- [OpenAI Chat Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatopenai.md): The OpenAI Chat Model node allows users to use OpenAI's chat models with conversational AI agents in n8n, offering options to select models, control response generation, and handle API requests, with links to templates, examples, and related resources.
- [OpenRouter Chat Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatopenrouter.md): The OpenRouter Chat Model node allows users to leverage OpenRouter's chat models within n8n for conversational AI applications, offering parameters for model selection, frequency and presence penalties, token limits, response formatting, sampling temperature, timeouts, retry attempts, and top P value, and it integrates with LangChain's OpenAI documentation due to API compatibility.
- [xAI Grok Chat Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatxaigrok.md): The xAI Grok Chat Model node allows users to access xAI Grok's large language models within n8n for conversational AI and text generation tasks, offering customizable parameters such as model selection, frequency penalty, and response format.
- [Cohere Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmcohere.md): The Cohere Model node in n8n allows users to leverage Cohere's models for various natural language processing tasks. It lacks tool support and should be connected to the Basic LLM Chain node. The node offers options to control token usage and sampling temperature. Refer to LangChain's documentation for more information about the service.
- [Ollama Model Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmollama/common-issues.md): This document provides solutions to common issues encountered while using the Ollama Model node in n8n, including connection problems with remote or local instances, Docker-related networking issues, IPv6 errors, and limitations with HTTP/HTTPS proxies.
- [Ollama Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmollama.md): The Ollama Model node allows you to use local Llama 2 models within n8n, but lacks tools support, making it best suited for use with the Basic LLM Chain node instead of the AI Agent node.
- [Hugging Face Inference Model Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmopenhuggingfaceinference.md): This document describes the Hugging Face Inference Model node in n8n, which allows users to leverage Hugging Face's models for various natural language processing tasks within n8n workflows.
- [Simple Memory Node - Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorybufferwindow/common-issues.md): This document covers common issues and troubleshooting steps for the Simple Memory node in n8n, including managing session IDs and avoiding conflicts with single memory instances.
- [Simple Memory Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorybufferwindow.md): The Simple Memory node is used to persist chat history in n8n workflows, but should not be used when n8n is running in queue mode. It allows you to configure a session key and context window length to manage memory. Refer to LangChain's Buffer Window Memory documentation for more information.
- [Chat Memory Manager node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorymanager.md): The Chat Memory Manager node allows users to manage chat message memories within n8n workflows by loading, inserting, and deleting messages in an in-memory vector store, providing capabilities beyond basic memory nodes, such as complex management and injecting messages for context.
- [MongoDB Chat Memory Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorymongochat.md): The MongoDB Chat Memory node allows n8n to use MongoDB as a memory server for storing chat history in AI workflows, defining parameters like session key, collection name, database name, and context window length to manage interactions with the MongoDB database and LangChain.
- [Motorhead node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorymotorhead.md): The Motorhead node allows n8n users to utilize Motorhead as a memory server within their workflows, storing memory using a specified Session ID, with considerations for single memory instance access across multiple nodes.
- [Postgres Chat Memory Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorypostgreschat.md): The Postgres Chat Memory node uses Postgres as a memory server for storing chat history in n8n workflows, allowing users to configure session keys, table names, and context window lengths for managing chat interactions with AI models.
- [Redis Chat Memory Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memoryredischat.md): The Redis Chat Memory node allows you to use Redis as a memory server within n8n workflows, enabling you to store and retrieve conversational context for AI agents and chatbots.
- [Xata Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memoryxata.md): The Xata node allows you to use Xata as a memory server within n8n workflows, offering parameters for session ID and context window length, and it is important to set different session IDs for multiple memory instances to avoid conflicts.
- [Zep Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memoryzep.md): The Zep node allows n8n users to use Zep as a memory server within their workflows for AI applications, offering functionalities to store and manage memory with session IDs, and provides links to Zep and LangChain documentation for more information.
- [Auto-fixing Output Parser Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.outputparserautofixing.md): The Auto-fixing Output Parser node in n8n wraps another output parser and uses an LLM to fix errors if the first parser fails, providing a robust solution for handling imperfect outputs from language models within n8n workflows.
- [Item List Output Parser node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.outputparseritemlist.md): The Item List Output Parser node in n8n returns a list of items with a specific length and separator, with the option to limit the number of items returned or use a custom separator.
- [Structured Output Parser Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.outputparserstructured/common-issues.md): This document outlines common issues encountered with the Structured Output Parser node in n8n, including its behavior as a sub-node, how to attach it to AI nodes, its intended use for final output formatting, and recommendations for structuring output from AI agents using a separate LLM-chain. It also provides troubleshooting steps and guidance for resolving these issues.
- [Structured Output Parser node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.outputparserstructured.md): The Structured Output Parser node in n8n returns fields based on a JSON schema, allowing users to define the output structure and validation either by generating from a JSON example or manually inputting the JSON schema. This node is a sub-node, where expressions resolve to the first item, and it is used in conjunction with LangChain. The documentation provides links to templates, examples, related resources, and common issues, as well as an AI glossary.
- [Contextual Compression Retriever Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.retrievercontextualcompression.md): The Contextual Compression Retriever node improves answers from vector store document similarity searches by considering the query context, and sub-nodes resolve expressions to the first item.
- [MultiQuery Retriever Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.retrievermultiquery.md): The MultiQuery Retriever node in n8n automates prompt tuning by generating multiple queries from different perspectives using an LLM, based on a single user input query, to improve retrieval accuracy.
- [Vector Store Retriever Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.retrievervectorstore.md): The Vector Store Retriever node retrieves documents from a vector store, allowing users to query and access information stored as mathematical representations for AI applications within n8n workflows, with specific behaviors in sub-nodes regarding item processing.
- [Workflow Retriever Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.retrieverworkflow.md): The Workflow Retriever node retrieves data from an n8n workflow for use in a Retrieval QA Chain or another Retriever node, allowing you to integrate custom workflows into your Langchain applications.
- [Character Text Splitter Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.textsplittercharactertextsplitter.md): The Character Text Splitter node in n8n splits document data based on specified characters, chunk size, and overlap, and it is often used in AI workflows. It is a sub-node, so it resolves expressions differently than other nodes when processing multiple items. The node has parameters for separator, chunk size, and chunk overlap. Several templates are available that use this node, including those for WhatsApp chatbots, webpage summarization, and PDF question answering. Refer to LangChain's documentation for more information about the service.
- [Recursive Character Text Splitter Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.textsplitterrecursivecharactertextsplitter.md): The Recursive Character Text Splitter node splits document data recursively, attempting to keep paragraphs, sentences, and words together while respecting a specified chunk size and overlap, as used in n8n workflows for AI-powered tasks like chatbots and document summarization; it uses parameters for chunk size and overlap to manage the splitting process. Sub-nodes resolve expressions differently than other nodes. Refer to LangChain's documentation for more details on the service. Additional resources include templates, examples, and an AI glossary.
- [Token Splitter Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.textsplittertokensplitter.md): The Token Splitter node in n8n splits text into chunks based on BPE tokens, converting text to tokens, splitting them, and converting them back. It is a sub-node with specific parameter resolution behavior and is used in AI-powered chatbot workflows with services like Google Drive, Gemini, and OpenAI. Node parameters include chunk size and overlap, and the documentation provides links to templates, LangChain resources, and an AI glossary.
- [Calculator Node (n8n Langchain)](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolcalculator.md): The Calculator node in n8n allows agents to perform mathematical calculations within a Langchain workflow.
- [Custom Code Tool Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolcode.md): The Custom Code Tool node in n8n allows users to write custom JavaScript or Python code that an AI agent can execute, enabling the agent to perform tasks beyond its built-in capabilities, and this article describes the node parameters and provides example templates using this node.
- [HTTP Request Tool Node (Legacy)](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolhttprequest.md): This document describes the legacy HTTP Request Tool node in n8n, which is designed for use with AI agents to collect information from websites or APIs, and explains its parameters and sub-node behavior, noting that newer versions use the standard HTTP Request node.
- [MCP Client Tool Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp.md): The MCP Client Tool node allows n8n to use tools exposed by an external Model Context Protocol (MCP) server, enabling connection of n8n agents to external tools.
- [SearXNG Tool Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolsearxng.md): The SearXNG Tool node lets you integrate with SearXNG to aggregate search results from multiple search engines in your n8n workflows. It requires a running SearXNG service and JSON output enabled in the SearXNG configuration. You can configure the number of results, page number, language, and safe search settings. The quality of search results depends on the SearXNG instance.
- [SerpApi (Google Search) node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolserpapi.md): The SerpAPI node allows an agent in a workflow to call Google's Search API, providing options for country, device, and language configuration. It also provides templates and examples for AI agent chat and web searching. The documentation includes parameter resolution information, related resources, and AI glossary terms. The node allows users to force SerpApi to fetch Google results. Refer to Serp's documentation for more information about the service.
- [Think Tool Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolthink.md): The Think Tool node in n8n allows AI agents to reflect on complex queries by internally reasoning before providing an answer, useful for scenarios requiring thoughtful responses.
- [Vector Store Question Answer Tool Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolvectorstore.md): The Vector Store Question Answer node is an n8n tool that allows an agent to summarize results and answer questions based on chunks from a vector store.
- [Wikipedia Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolwikipedia.md): The Wikipedia node is an n8n tool that allows an agent to search and return information from Wikipedia, with limitations on expression resolution in sub-nodes.
- [Wolfram|Alpha Tool Node in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolwolframalpha.md): The Wolfram|Alpha tool node connects n8n agents and chains to Wolfram|Alpha's computational intelligence engine, enabling AI to access and utilize Wolfram|Alpha's knowledge base and computation capabilities within n8n workflows.
- [Call n8n Workflow Tool Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolworkflow.md): The Call n8n Workflow Tool node allows an agent to run another n8n workflow and fetch its output data, with options to select the workflow from a database or define it directly, and to define workflow input values using fixed values, expressions, or AI model specification.
- [Sub-nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes/sub-nodes.md): Sub-nodes attach to root nodes within a group of cluster nodes, configuring the overall functionality of the cluster in n8n workflows.
- [Cluster Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/cluster-nodes.md): Cluster nodes are node groups in n8n workflows, consisting of a root node and one or more sub-nodes that extend the functionality of the root node.
- [Activation Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.activationtrigger.md): The Activation Trigger node is triggered when an event is fired by n8n or a workflow, allowing workflows to respond to activation, start, or update events; it has been deprecated and replaced by the n8n Trigger and Workflow Trigger nodes.
- [Aggregate Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.aggregate.md): The Aggregate node in n8n takes separate items or portions of them and groups them together into individual items, offering options to aggregate individual fields or all item data into a single list with configurable field inclusion/exclusion and handling of missing values and binaries.
- [AI Transform Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.aitransform.md): The AI Transform node in n8n generates code snippets based on prompts, leveraging context from the workflow's nodes and data types, and is available on Cloud plans only.
- [Code Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.code/common-issues.md): This document outlines common errors and issues encountered while using the Code node in n8n, along with troubleshooting steps and solutions, covering topics like data structure, module imports, and usage of global variables.
- [Code Editor Keyboard Shortcuts](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.code/keyboard-shortcuts.md): This document lists keyboard shortcuts for the n8n code editor, organized by operating system (Windows, macOS, Linux) and function (cursor movement, selection, basic operations, delete operations, line operations, autocomplete, indentation, code folding, multi-cursor, and formatting).
- [Code Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.code.md): The Code node allows users to write and execute custom JavaScript or Python code within n8n workflows, offering flexibility in data manipulation and integration with external libraries and services, with AI assistance available for Cloud users to generate initial code snippets using ChatGPT.
- [Compare Datasets Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.comparedatasets.md): The Compare Datasets node allows users to compare data from two input streams, identify differences, and handle those differences based on configurable preferences, including options for fuzzy comparison, skipping fields, and managing multiple matches.
- [Compression Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.compression.md): The Compression node in n8n allows users to compress and decompress files using Zip and Gzip formats, with options to compress or decompress, specify input and output fields, and set file names and prefixes.
- [n8n-nodes-base.converttofile](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.converttofile.md): The Convert to File node in n8n allows users to convert input data into various file formats like CSV, HTML, JSON, and more. It supports operations such as converting to different file types, moving Base64 strings to files, and offers options for customizing file names, headers, compression, and encoding. The node can be configured to output all items to a single file or create a separate file for each item. Additionally, it provides specific settings for ICS files, including event details, attendees, and recurrence rules. To extract data from a file and convert it to JSON, use the Extract from File node.
- [Crypto Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.crypto.md): The Crypto node in n8n allows users to encrypt data, generate random strings, and perform hashing and signing operations within workflows, including integration with AI agents.
- [Date & Time Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.datetime.md): The Date & Time node in n8n allows users to manipulate date and time data, converting it to different formats and performing operations like adding or subtracting time, extracting date parts, formatting dates, getting the current date, calculating time differences, and rounding dates.
- [Debug Helper Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.debughelper.md): The Debug Helper node in n8n allows users to trigger errors or generate random datasets for testing workflows, offering operations such as throwing errors, simulating out-of-memory conditions, and creating various types of random data with customizable parameters.
- [Edit Image Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.editimage.md): The Edit Image node allows users to manipulate and edit images, offering operations such as blurring, bordering, compositing, cropping, resizing, rotating, and adding text. It supports various image formats and requires GraphicsMagick for non-Docker installations. Users can pass image files as data properties to the node for processing. The node provides parameters for each operation, allowing customization of the image editing process.
- [Email Trigger (IMAP) Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.emailimap.md): The Email Trigger (IMAP) node allows n8n to receive emails from an IMAP email server, acting as a trigger for workflows.
- [Error Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.errortrigger.md): The Error Trigger node allows you to create workflows that automatically run when another workflow fails, providing details about the failed workflow and errors.
- [Evaluation Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.evaluation.md): The Evaluation node in n8n allows users to validate AI workflow reliability by performing operations such as setting outputs to Google Sheets, recording metrics, and conditionally executing logic based on evaluation status.
- [Evaluation Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.evaluationtrigger.md): The Evaluation Trigger node in n8n reads evaluation datasets from Google Sheets to validate AI workflow reliability during evaluations, processing items sequentially.
- [Execute Command Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.executecommand/common-issues.md): This document provides solutions to common problems encountered while using the Execute Command node in n8n, such as command not found errors and exceeding the maximum buffer length for standard output.
- [Execute Command](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.executecommand.md): The Execute Command node allows users to run shell commands on the host machine where n8n is running, with considerations for Docker environments and limitations on n8n Cloud.
- [Execute Sub-workflow Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow.md): The Execute Sub-workflow node allows you to run a different workflow on the same host machine, passing data between the main workflow and the sub-workflow, with options to load the sub-workflow from the database, a local file, a parameter, or a URL.
- [Execute Sub-workflow Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflowtrigger.md): The Execute Sub-workflow Trigger node in n8n allows a workflow to be initiated by another workflow, acting as the starting point for sub-workflows, enabling modularization and reusability.
- [Execution Data Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.executiondata.md): The Execution Data node allows users to save workflow execution metadata for searching within the Executions list in Pro and Enterprise plans, with limitations on key and value lengths. It can retrieve custom execution data during workflow execution using the Code node. Refer to Custom executions data for more information.
- [Extract From File Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.extractfromfile.md): The Extract From File node in n8n extracts data from binary files (like CSV, HTML, PDF, etc.) and converts it to JSON for easier manipulation in workflows, or converts them to Base64.
- [Filter Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.filter.md): The Filter node in n8n allows users to selectively pass items to the next node based on defined conditions, offering a way to route data based on whether it meets specified criteria using various data type comparisons and logical combinations.
- [n8n Form Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.form.md): The n8n Form node allows users to create multi-step, user-facing forms with custom logic using query parameters, custom HTML, hidden fields, and JSON definitions; it integrates with the n8n Form Trigger and offers options for form endings like completion screens, URL redirects, or custom text.
- [n8n Form Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.formtrigger.md): The n8n Form Trigger node allows users to start a workflow when a form is submitted, automatically generating the form web page and handling input data, with options for testing and production URLs, query parameters, and customizable form elements.
- [FTP Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.ftp.md): The FTP node allows n8n to access and upload files to FTP or SFTP servers, with operations for deleting, downloading, listing, renaming, and uploading files, including support for binary files and recursive folder operations.
- [Git Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.git.md): The Git node allows n8n to interact with Git repositories, enabling operations like adding, committing, cloning, fetching, and pushing files, as well as managing configurations, logs, and tags.
- [GraphQL Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.graphql.md): The GraphQL node allows n8n to query GraphQL endpoints using the GraphQL query language, supporting authentication, various HTTP request methods, and customizable response formats, and it can be used as an AI tool.
- [HTML Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.html.md): The HTML node in n8n allows users to generate HTML templates, extract content from HTML sources (JSON or binary files), and convert content into HTML tables with customizable styling and attributes, offering versatile HTML manipulation within workflows.
- [HTTP Request Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/common-issues.md): This document provides solutions to common errors encountered while using the HTTP Request node, including bad requests, resource not found errors, invalid JSON, forbidden access, and rate limiting issues, along with troubleshooting steps and configuration options like batching and retry on fail.
- [HTTP Request Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.httprequest.md): The HTTP Request node in n8n allows users to make HTTP requests to interact with REST APIs, offering versatile options for authentication, query parameters, headers, and body content, and it can be used as a regular node or attached to an AI agent as a tool.
- [If Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.if.md): The If node in n8n splits a workflow based on comparison operations, allowing you to create conditional logic using various data types and comparison operators, and combine multiple conditions with AND/OR logic; it also provides templates and examples for common use cases.
- [JWT Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.jwt.md): The JWT node allows users to work with JSON web tokens in n8n workflows, offering operations to decode, sign, and verify tokens, and can be used as an AI tool.
- [LDAP Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.ldap.md): The LDAP node allows you to interact with LDAP servers to create, find, compare, update, rename, and delete objects, and it can be used as an AI tool to enhance AI agent capabilities.
- [Limit Node in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.limit.md): The Limit node in n8n workflows removes items beyond a defined maximum, allowing users to keep either the first or last items in a dataset.
- [Local File Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.localfiletrigger.md): The Local File Trigger node in n8n automates workflows by detecting file system changes like adding, modifying, or deleting files or folders on self-hosted n8n instances, offering options to specify the event to watch for, include/exclude files, and define the folder depth to monitor.
- [Manual Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.manualworkflowtrigger.md): The Manual Trigger node lets users manually start a workflow, typically used for testing or when an automatic trigger is not desired; only one Manual Trigger node is allowed per workflow.
- [n8n Markdown Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.markdown.md): The Markdown node in n8n converts between Markdown and HTML formats, offering various options for customizing the conversion process in both directions, and supports features like GitHub-flavored Markdown and customizable header IDs..
- [n8n-nodes-base.merge](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.merge.md): The Merge node in n8n combines data from multiple streams using different modes like Append, Combine, and SQL Query, allowing users to merge data based on position, matching fields, or custom queries, with options for clash handling and fuzzy comparison.
- [n8n Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.n8n.md): The n8n node allows users to interact with the n8n API within their workflows, enabling operations such as generating security audits, managing credentials and executions, and manipulating workflows.
- [n8n Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.n8ntrigger.md): The n8n Trigger node triggers when a workflow updates or activates, or when the n8n instance starts or restarts, allowing users to receive notifications for these events.
- [No Operation Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.noop.md): The No Operation node in n8n allows workflows to be designed with clear stopping points, improving readability and understanding of data flow without performing any operations.
- [n8n Read/Write Files from Disk Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.readwritefile.md): The Read/Write Files from Disk node allows n8n to read and write files from/to the machine where n8n is running, with operations for reading one or more files and writing a binary file to disk, configurable with file paths, extensions, MIME types, and append options.
- [Remove Duplicates Node Templates and Examples](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.removeduplicates/templates-and-examples.md): This document provides templates and examples for using the Remove Duplicates node in n8n, including removing duplicates from the current input and keeping items where the value is new, with step-by-step instructions and sample data setup using a Code node.
- [Remove Duplicates Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.removeduplicates.md): The Remove Duplicates node in n8n identifies and deletes duplicate items based on criteria such as identical fields within a single execution or comparison with previous executions, offering functionalities to remove repeated items, clear deduplication history, and compare values to manage data efficiently.
- [Rename Keys Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.renamekeys.md): The Rename Keys node in n8n allows users to rename keys in key-value pairs, either individually or using regular expressions, with options for case sensitivity and maximum depth of replacement.
- [Respond to Webhook Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.respondtowebhook.md): The Respond to Webhook node in n8n allows you to control the response sent to incoming webhooks, working in conjunction with the Webhook node to customize the data, headers, and status code of the response.
- [n8n-nodes-base.rssfeedread](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.rssfeedread.md): The RSS Read node in n8n allows users to read data from RSS feeds available on the internet by specifying the feed URL and choosing whether to ignore SSL issues, and it is commonly used in conjunction with other tools like OpenAI and Gmail for personalized newsletters or information monitoring.
- [RSS Feed Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.rssfeedreadtrigger.md): The RSS Feed Trigger node allows you to start an n8n workflow when a new RSS feed item has been published, with options to configure polling frequency using various modes like hourly, daily, weekly, monthly, custom cron expressions, or at specific intervals.
- [Schedule Trigger Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/common-issues.md): This document provides solutions to common problems encountered when using the Schedule Trigger node in n8n, including invalid cron expressions, workflows running at the wrong time due to timezone issues, and unexpected behavior when using variables or changing the trigger interval.
- [Schedule Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger.md): The Schedule Trigger node in n8n allows users to run workflows at fixed intervals and times, similar to the Cron utility, and it offers various trigger intervals such as seconds, minutes, hours, days, weeks, months, and custom Cron expressions.
- [Send Email Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.sendemail.md): The Send Email node allows sending emails using an SMTP email server, with options for standard sending and waiting for a response, and supports various response types like approval, free text, and custom forms. This node can also be used as an AI Tool.
- [Edit Fields (Set)](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.set.md): The Edit Fields (Set) node in n8n allows users to set and overwrite workflow data, which is crucial for workflows that require incoming data from previous nodes, such as when inserting values into Google Sheets or databases; it supports manual mapping and JSON output modes, and includes options for handling binary data, ignoring type conversion errors, and supporting dot notation.
- [Sort Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.sort.md): The Sort node in n8n allows users to organize lists of items in a desired ordering, or generate a random selection, with options for simple ascending/descending sorts, random order generation, or custom JavaScript code for more complex sorting needs.
- [Loop Over Items (Split in Batches)](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches.md): The Loop Over Items node in n8n allows users to loop through data, processing it in batches and combining the results, useful for scenarios like avoiding rate limits or handling node exceptions.
- [Split Out Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.splitout.md): The Split Out node in n8n separates a single data item containing a list into multiple items, allowing users to configure which field to split, whether to include other fields, and the destination field name for the split content.
- [SSH Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.ssh.md): The SSH node allows you to execute commands, download files, and upload files using the Secure Shell Protocol within n8n workflows, offering integration with SSH credentials for secure remote access and file transfer.
- [Stop And Error Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.stopanderror.md): The Stop And Error node in n8n allows users to display custom error messages, cause executions to fail under certain conditions, and send custom error information to error workflows using either a custom message or a JSON object.
- [Summarize Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.summarize.md): The Summarize node in n8n aggregates items together, similar to Excel pivot tables, allowing users to perform calculations like sum, average, and count on specified fields, and split the summary by other fields.
- [Switch Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.switch.md): The Switch node in n8n allows you to conditionally route a workflow based on comparison operations, similar to an IF node but with support for multiple output routes, using either a rules-based or expression-based mode for defining the routing logic.
- [TOTP Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.totp.md): The TOTP node generates time-based one-time passwords, allowing users to create secrets and configure parameters like algorithm, digits, and period for enhanced security. It can be used as an AI tool.
- [Wait Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.wait.md): The Wait node in n8n pauses workflow execution and resumes based on specified conditions like time intervals, specific times, webhook calls, or form submissions, offloading execution data to the database while waiting.
- [Webhook Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.webhook/common-issues.md): This document provides solutions to common problems encountered while using the n8n Webhook node, including listening for multiple HTTP methods, triggering the node with HTTP requests or curl, sending string responses, understanding the difference between test and production URLs, troubleshooting IP whitelist failures, and resolving webhook path conflicts.
- [Webhook Node Workflow Development](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.webhook/workflow-development.md): This document explains how to develop workflows using the n8n Webhook node, including building, testing, and deploying workflows with Test and Production webhook URLs, and running n8n in tunnel mode for local development.
- [Webhook Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.webhook.md): The Webhook node allows n8n workflows to be triggered by external services via webhooks, supporting various HTTP methods, authentication methods, and response options, and is useful for creating API endpoints and integrations with services that lack dedicated app trigger nodes.
- [Workflow Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.workflowtrigger.md): The Workflow Trigger node, now deprecated and replaced by the n8n Trigger node, triggers when a workflow is updated or activated, allowing notifications on workflow state changes; it includes parameters to select the triggering events: Active Workflow Updated and Workflow Activated.
- [XML Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-base.xml.md): The XML node converts data to and from XML format, allowing users to transform between JSON and XML with configurable options for handling attributes, character data, and whitespace.
- [Chat Trigger Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-langchain.chattrigger/common-issues.md): This document provides solutions to common problems encountered while using the Chat Trigger node in n8n, including passing data from a website and ensuring previous messages are fetched correctly by properly configuring session loading and memory nodes.
- [Chat Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-langchain.chattrigger.md): The Chat Trigger node in n8n allows users to build AI workflows for chatbots and other chat interfaces, offering options for public or private access, authentication, and integration with hosted or embedded chat interfaces, as well as memory management for chat sessions.
- [MCP Server Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger.md): The MCP Server Trigger node allows n8n to act as a Model Context Protocol (MCP) server, enabling n8n tools and workflows to be accessed by MCP clients using Server-Sent Events (SSE).
- [Action Network Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/actionnetwork.md): These credentials allow n8n to authenticate Action Network nodes using an API key, which can be obtained from your Action Network account after requesting API access as a paying customer or developer.
- [ActiveCampaign Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/activecampaign.md): This page provides instructions on how to configure ActiveCampaign credentials in n8n using an API key, including obtaining the API URL and key from your ActiveCampaign account settings.
- [Acuity Scheduling Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/acuityscheduling.md): This page provides instructions for setting up Acuity Scheduling credentials in n8n, including prerequisites, supported authentication methods (API key and OAuth2), and related resources, with specific guidance on obtaining the User ID, API Key, Client ID, and Client Secret.
- [Adalo Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/adalo.md): To use Adalo with n8n, you need an Adalo account, API Key, and App ID, which can be obtained by creating an Adalo app and generating an API key in the App Access settings.
- [Affinity Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/affinity.md): These credentials allow n8n to authenticate with Affinity using an API key for use with the Affinity and Affinity Trigger nodes.
- [Agile CRM Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/agilecrm.md): These credentials allow n8n to authenticate with Agile CRM using an API key, requiring an email address, REST API Key, and Agile CRM Subdomain.
- [Airtable Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/airtable.md): This document explains how to configure Airtable credentials in n8n, including using Personal Access Tokens (PAT) and OAuth2, and notes the deprecation of API Key authentication.
- [Airtop Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/airtop.md): These credentials allow n8n to authenticate with Airtop using an API key, enabling access to Airtop's services via the Airtop node. To configure the credential, users need an Airtop account and API key, which can be generated in the Airtop Portal under API Keys. The API key should then be entered into the n8n credential configuration.
- [AlienVault credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/alienvault.md): This document describes how to authenticate with AlienVault using an API key to make custom API calls via the n8n HTTP Request node, referencing AlienVault's API documentation and providing instructions for locating the OTX key within AlienVault settings.
- [AMQP Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/amqp.md): These credentials allow authentication with AMQP message brokers for use with the AMQP Sender and Trigger nodes in n8n. It requires a hostname, port, username, and password to configure the AMQP connection. AMQP is an open standard application layer protocol for message-oriented middleware, focusing on message orientation, queuing, routing, reliability, and security. Users can optionally specify a transport type of either `tcp` or `tls`. Refer to the provider's documentation for detailed instructions.
- [Anthropic Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/anthropic.md): This document describes how to configure Anthropic credentials in n8n, including obtaining an API key from the Anthropic Console and using it to authenticate Anthropic Chat Model nodes.
- [Asana Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/asana.md): This document explains how to configure Asana credentials in n8n, covering both Access Token and OAuth2 authentication methods, and providing instructions for obtaining the necessary credentials from the Asana developer console.
- [Auth0 Management Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/auth0management.md): These credentials allow authentication with the Auth0 Management API, typically used with the HTTP Request node for custom API calls, requiring an Auth0 account, Domain, Client ID, and Client Secret.
- [Autopilot Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/autopilot.md): These credentials can authenticate the Autopilot and Autopilot Trigger nodes, using an API key generated in Autopilot's settings, but are not compatible with the Ortto API following Autopilot's branding change.
- [AWS Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/aws.md): This document explains how to configure AWS credentials in n8n, including obtaining the Access Key ID and Secret Access Key, and how to use temporary security credentials and custom endpoints for VPC connections with supported AWS apps like Rekognition, Lambda, SNS, SES, SQS, and S3.
- [Azure Cosmos DB Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/azurecosmosdb.md): This document explains how to configure Azure Cosmos DB credentials in n8n, including prerequisites, supported authentication methods (API Key), required information (Account, Key, Database), and troubleshooting common issues like needing admin approval.
- [Azure OpenAI Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/azureopenai.md): This document explains how to configure Azure OpenAI credentials in n8n, covering API key and Azure Entra ID (OAuth2) authentication methods, along with instructions for registering an application and generating a client secret.
- [Azure Storage Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/azurestorage.md): This document provides instructions on how to authenticate to Azure Storage using OAuth2 or Shared Key within n8n, including prerequisites, setup steps, and troubleshooting tips for common issues like needing admin approval.
- [BambooHR Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/bamboohr.md): These credentials allow n8n to authenticate with BambooHR using an API key, requiring the subdomain and API key from a BambooHR account, as detailed in BambooHR's API documentation.
- [Bannerbear credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/bannerbear.md): These credentials allow n8n to authenticate with Bannerbear using an API key, enabling the use of Bannerbear nodes within n8n workflows. To configure, you need a Bannerbear account and a Project API Key, which can be found in your Bannerbear project settings under Settings > API Key.
- [Baserow credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/baserow.md): These credentials allow n8n to authenticate with Baserow using Basic Auth, requiring the Baserow host URL, a username, and a password for a Baserow user account.
- [Beeminder Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/beeminder.md): Instructions for setting up Beeminder credentials, including obtaining a user name and auth token from the Beeminder website or API, for use with the Beeminder node in n8n.
- [Bitbucket Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/bitbucket.md): This document describes how to authenticate Bitbucket nodes in n8n using API username and app password, including instructions for creating an app password and understanding the necessary permissions.
- [Bitly Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/bitly.md): These instructions describe how to obtain and use Bitly credentials, including API tokens and OAuth2, for use with n8n nodes.
- [Bitwarden Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/bitwarden.md): These credentials allow n8n to authenticate with Bitwarden nodes using an API key and are intended for Bitwarden Teams or Enterprise organizations, not personal accounts. The credentials require a Client ID, a Client Secret, and the environment (Cloud-hosted or Self-hosted). Refer to Bitwarden's Public API documentation for more information. The Client ID and Client Secret must be for an Organization API Key, not a Personal API Key. Create a Bitwarden Teams organization or Enterprise organization account.
- [Box credentials | n8n Docs](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/box.md): This document describes how to use Box credentials for authenticating Box and Box Trigger nodes in n8n, including prerequisites, supported authentication methods (OAuth2), and related resources like Box's API documentation and OAuth2 setup.
- [Brandfetch credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/brandfetch.md): These credentials let you authenticate the Brandfetch node in n8n using an API key obtained from a Brandfetch developer account, as detailed in Brandfetch's API documentation.
- [Brevo Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/brevo.md): These credentials allow n8n to authenticate with Brevo using an API key for use with the Brevo and Brevo Trigger nodes, requiring a Brevo developer account and referencing Brevo's API documentation for setup.
- [Bubble Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/bubble.md): These credentials let you authenticate the Bubble node in n8n using an API key, and require a paid Bubble plan. To configure the credential, you'll need an API Token, App Name, and Domain. The app name is the part of the Data API root URL after `https://` and before `.bubbleapps.io`. You also need to select the environment (Development or Live) and hosting (Bubble Hosting or Self Hosted).
- [Cal.com Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/cal.md): These credentials allow n8n to authenticate with Cal.com using an API key and are used to access the Cal.com Trigger node.
- [Calendly Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/calendly.md): This document provides instructions on how to configure Calendly credentials in n8n using either an API access token or OAuth2, including steps for obtaining the necessary keys and IDs from Calendly.
- [Carbon Black Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/carbonblack.md): These credentials can be used to authenticate when using the HTTP Request node to make a Custom API call to Carbon Black; you will need a Carbon Black subscription and developer account, along with the URL (determined by the environment/product URL) and Access Token (API Secret Key).
- [Chargebee Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/chargebee.md): These credentials allow n8n to authenticate with Chargebee using an API key, enabling the use of Chargebee and Chargebee Trigger nodes. To configure, you will need the Account Name (Chargebee Site Name) and API Key. Refer to Chargebee's API documentation for more information.
- [CircleCI Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/circleci.md): These credentials allow n8n users to authenticate CircleCI nodes using a personal API token, as detailed in CircleCI's API documentation.
- [Cisco Meraki credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ciscomeraki.md): These credentials enable authentication via API key when using the HTTP Request node to make Custom API calls to Cisco Meraki. It requires a Cisco DevNet developer account and access to a Cisco Meraki account, and you can find instructions for obtaining your Meraki API Key in Cisco's documentation.
- [Cisco Secure Endpoint Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ciscosecureendpoint.md): This document explains how to authenticate with Cisco Secure Endpoint using OAuth2 in n8n, including obtaining the necessary Client ID and Client Secret by registering a SecureX API Client, and selecting the appropriate region.
- [Cisco Umbrella Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ciscoumbrella.md): Describes how to set up Cisco Umbrella credentials in n8n using an API key and Secret, and links to Cisco Umbrella's API documentation and n8n examples.
- [Webex by Cisco Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ciscowebex.md): This document describes how to authenticate Webex by Cisco nodes and triggers in n8n using OAuth2, including account prerequisites, setup instructions, and recommended scopes.
- [Clearbit credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/clearbit.md): This document describes how to authenticate the Clearbit node in n8n using an API key. It provides links to Clearbit's API documentation for creating and viewing API keys.
- [ClickUp Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/clickup.md): This document explains how to configure ClickUp credentials in n8n using either an API access token or OAuth2, including instructions for obtaining the necessary tokens and setting up an OAuth app.
- [Clockify credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/clockify.md): This document describes how to authenticate Clockify nodes and triggers in n8n using an API key, referencing Clockify's API documentation and profile settings for key access.
- [Cloudflare credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/cloudflare.md): These credentials allow n8n to authenticate with Cloudflare using an API key, enabling the use of the Cloudflare node.
- [Cockpit Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/cockpit.md): This document describes how to configure Cockpit credentials in n8n, including prerequisites, supported authentication methods, and instructions for using an API access token with a self-hosted Cockpit instance.
- [Cohere Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/cohere.md): This page provides information on how to authenticate Cohere nodes within n8n using an API key, including prerequisites and related resources for Cohere's services and n8n's Advanced AI documentation.
- [Contentful Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/contentful.md): This document describes how to configure Contentful credentials for use with n8n, including obtaining the Space ID and API access tokens from Contentful. It outlines the prerequisites, supported authentication methods (API access token), and provides links to Contentful's API documentation and instructions for creating and managing API keys.
- [ConvertAPI credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/convertapi.md): This page provides information on how to authenticate with ConvertAPI when using the HTTP Request node in n8n, including the supported authentication method (API Token) and links to ConvertAPI's API documentation.
- [ConvertKit Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/convertkit.md): This document describes how to configure ConvertKit credentials in n8n using the API key authentication method, including instructions for locating the API key in ConvertKit's account settings.
- [Copper Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/copper.md): These credentials allow n8n users to authenticate with Copper using an API key and email address, enabling the use of Copper and Copper Trigger nodes. To configure the credential, an API Key and the API key creator's email address are required. Refer to Copper's API documentation for more information.
- [Cortex credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/cortex.md): These credentials allow n8n to authenticate with Cortex nodes using an API key and server address, enabling users to interact with the Cortex service.
- [CrateDB Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/cratedb.md): These credentials allow n8n to authenticate with CrateDB nodes using account connection, requiring host, database, user, password, SSL setting, and port information.
- [crowd.dev Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/crowddev.md): These credentials allow n8n to authenticate with crowd.dev nodes and triggers using an API key, requiring a URL, Tenant ID, and API Token from your crowd.dev instance.
- [CrowdStrike credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/crowdstrike.md): This document describes how to authenticate with CrowdStrike using OAuth2 in n8n, including obtaining the necessary credentials from your CrowdStrike account and provides links to related resources and example workflows.
- [Customer.io Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/customerio.md): These credentials allow n8n nodes to authenticate with Customer.io using either an API Key, Tracking Site ID, and Region, with separate keys for the Track and App APIs. The Track API requires a Tracking Site ID, while the App API does not. Customer.io uses different API subdomains depending on the region you select, with options including Global region and EU region. Refer to Customer.io's documentation for instructions on creating the necessary API keys.
- [Datadog credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/datadog.md): These credentials can be used to authenticate Datadog with the HTTP Request node to make a Custom API call, requiring a Datadog account, Host, API Key, and App Key.
- [DeepL Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/deepl.md): These credentials allow n8n to authenticate with DeepL using an API key, supporting both Free and Pro API Plans, as detailed in DeepL's API documentation.
- [DeepSeek Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/deepseek.md): This document describes how to use DeepSeek credentials with n8n, including creating a DeepSeek account, generating an API key, and configuring the credential in n8n. It also provides links to DeepSeek's API documentation and a guide on making your first API call.
- [Demio Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/demio.md): This page describes how to authenticate the Demio node in n8n using an API key and API secret. Owner status is required in Demio to generate the necessary credentials, which can be found in Account Settings > API. Refer to Demio's API documentation for more information about the service.
- [DFIR-IRIS credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/dfiriris.md): This document describes how to configure DFIR-IRIS credentials in n8n for use with the HTTP Request node to make custom API calls, including obtaining an API key and setting the base URL.
- [DHL Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/dhl.md): This document describes how to obtain and use DHL credentials, specifically an API key, within n8n for authenticating with the DHL Shipment Tracking - Unified API.
- [Discord Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/discord.md): Learn how to authenticate the Discord node in n8n using Bot, OAuth2, or Webhook credentials, and how to create a Discord application and bot user, or a webhook, to obtain the necessary credentials.
- [Discourse credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/discourse.md): These credentials allow n8n to authenticate with Discourse nodes using an API key, requiring the Discourse instance URL, an API key generated in the Discourse admin panel, and a username.
- [Disqus credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/disqus.md): These credentials allow n8n to authenticate with Disqus via an API access token, enabling access to the Disqus API.
- [Drift Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/drift.md): These credentials authenticate the Drift node in n8n, supporting both API personal access tokens and OAuth2. To use the API personal access token, you must create a Drift app and install it to your Drift account. For OAuth2, n8n Cloud users can connect directly, while others may need to configure OAuth2 from scratch. Refer to Drift's API documentation for more information.
- [Dropbox Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/dropbox.md): This document explains how to configure Dropbox credentials in n8n, covering both API access token and OAuth2 authentication methods, including steps for creating a Dropbox app and handling user limits.
- [Dropcontact credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/dropcontact.md): These credentials allow n8n to authenticate with Dropcontact using an API key. To configure, you'll need an API Key, which can be found in your Dropcontact account under API. Refer to Dropcontact's API documentation for more information about the service and the Dropcontact API key documentation for more information.
- [Dynatrace Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/dynatrace.md): This document describes how to configure Dynatrace credentials in n8n for use with the HTTP Request node to make custom API calls, including the prerequisites and the use of Access Tokens for authentication.
- [Elasticsearch Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/elasticsearch.md): These credentials allow n8n to authenticate with Elasticsearch nodes using Basic Auth, requiring a username, password, and base URL from your Elasticsearch deployment.
- [Elastic Security Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/elasticsecurity.md): This document describes how to configure Elastic Security credentials in n8n, including prerequisites, supported authentication methods (Basic Auth and API Key), and instructions for obtaining the necessary information from your Elastic Security application.
- [Emelia credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/emelia.md): These credentials allow n8n to authenticate with Emelia nodes and triggers using an API key, as detailed in Emelia's API documentation.
- [ERPNext Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/erpnext.md): This document describes how to configure ERPNext credentials in n8n using an API key, including instructions for cloud-hosted and self-hosted environments, and how to find the subdomain of a cloud-hosted account.
- [Eventbrite Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/eventbrite.md): This document explains how to authenticate Eventbrite nodes in n8n using either an API private key or OAuth2, providing links to Eventbrite's API documentation for generating a private token and setting up OAuth.
- [F5 Big-IP Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/f5bigip.md): This page provides information on how to authenticate with F5 Big-IP using account login credentials for use with n8n's HTTP Request node and custom API calls.
- [Facebook App Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/facebookapp.md): This document explains how to configure Facebook App credentials for use with n8n, including creating a Meta app, generating an app access token, configuring the Facebook Trigger node, and optionally adding an app secret for enhanced security.
- [Facebook Graph API Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/facebookgraph.md): Describes how to configure Facebook Graph API credentials for use with n8n, including creating a Meta app and generating an App Access Token.
- [Facebook Lead Ads Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/facebookleadads.md): Learn how to configure Facebook Lead Ads credentials in n8n using OAuth2, including creating a Meta app, setting up Facebook Login for Business, and taking your Meta app live.
- [Figma credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/figma.md): This page describes how to authenticate n8n nodes with Figma using a personal access token.
- [FileMaker Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/filemaker.md): This document describes how to configure FileMaker credentials for use with n8n nodes, including prerequisites for setting up a FileMaker Server with the fmrest extended privilege and instructions for establishing a database connection.
- [Filescan Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/filescan.md): This document explains how to configure Filescan credentials in n8n for use with the HTTP Request node and custom API calls, including obtaining the API key from Filescan's profile settings.
- [Flow Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/flow.md): These credentials allow n8n to authenticate with Flow nodes and Flow Trigger nodes using an API key. To configure, you'll need your Organization ID and Access Token, which can be found in Flow's API documentation.
- [Form.io Trigger Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/formiotrigger.md): These credentials enable the Form.io Trigger node in n8n, supporting Basic Auth using your Form.io environment, email, and password; refer to Form.io's API documentation for details.
- [Formstack Trigger Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/formstacktrigger.md): This document explains how to configure Formstack Trigger credentials in n8n, including prerequisites, supported authentication methods (API access token and OAuth2), and instructions for obtaining the necessary credentials from Formstack.
- [Fortinet FortiGate Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/fortigate.md): This document explains how to configure Fortinet FortiGate credentials, including API access tokens, for use with the n8n HTTP Request node to make custom API calls, referencing Fortinet's API documentation for further information on token-based authentication and REST API administrators.
- [Freshdesk credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/freshdesk.md): These credentials allow n8n to authenticate with Freshdesk using an API key and domain to access Freshdesk data and functionality.
- [Freshservice Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/freshservice.md): This page provides instructions on how to authenticate Freshservice nodes in n8n using an API key and domain.
- [Freshworks CRM Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/freshworkscrm.md): This document describes how to configure Freshworks CRM credentials, including obtaining an API key and specifying the Freshworks CRM domain, for use with n8n nodes.
- [FTP Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ftp.md): This document explains how to configure FTP and SFTP credentials for use with n8n nodes, covering required information like host, port, username, password, and private key.
- [GetResponse Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/getresponse.md): This document explains how to configure GetResponse credentials for use with n8n, covering both API key and OAuth2 authentication methods, including instructions for setting up OAuth2 in a local development environment using ngrok.
- [Ghost Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ghost.md): Describes how to configure Ghost credentials in n8n, including prerequisites, supported authentication methods (Admin and Content API keys), and instructions for obtaining the necessary URL and API Key from Ghost.
- [GitHub Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/github.md): This document explains how to configure GitHub credentials in n8n, covering both API access token and OAuth2 authentication methods for use with GitHub nodes and triggers, and includes instructions for generating tokens and setting up the credential in n8n.
- [GitLab Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/gitlab.md): This document explains how to configure GitLab credentials in n8n, including using an API access token or OAuth2, with instructions for both self-hosting and n8n cloud users.
- [Gong Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/gong.md): This page provides information on how to configure Gong credentials for use with n8n, including instructions for using API access tokens and OAuth2. It includes links to Gong's API documentation and instructions for creating a Gong developer account and OAuth app. The page also provides links to Gong's API documentation for more information about the service.
- [Google OAuth2 Generic](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/google/oauth-generic.md): This document provides instructions for creating a generic OAuth2 Google credential for use with custom operations in n8n, including setting up a Google Cloud Console project, enabling APIs, configuring the OAuth consent screen, and creating Google OAuth client credentials.
- [Google OAuth2 Single Service](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/google/oauth-single-service.md): This document provides instructions for creating a Google credential for a single service within n8n, covering the steps to set up OAuth in Google Cloud Console and configure the n8n credential. It includes creating a Google Cloud Console project, enabling APIs, configuring the OAuth consent screen, creating OAuth client credentials, and finishing the n8n credential.
- [Google Service Account](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/google/service-account.md): This document explains how to connect n8n to a Google Service Account, covering prerequisites, setup steps in Google Cloud Console, and finishing the n8n credential configuration, as well as troubleshooting common issues like accessing Google Drive files.
- [Google Credentials in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/google.md): This document covers how to configure Google credentials in n8n, including OAuth2 and Service Account authentication methods, and lists compatible nodes for each method.
- [Google Gemini(PaLM) Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/googleai.md): This document explains how to configure Google Gemini(PaLM) credentials in n8n for use with the Embeddings Google Gemini, Google Gemini Chat Model, and Embeddings Google PaLM nodes. It outlines the prerequisites, including creating a Google Cloud account and project, and details the supported authentication method: Gemini(PaLM) API key. The guide provides instructions on obtaining an API key from Google AI Studio and using it to configure the credential in n8n. It uses the default host URL `https://generativelanguage.googleapis.com`.
- [Gotify Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/gotify.md): These credentials enable authentication for the Gotify node in n8n, supporting API token authentication for creating, deleting, and retrieving messages, requiring an App API Token for message creation and a Client API Token for other actions, along with the Gotify host URL.
- [GoToWebinar Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/gotowebinar.md): These credentials allow n8n to authenticate with GoToWebinar nodes using OAuth2, requiring a Client ID and Secret obtained from a GoToWebinar developer account.
- [Grafana Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/grafana.md): This document describes how to configure Grafana credentials in n8n using an API key and the base URL of your Grafana instance, and links to the Grafana API documentation for more information.
- [Grist Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/grist.md): This document explains how to configure Grist credentials in n8n, including obtaining an API key and specifying the Grist plan type (Free, Paid, or Self-Hosted) with relevant details like custom subdomain or self-hosted URL.
- [Groq Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/groq.md): These credentials allow n8n to authenticate with Groq, a service that requires an API key for authentication, and are used with the Groq Chat Model node, and the API key can be generated from the Groq console.
- [Gumroad credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/gumroad.md): This document describes how to configure Gumroad credentials in n8n using an API access token, and it refers to Gumroad's API documentation for more information.
- [HaloPSA Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/halopsa.md): This document explains how to configure HaloPSA credentials in n8n, including prerequisites, supported authentication methods (API key), and required information such as Hosting Type, Authorization Server URL, Resource Server URL, Client ID, Client Secret, and Tenant name.
- [Harvest Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/harvest.md): This document explains how to configure Harvest credentials in n8n, including prerequisites, supported authentication methods (API access token and OAuth2), and links to Harvest's API documentation and OAuth2 setup instructions.
- [Help Scout Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/helpscout.md): This page provides information on how to authenticate Help Scout nodes and Help Scout Trigger nodes in n8n using OAuth2, including prerequisites and related resources such as Help Scout's API documentation and OAuth documentation.
- [HighLevel Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/highlevel.md): Configure HighLevel credentials in n8n using either an API key (v1, deprecated) or OAuth2 (v2), including necessary scopes and redirect URLs; refer to HighLevel's API documentation for details.
- [Home Assistant Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/homeassistant.md): This page describes how to configure Home Assistant credentials in n8n, including obtaining the host, port, and access token from your Home Assistant instance.
- [HTTP Request Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/httprequest.md): This document describes how to use HTTP Request credentials in n8n to authenticate HTTP Request and HTTP Request Tool nodes, covering predefined, basic, digest, header, bearer, OAuth1, OAuth2, and query authentication methods.
- [HubSpot Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/hubspot.md): This document provides instructions for setting up HubSpot credentials in n8n, covering authentication methods like App token, Developer API key, and OAuth2, and detailing the required scopes for both the HubSpot node and HubSpot Trigger node.
- [Hugging Face Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/huggingface.md): These credentials allow authentication for the Hugging Face Inference and Embeddings Hugging Face Inference nodes in n8n, supporting API key authentication using a Hugging Face API token.
- [Humantic AI credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/humanticai.md): This document explains how to use Humantic AI credentials in n8n, including obtaining an API key from the Humantic AI API page for authentication.
- [Hunter Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/hunter.md): These credentials allow n8n to authenticate with Hunter.io using an API key, enabling access to Hunter's features via the Hunter node. To configure, you need an account and an API key generated from your Hunter dashboard. Refer to Hunter's API documentation for more information.
- [Hybrid Analysis Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/hybridanalysis.md): This document describes how to configure Hybrid Analysis credentials in n8n for use with the HTTP Request node to make custom API calls, focusing on API key authentication and providing links to Hybrid Analysis API documentation and n8n example workflows.
- [Gmail IMAP Credentials Setup](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/imap/gmail.md): This document explains how to configure IMAP credentials with a Gmail account, including enabling 2-Step Verification, generating an app password, and setting up the credential in n8n. It provides instructions for setting the user, password, host, port, and SSL/TLS settings. It also links to Google documentation for further information on app passwords and adding Gmail to another client.
- [Outlook.com IMAP Credentials for n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/imap/outlook.md): This document provides instructions on configuring Outlook.com IMAP credentials within n8n, including setting up the credentials, troubleshooting connection errors, and using an app password for enhanced security.
- [Yahoo IMAP Credentials Setup](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/imap/yahoo.md): This document provides instructions on how to configure Yahoo IMAP credentials within n8n, including generating an app password and setting up the credential with the correct user, password, host, port, and SSL/TLS settings.
- [IMAP Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/imap.md): These credentials allow n8n to authenticate with IMAP email servers for nodes like IMAP Email, supporting authentication via user account with details such as username, password, host, and port, along with SSL/TLS and self-signed certificate options; refer to provider-specific instructions for Gmail, Outlook.com, and Yahoo, or search for generic IMAP settings.
- [Imperva WAF Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/impervawaf.md): These credentials allow n8n to authenticate with Imperva WAF using an API key for custom API calls; an Imperva WAF account and API ID/Key are required.
- [Intercom Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/intercom.md): These credentials allow n8n to authenticate with Intercom using an API key (Access Token) obtained by creating an app in the Intercom developer hub, enabling the use of Intercom nodes.
- [Invoice Ninja Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/invoiceninja.md): These credentials allow n8n to authenticate with Invoice Ninja nodes and Invoice Ninja Trigger nodes using an API key, requiring a URL and API Token, and optionally a Secret for v5 API users.
- [Iterable Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/iterable.md): This page describes how to use Iterable credentials to authenticate the Iterable node in n8n, including prerequisites, supported authentication methods (API key), and related resources like Iterable's API documentation and instructions for creating API keys.
- [Jenkins Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/jenkins.md): These credentials allow n8n to authenticate with Jenkins nodes using an API token by providing the Jenkins Username, Personal API Token, and Jenkins Instance URL.
- [Jina AI Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/jinaai.md): This document describes how to use Jina AI credentials within n8n, including obtaining an API key and related resources for the Jina AI reader and search APIs.
- [Jira Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/jira.md): This page describes how to configure Jira credentials in n8n, including prerequisites, supported authentication methods (SW Cloud API token and SW Server account), and related resources, with detailed instructions for obtaining and using API tokens or account passwords.
- [JotForm Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/jotform.md): This document describes how to configure JotForm credentials in n8n using an API key and API domain, including steps for creating a new key in JotForm and selecting the appropriate API domain based on the type of forms being used (standard, EU Safe Forms, or HIPAA forms).
- [JWT Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/jwt.md): These credentials allow n8n nodes like JWT and Webhook to authenticate using either a passphrase with HMAC or a private key (PEM key) for Private Key JWT with RSA or ECDSA. Supported algorithms include HS256, RS256, ES256, and more.
- [Kafka Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/kafka.md): This document describes how to configure Kafka credentials within n8n, including using a Client ID, Broker list, and optional username/password authentication details for Kafka environments that use authentication.
- [Keap credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/keap.md): These credentials let you authenticate the Keap and Keap Trigger nodes, using OAuth2 authentication after creating a Keap developer account.
- [Kibana Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/kibana.md): This document explains how to configure Kibana credentials for use with n8n, including prerequisites, supported authentication methods (basic auth), and required information like URL, username, and password. It also provides links to Kibana API documentation, custom API operations, and example workflows.
- [Kitemaker Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/kitemaker.md): This page provides instructions on how to authenticate Kitemaker nodes in n8n using an API access token, including prerequisites and related resources such as Kitemaker's API documentation.
- [KoboToolbox Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/kobotoolbox.md): This document explains how to configure KoboToolbox credentials, including the API Root URL and API token, for use with n8n nodes, referencing the KoboToolbox API documentation for further information.
- [LDAP Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ldap.md): These credentials allow n8n nodes to authenticate with an LDAP server, supporting authentication methods like LDAP server details and requiring information such as server address, port, Binding DN, and password.
- [Lemlist credentials | n8n Docs](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/lemlist.md): This page provides instructions on how to authenticate Lemlist nodes and Lemlist Trigger nodes in n8n using an API key, and includes links to the Lemlist API documentation and authentication instructions.
- [Line Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/line.md): This document explains how to configure Line credentials in n8n for use with the Line Notify service, including obtaining a Client ID and Client Secret; note that Line Notify is discontinuing service as of April 1st 2025.
- [Linear Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/linear.md): This page describes how to use Linear credentials in n8n, including API key and OAuth2 authentication methods. To use the API key, you need a personal API key. To use OAuth2, you need a Client ID, a Client Secret, and to select the Actor. For the Linear Trigger node, you must enable the Include Admin Scope toggle. Refer to Linear's API documentation for more information.
- [LingvaNex Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/lingvanex.md): These credentials allow n8n to authenticate with LingvaNex using an API key, enabling the use of LingvaNex's translation services within n8n workflows.
- [LinkedIn Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/linkedin.md): This document provides instructions for setting up LinkedIn credentials in n8n, covering Community Management OAuth2 and OAuth2 authentication methods, prerequisites, and related resources, with specific instructions for creating a developer app and enabling necessary products/APIs.
- [LoneScale credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/lonescale.md): These credentials enable authentication for the LoneScale and LoneScale Trigger nodes in n8n using an API key obtained from a LoneScale account, as detailed in LoneScale's API documentation.
- [Magento 2 Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/magento2.md): This document describes how to configure Magento 2 credentials in n8n using an API access token. It outlines the prerequisites, including creating a Magento account and enabling standalone bearer tokens. The guide also provides step-by-step instructions for obtaining the access token from the Magento Admin Panel and related resources for more information.
- [Mailcheck credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mailcheck.md): These credentials let you authenticate Mailcheck nodes in n8n, supporting API key authentication; refer to Mailcheck's API documentation for more information.
- [Mailchimp Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mailchimp.md): These credentials let you authenticate the Mailchimp and Mailchimp Trigger nodes, using either an API key or OAuth2. To use an API key, generate one in the API keys section of your Mailchimp account. For OAuth2, register an application and refer to Mailchimp's OAuth2 documentation. Mailchimp recommends using an API key if you're only accessing your own Mailchimp account's data.
- [MailerLite Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mailerlite.md): This document explains how to configure MailerLite credentials in n8n, including obtaining an API key and enabling the Classic API toggle when necessary.
- [Mailgun Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mailgun.md): This document explains how to configure Mailgun credentials with an API key for use with n8n nodes, including specifying the API domain, email domain, and API key, and how to handle multiple email domains.
- [Mailjet Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mailjet.md): This page describes how to use Mailjet credentials with n8n, including Email API key and SMS token authentication methods, along with links to Mailjet's API documentation and instructions for creating subaccounts.
- [Malcore Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/malcore.md): These credentials let you authenticate using the HTTP Request node to make custom Malcore API calls; you will need an API key from your Malcore account.
- [Mandrill Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mandrill.md): These credentials allow n8n to authenticate with Mandrill using an API key, which can be generated from the Mandrill settings after creating a Mailchimp Transactional email account.
- [Marketstack credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/marketstack.md): These credentials allow n8n to authenticate with Marketstack using an API key, and require users to specify whether to use HTTPS based on their Marketstack plan.
- [Matrix Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/matrix.md): This document describes how to configure Matrix credentials in n8n, including prerequisites, supported authentication methods (API access token), and instructions for obtaining the access token and homeserver URL.
- [Mattermost Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mattermost.md): This page explains how to authenticate the Mattermost node in n8n using an API access token, including how to generate a personal access token in Mattermost and enable the personal access tokens integration if it is not already enabled.
- [Mautic Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mautic.md): This document explains how to authenticate Mautic nodes in n8n using Basic Auth or OAuth2, including enabling the Mautic API and configuring credentials with the required URL, username, password, Client ID, and Client Secret.
- [Medium Credentials in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/medium.md): This document explains how to authenticate the Medium node in n8n using either an API access token or OAuth2, noting that the Medium API is no longer supported for new integrations.
- [MessageBird Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/messagebird.md): This page describes how to authenticate the MessageBird node in n8n using an API key, referencing MessageBird's API documentation and access key settings.
- [Metabase credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/metabase.md): This document describes how to configure Metabase credentials for use with n8n, including prerequisites, supported authentication methods (Basic Auth), and required information such as URL, username, and password.
- [Microsoft Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/microsoft.md): This document explains how to configure Microsoft credentials in n8n for use with various Microsoft services like Dynamics CRM, Excel, OneDrive, Outlook, SharePoint, Teams, and To Do, covering prerequisites, supported authentication methods (OAuth2), and service-specific settings, as well as troubleshooting common issues like needing admin approval.
- [Microsoft Azure Monitor Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/microsoftazuremonitor.md): This document explains how to configure Microsoft Azure Monitor credentials in n8n for use with the HTTP Request node, covering prerequisites like having a Microsoft Azure account and an app registered in Microsoft Entra ID, and outlining the OAuth2 authentication method with required details such as Client ID, Client Secret, Tenant ID, and Resource.
- [Microsoft Entra ID Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/microsoftentra.md): These credentials allow n8n to authenticate with Microsoft Entra ID for nodes like Microsoft Entra ID, supporting OAuth2 authentication; users need a Microsoft Entra ID account and may require administrator consent, and the documentation provides steps for registering an application, generating a client secret, and setting custom scopes, while also addressing common issues like needing admin approval.
- [Microsoft SQL Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/microsoftsql.md): This document describes how to configure Microsoft SQL credentials for use with n8n nodes, including prerequisites, supported authentication methods, and detailed instructions for setting up a SQL database connection, covering server name, database name, user credentials, port, domain, TLS, SSL, and timeout settings.
- [Milvus credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/milvus.md): These credentials allow n8n to authenticate with a Milvus instance for use with the Milvus Vector Store node, supporting basic authentication with a base URL, username, and password.
- [Mindee Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mindee.md): These credentials allow n8n to authenticate with Mindee's Invoice OCR API and Receipt OCR API using an API key obtained from a Mindee account.
- [Miro Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/miro.md): These credentials enable authentication via OAuth2 for the Miro API when using the HTTP Request node in n8n for custom API calls. To configure, you will need a Miro account, a Client ID, and a Client Secret. Cloud users can connect directly through their browser, while self-hosting users need to create an app and configure OAuth2. Refer to Miro's API documentation for more information about authentication. This is a credential-only node; refer to Custom API operations to learn more.
- [MISP credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/misp.md): These credentials allow n8n to authenticate with a MISP instance using an API key (Automation key) and a base URL, with the option to allow unauthorized certificates.
- [Mist Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mist.md): These credentials allow authentication with the Mist API via an API token, for use with the HTTP Request node to make custom API calls, and require selecting the appropriate region (Europe or Global).
- [Mistral Cloud Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mistral.md): These credentials enable authentication for the Mistral Cloud nodes and Embeddings Mistral Cloud nodes, requiring an API key generated from a Mistral La Plateforme account with payment information added.
- [Mocean Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mocean.md): These credentials allow n8n to authenticate with Mocean using an API key and API secret, which can be found in the Mocean dashboard, to use nodes like Mocean. Refer to Mocean's API documentation for more information.
- [monday.com Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mondaycom.md): This document explains how to authenticate the monday.com node in n8n using either an API token or OAuth2, including instructions for obtaining the necessary credentials from your monday.com account.
- [MongoDB Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mongodb.md): These credentials let you authenticate MongoDB, MongoDB Atlas Vector Store, and MongoDB Chat Memory nodes in n8n, supporting connection strings and individual values for database connections, along with TLS configuration using x.509 certificates.
- [Monica CRM Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/monicacrm.md): This document explains how to authenticate Monica CRM nodes in n8n using an API token obtained from your Monica CRM account or self-hosted instance settings, covering both cloud-hosted and self-hosted environments.
- [Motorhead Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/motorhead.md): These credentials allow n8n to authenticate Motorhead nodes using an API key, host URL, and client ID, enabling access to Motorhead's API for advanced AI functionalities.
- [MQTT Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mqtt.md): This document provides information on how to configure MQTT credentials in n8n for use with the MQTT and MQTT Trigger nodes, including details on supported authentication methods and broker connection settings such as protocol, host, port, username, password, and SSL configuration.
- [MSG91 Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/msg91.md): These credentials allow n8n to authenticate with MSG91 using an API key. To configure, you will need an Authentication Key from the user menu in MSG91. MSG91 enables IP Security by default, so you have to add the n8n IP addresses to the Company's whitelisted IPs, or to the Whitelisted IPs section of an authkey's details.
- [MySQL Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/mysql.md): These credentials allow n8n nodes like MySQL and Agent to authenticate with a MySQL database, supporting database connections with options for SSL and SSH tunnels, requiring host, database name, user, password, and port information.
- [Netlify credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/netlify.md): These credentials authenticate the Netlify and Netlify Trigger nodes and require an API access token, which can be generated in Applications > Personal Access Tokens as described in Netlify's API documentation.
- [Netscaler ADC Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/netscaleradc.md): This document describes how to configure Netscaler ADC credentials for use with n8n, including prerequisites, supported authentication methods (Basic Auth), and required information like URL, username, and password. It also provides links to the Netscaler ADC NITRO API documentation and resources for performing basic operations.
- [Nextcloud Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/nextcloud.md): This document explains how to configure Nextcloud credentials in n8n, covering both Basic Auth and OAuth2 authentication methods, including obtaining the WebDAV URL, setting up app passwords, and configuring OAuth2 client applications.
- [NocoDB Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/nocodb.md): This document explains how to configure NocoDB credentials in n8n, including how to generate and use API tokens (recommended) and user auth tokens (deprecated).
- [Notion Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/notion.md): This document explains how to configure Notion credentials in n8n, covering both API integration token and OAuth2 authentication methods, and describes the differences between internal and public integrations.
- [npm Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/npm.md): This document describes how to authenticate the npm node in n8n using an npm account and API access token, including instructions for creating an access token and specifying the registry URL.
- [Odoo Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/odoo.md): This document describes how to configure Odoo credentials in n8n, including the supported authentication methods (API key and password), required information (Site URL, Username, Password/API key, and Database name), and instructions for setting up the credential with either an API key or a password, noting that an API key may be required for certain modules or settings and that external API access is only available on a Custom Odoo plan.
- [Okta Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/okta.md): This page provides instructions on how to authenticate Okta nodes in n8n using the SSWS API Access token, including prerequisites and how to obtain the necessary URL and token from your Okta org.
- [Ollama Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ollama.md): This document explains how to configure Ollama credentials in n8n to authenticate Ollama nodes, including prerequisites, supported authentication methods (Instance URL), and troubleshooting tips for self-hosted n8n instances.
- [One Simple API Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/onesimpleapi.md): These credentials allow n8n to authenticate with the One Simple API using an API token. Create a One Simple API account and generate an API token with the necessary permissions from the API Tokens page to configure this credential in n8n. Refer to One Simple API's documentation for more information.
- [Onfleet credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/onfleet.md): These credentials authenticate the Onfleet and Onfleet Trigger nodes, requiring an Onfleet administrator account and API key, as detailed in Onfleet's API documentation.
- [OpenAI Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/openai.md): This document explains how to configure OpenAI credentials in n8n using an API key and Organization ID for authenticating OpenAI nodes, including OpenAI, Chat OpenAI, Embeddings OpenAI, and LM OpenAI.
- [OpenCTI credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/opencti.md): This page describes how to authenticate with OpenCTI using the HTTP Request node in n8n, focusing on API key authentication and linking to OpenCTI's official documentation and n8n example workflows.
- [OpenRouter credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/openrouter.md): This document describes how to configure OpenRouter credentials in n8n, including creating an OpenRouter account, generating an API key, and using the key in n8n.
- [OpenWeatherMap Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/openweathermap.md): This page describes how to use OpenWeatherMap credentials within n8n, including obtaining an API access token from your OpenWeatherMap account.
- [Oura credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/oura.md): These credentials allow n8n to authenticate with Oura using an API access token, enabling access to Oura data through the Oura node; users can generate a personal access token on the Oura developer platform.
- [Paddle Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/paddle.md): These credentials can be used to authenticate the Paddle node in n8n, using either Vendor Auth Code or Vendor ID obtained from a Paddle account, and can be configured to use the Sandbox API endpoint.
- [PagerDuty Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/pagerduty.md): This document explains how to configure PagerDuty credentials in n8n, including the prerequisites, supported authentication methods (API token and OAuth2), and instructions for generating an API token and registering a new PagerDuty app for OAuth2.
- [PayPal Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/paypal.md): This document explains how to configure PayPal credentials, including obtaining the Client ID and Secret from the PayPal developer dashboard, for use with n8n nodes such as PayPal and PayPal Trigger.
- [Peekalink Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/peekalink.md): This document describes how to configure Peekalink credentials, including obtaining an API key from the Peekalink dashboard, for use with n8n nodes such as Peekalink.
- [Perplexity credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/perplexity.md): These credentials allow n8n users to authenticate with Perplexity using an API key for nodes like Perplexity. Refer to Perplexity's API documentation for more information about the service and authentication.
- [PhantomBuster credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/phantombuster.md): This page describes how to use PhantomBuster credentials with n8n, including prerequisites, supported authentication methods, and how to obtain an API key from the PhantomBuster website.
- [Philips Hue Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/philipshue.md): This page provides instructions for setting up Philips Hue credentials in n8n, including prerequisites, supported authentication methods (OAuth2), and related resources like the Philips Hue CLIP API documentation. It also includes specific instructions for n8n cloud users and those configuring OAuth2 from scratch, with links to the Philips Hue developer portal.
- [Pinecone Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/pinecone.md): This document explains how to configure Pinecone credentials in n8n, including obtaining an API key from the Pinecone console and using it to authenticate the Pinecone Vector Store node.
- [Pipedrive Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/pipedrive.md): This document explains how to configure Pipedrive credentials in n8n using either an API token or OAuth2, and it details the scopes required for different Pipedrive node actions and the Pipedrive Trigger node.
- [Plivo credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/plivo.md): This page describes how to use Plivo credentials for authenticating Plivo nodes in n8n, including obtaining the Auth ID and Auth Token from the Plivo console.
- [Postgres Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/postgres.md): This document provides instructions on how to configure Postgres credentials in n8n for use with nodes like Postgres, Agent, Postgres Chat Memory, and PGVector Vector Store, including details on database connection and SSH tunnel setup.
- [PostHog Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/posthog.md): This document explains how to configure PostHog credentials in n8n using an API key, including the required URL and API key based on the type of endpoint (public or private) and PostHog instance location (US Cloud, EU Cloud, or self-hosted).
- [Postmark credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/postmark.md): This document explains how to authenticate Postmark nodes in n8n using an API token. It includes instructions on how to obtain the Server API Token from your Postmark account and links to Postmark's API documentation for more information.
- [Pushbullet Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/pushbullet.md): This document explains how to configure Pushbullet credentials in n8n using OAuth2, including obtaining the Client ID and Client Secret from a Pushbullet app and setting the correct redirect URI.
- [Pushcut credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/pushcut.md): This document explains how to authenticate the Pushcut and Pushcut Trigger nodes in n8n using an API key, and provides instructions for generating an API key within the Pushcut app.
- [Pushover Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/pushover.md): These credentials allow n8n users to authenticate the Pushover node using an API key obtained by registering an application on the Pushover platform, as detailed in Pushover's API documentation.
- [Qdrant Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/qdrant.md): This document describes how to configure Qdrant credentials in n8n using an API key and Qdrant URL, which are required to authenticate the Qdrant Vector Store node; it provides instructions for obtaining the API key and URL from the Qdrant Cloud Dashboard.
- [QRadar Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/qradar.md): This document describes how to authenticate with QRadar using an API key when using the HTTP Request node to make a custom API call.
- [Qualys Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/qualys.md): This document describes how to configure Qualys credentials for use with the HTTP Request node in n8n, including prerequisites, supported authentication methods, and required fields like Username, Password, and the X-Requested-With header.
- [QuestDB Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/questdb.md): This document explains how to configure QuestDB credentials within n8n, including prerequisites, supported authentication methods (database connection), and required information such as host, database, user, password, SSL settings, and port.
- [Quick Base Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/quickbase.md): This document describes how to configure Quick Base credentials in n8n, including obtaining the hostname and user token required for authentication.
- [QuickBooks Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/quickbooks.md): This document describes how to configure QuickBooks credentials for use with n8n, including prerequisites, supported authentication methods, and instructions for obtaining the Client ID and Client Secret from Intuit.
- [RabbitMQ Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/rabbitmq.md): This document describes how to configure RabbitMQ credentials in n8n, including authentication methods, user connection settings, and troubleshooting `guest` user issues.
- [Raindrop credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/raindrop.md): These credentials allow n8n to authenticate with Raindrop using OAuth2, requiring a Client ID and Secret generated by creating a Raindrop app with the n8n OAuth Redirect URL.
- [Rapid7 InsightVM Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/rapid7insightvm.md): This page describes how to configure Rapid7 InsightVM credentials in n8n for use with the HTTP Request node, including obtaining the URL and API Key from your Rapid7 InsightVM account.
- [Recorded Future Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/recordedfuture.md): These credentials allow authentication when using the HTTP Request node to make a Custom API call to Recorded Future, using an API access token.
- [Reddit Credentials in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/reddit.md): This document explains how to configure Reddit credentials within n8n using OAuth2, including generating a Client ID and Client Secret by creating a third-party app on Reddit and setting the correct OAuth Callback URL.
- [Redis credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/redis.md): These credentials let you authenticate the Redis and Redis Chat Memory nodes, supporting database connection with password, host, port, database number, and SSL configuration; refer to Redis's developer documentation for additional information.
- [Rocket.Chat Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/rocketchat.md): This document explains how to configure Rocket.Chat credentials in n8n, including obtaining the User ID, Auth Key (personal access token), and Rocket.Chat Domain to authenticate the Rocket.Chat node.
- [Rundeck credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/rundeck.md): These credentials allow n8n nodes to authenticate with Rundeck using a user API token, requiring the Rundeck server URL and the user API token found in the user profile settings.
- [S3 Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/s3.md): This document explains how to configure S3 credentials in n8n for authenticating with S3-compatible services like DigitalOcean Spaces, MinIO, and Wasabi, covering authentication methods such as S3 endpoint and providing detailed instructions for DigitalOcean Spaces and Wasabi.
- [Salesforce Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/salesforce.md): This document explains how to configure Salesforce credentials for use with n8n, covering both JWT and OAuth2 authentication methods and providing step-by-step instructions for setting up a connected app in Salesforce and configuring the necessary settings in n8n. It includes specific instructions for both n8n cloud and self-hosted users.
- [Salesmate Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/salesmate.md): Salesmate credentials allow n8n nodes to authenticate with Salesmate using an API token, requiring a Session Token (Access Key) and the Salesmate domain name.
- [SearXNG Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/searxng.md): These credentials allow n8n to authenticate the SearXNG Tool using the API URL of a running SearXNG instance, as described in SearXNG's documentation.
- [SeaTable Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/seatable.md): These credentials allow n8n to authenticate with SeaTable nodes and triggers using an API key, requiring the environment, API token with read-write permissions, and the timezone of the SeaTable server.
- [SecurityScorecard Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/securityscorecard.md): This document describes how to authenticate SecurityScorecard nodes in n8n using an API key. It provides instructions on generating an API key either as a user or as a bot user within the SecurityScorecard platform. Refer to SecurityScorecard's developer and API documentation for additional information.
- [Segment Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/segment.md): These credentials allow n8n to authenticate with Segment using an API key. To configure, users need a Segment account and a Write Key, found by adding a Node.js source in Sources. Refer to Segment's Sources documentation for more information.
- [Sekoia Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sekoia.md): This document explains how to use Sekoia credentials with the HTTP Request node in n8n for making custom API calls, including how to generate an API key within the Sekoia SOC platform.
- [Gmail Send Email Credentials for n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sendemail/gmail.md): This document provides instructions on how to configure Gmail Send Email credentials in n8n by enabling 2-Step Verification, generating an app password, and setting up the credential with the Gmail email address, app password, host, port, and SSL/TLS settings.
- [Outlook.com Send Email Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sendemail/outlook.md): This document provides instructions on how to configure Send Email credentials with an Outlook.com account, including the option to use an app password for enhanced security.
- [Yahoo Send Email Credentials in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sendemail/yahoo.md): This document provides instructions on how to configure Send Email credentials in n8n to work with a Yahoo account, including generating an app password and setting up the credential with the correct host and port.
- [Send Email Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sendemail.md): This document explains how to configure Send Email credentials in n8n, including prerequisites, supported authentication methods, and instructions for common email providers like Gmail, Outlook.com, and Yahoo. It details the required information, like user email, password, host, and port, and provides guidance for finding SMTP settings for other providers.
- [SendGrid Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sendgrid.md): These credentials allow n8n to authenticate with SendGrid using an API key for use with the SendGrid node.
- [Sentry.io Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sentryio.md): This document explains how to configure Sentry.io credentials in n8n, including API token, OAuth2, and Server API token authentication methods, with links to Sentry.io's API documentation and instructions for creating a user auth token and OAuth2 integration.
- [Serp credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/serp.md): These credentials let you authenticate the Serp node using an API key, allowing access to SerpApi's search API; to configure, you'll need to create a SerpApi account and copy your private API key into the n8n credential.
- [ServiceNow Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/servicenow.md): This document explains how to configure ServiceNow credentials in n8n, including prerequisites, supported authentication methods (Basic Auth and OAuth2), and instructions for obtaining the necessary information such as username, password, subdomain, Client ID, and Client Secret.
- [Shopify Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/shopify.md): This document provides instructions on how to configure Shopify credentials for use with n8n, covering access token, OAuth2, and deprecated API key authentication methods, along with troubleshooting tips for common issues like enabling custom app development and resolving forbidden credential errors.
- [Shuffler credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/shuffler.md): These credentials allow n8n to authenticate with Shuffler using an API key, enabling custom API calls via the HTTP Request node.
- [SIGNL4 Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/signl4.md): This document explains how to use SIGNL4 credentials within n8n, including prerequisites, supported authentication methods (Webhook secret), and instructions for obtaining the Team Secret.
- [Slack Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/slack.md): This document explains how to configure Slack credentials in n8n, covering both API access token and OAuth2 authentication methods for use with the Slack and Slack Trigger nodes, including instructions for creating a Slack app and setting scopes.
- [seven credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sms77.md): These credentials allow n8n users to authenticate the seven node using an API key obtained from their seven developer account.
- [Snowflake Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/snowflake.md): These credentials allow n8n to authenticate with Snowflake, enabling the use of the Snowflake node. It supports database connection authentication Method. To configure, you need Account, Database, Warehouse, Username, Password, Schema, and Role. You can also enable Client Session Keep Alive to prevent timeouts. Refer to Snowflake's API and SQL documentation for more information.
- [SolarWinds IPAM Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/solarwindsipam.md): These credentials allow n8n to authenticate with SolarWinds IPAM using a username and password for making custom API calls via the HTTP Request node.
- [SolarWinds Observability SaaS credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/solarwindsobservability.md): These credentials allow authentication with SolarWinds Observability SaaS when using the HTTP Request node for custom API calls, supporting API Token authentication; a SolarWinds Observability SaaS account is required along with the URL and API Token. Refer to SolarWinds Observability SaaS's API documentation for more information.
- [Splunk Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/splunk.md): This document explains how to configure Splunk credentials in n8n, covering prerequisites, supported authentication methods (API auth token), required capabilities, and related resources for Splunk's Enterprise API.
- [Spontit credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/spontit.md): These credentials allow n8n users to authenticate Spontit nodes using an API key and username, enabling integration with the Spontit service for various automation workflows, and the API key and username can be found in the Spontit account settings.
- [Spotify Credentials in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/spotify.md): This document explains how to authenticate the Spotify node in n8n using OAuth2, including instructions for self-hosting users to create a Spotify app and obtain the Client ID and Client Secret, as well as a note for n8n Cloud users regarding connection details.
- [SSH Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/ssh.md): These instructions describe how to configure SSH credentials in n8n for authenticating SSH nodes using either a password or a private key.
- [Stackby Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/stackby.md): This document explains how to use Stackby credentials within n8n, including generating an API key from your Stackby account to authenticate Stackby nodes.
- [Storyblok Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/storyblok.md): This document describes how to configure Storyblok credentials in n8n for use with the Storyblok node, covering both Content API (read-only) and Management API (full CRUD) authentication methods using API keys or personal access tokens, respectively. It also provides links to the relevant Storyblok API documentation and instructions for retrieving the necessary access tokens from your Storyblok account settings. N8n supports Content API v1 only.
- [Strapi Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/strapi.md): This document explains how to configure Strapi credentials in n8n, covering API user account and API token authentication methods, along with prerequisites and related resources like Strapi's documentation.
- [Strava Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/strava.md): This page provides instructions for setting up Strava credentials in n8n, including creating a Strava application and using OAuth2 for authentication to connect the Strava and Strava Trigger nodes..
- [Stripe Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/stripe.md): This document explains how to configure Stripe credentials in n8n using an API key, including how to generate secret keys in both live and test modes, and how to differentiate between them.
- [Supabase Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/supabase.md): This document explains how to configure Supabase credentials in n8n, including obtaining the Host URL and Service Role Secret from your Supabase project API settings. These credentials are used to authenticate the Supabase and Supabase Vector Store nodes.
- [SurveyMonkey Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/surveymonkey.md): This document outlines how to configure SurveyMonkey credentials in n8n, covering API access token and OAuth2 authentication methods, required app scopes, and instructions for obtaining necessary credentials like Access Token, Client ID, and Client Secret.
- [SyncroMSP Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/syncromsp.md): These credentials allow n8n to authenticate with SyncroMSP using an API key and subdomain, enabling access to SyncroMSP's API. Instructions are provided for locating the API token and subdomain within SyncroMSP. Refer to SyncroMSP's API documentation for details about the service.
- [Sysdig Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/sysdig.md): This document explains how to configure Sysdig Management credentials in n8n, focusing on the Access Key authentication method for making custom API calls using the HTTP Request node. It also provides links to Sysdig's documentation and instructions on obtaining the Access Key.
- [Taiga credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/taiga.md): These credentials allow n8n to authenticate with Taiga nodes and triggers using basic authentication, requiring a username, password, and environment (Cloud or Self-Hosted) with an optional URL for Self-Hosted instances, as detailed in Taiga's API documentation.
- [Tapfiliate credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/tapfiliate.md): These credentials allow n8n to authenticate with Tapfiliate using an API key, enabling access to Tapfiliate's API. To configure, users need to obtain their API Key from their Tapfiliate profile settings.
- [Telegram Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/telegram.md): This document explains how to obtain and use Telegram API bot access tokens for authenticating Telegram and Telegram Trigger nodes in n8n, including creating a Telegram account, interacting with BotFather to create a new bot, and generating the required access token.
- [TheHive Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/thehive.md): This document explains how to configure TheHive credentials in n8n, including prerequisites, supported authentication methods (API key), and required information such as API key, URL, API Version, and the option to ignore SSL issues, with specific instructions for TheHive 3 and 4, and a note to use TheHive 5 credentials for TheHive 5.
- [TheHive 5 Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/thehive5.md): These credentials allow n8n nodes to authenticate with TheHive 5 using an API key, requiring the URL of TheHive server and the API key generated by an orgAdmin or superAdmin account.
- [TimescaleDB Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/timescaledb.md): This document outlines how to configure TimescaleDB credentials for use with n8n, including connection details like host, database, user, password, and SSL settings, with links to Timescale documentation for further information.
- [Todoist Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/todoist.md): This document explains how to configure Todoist credentials in n8n using either an API key or OAuth2, including instructions for obtaining the necessary API key, Client ID, and Client Secret from your Todoist account and the Todoist App Management Console.
- [Toggl Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/toggl.md): These credentials allow n8n to authenticate with Toggl using basic auth, requiring a Toggl account, username (email), and password, and are used by the Toggl Trigger node; refer to Toggl's API documentation for details.
- [TOTP Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/totp.md): This document describes how to use TOTP credentials within n8n, including the prerequisites, supported authentication methods (secret and label), and related resources for Time-based One-time Password (TOTP) authentication.
- [Travis CI Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/travisci.md): These credentials allow n8n to authenticate with Travis CI using an API token, which can be obtained from the Travis CI account settings or generated via the command line client, enabling the use of Travis CI nodes.
- [Trellix ePO credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/trellixepo.md): These credentials enable authentication with Trellix ePolicy Orchestrator (ePO) when using the HTTP Request node for custom API calls in n8n, supporting Basic Auth with a username and password.
- [Trello Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/trello.md): This document explains how to configure Trello credentials in n8n using an API key and API token, which can be generated by creating a Trello Power-Up and granting the necessary permissions.
- [Twake Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/twake.md): This document explains how to configure Twake credentials for use with n8n, covering both Cloud API key and Server API key authentication methods, including prerequisites and instructions for obtaining the necessary credentials from a Twake account or self-hosted instance.
- [Twilio Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/twilio.md): This page describes how to configure Twilio credentials in n8n, covering authentication methods (Auth Token and API Key) and providing step-by-step instructions for setting up the credentials with Account SID, Auth Token, API Key SID, and API Key Secret.
- [Twist Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/twist.md): This page provides instructions for authenticating with Twist using OAuth2 in n8n, including creating a general integration, configuring the OAuth Redirect URL, and obtaining the Client ID and Client Secret.
- [X (Formerly Twitter) Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/twitter.md): This document outlines how to configure X (formerly Twitter) credentials in n8n, including prerequisites, supported authentication methods like OAuth2, and information on X rate limits.
- [Typeform Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/typeform.md): This document explains how to configure Typeform credentials in n8n, including obtaining an API token or setting up OAuth2 by registering a new Typeform app and providing the Client ID and Client Secret.
- [Unleashed Software credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/unleashedsoftware.md): These credentials allow you to authenticate the Unleashed Software node using an API key, requiring an API ID and API Key from the Unleashed API Access page, accessible only to account owners.
- [UpLead credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/uplead.md): These credentials allow n8n to authenticate with UpLead using an API key, enabling the use of UpLead nodes within n8n workflows; generate an API key in your UpLead account under Account > Profiles.
- [uProc credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/uproc.md): These credentials allow n8n users to authenticate the uProc node using an API key. To configure the credential, users need to provide their uProc email address and API key, which can be found in the uProc account settings under Integrations > API Credentials. Refer to uProc's API documentation for more information.
- [UptimeRobot Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/uptimerobot.md): This document explains how to configure UptimeRobot credentials in n8n using an API key to authenticate the UptimeRobot node and access UptimeRobot services.
- [Venafi TLS Protect Cloud Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/venafitlsprotectcloud.md): These credentials allow n8n to authenticate with Venafi TLS Protect Cloud using an API key, enabling access to the Venafi TLS Protect Cloud and Trigger nodes; users need a TLS Protect Cloud account and API key, obtainable via their profile preferences or VCert.
- [Venafi TLS Protect Datacenter Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/venafitlsprotectdatacenter.md): Instructions for setting up Venafi TLS Protect Datacenter credentials for use with n8n, including prerequisites, authentication methods, and configuration details for API integration.
- [Vero credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/vero.md): These credentials allow n8n to authenticate with Vero using an API auth token, enabling access to Vero's features via the Vero node. Auth tokens can be found in the Vero account settings.
- [VirusTotal Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/virustotal.md): This document explains how to authenticate with VirusTotal using an API key in order to make custom API calls with the HTTP Request node.
- [Vonage Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/vonage.md): This page describes how to use Vonage credentials with n8n, including prerequisites, supported authentication methods (API key), and instructions for obtaining the API Key and API Secret from the Vonage developer dashboard.
- [Webflow Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/webflow.md): This document explains how to configure Webflow credentials in n8n, including prerequisites, supported authentication methods (API access token and OAuth2), and related resources, with specific instructions for obtaining the Access Token and setting up OAuth2, including callback URLs, Client ID, and Client Secret.
- [Webhook Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/webhook.md): These credentials can authenticate the Webhook node and support basic auth, header auth, JWT auth, and none. Basic auth requires a username and password, header auth requires a header name and value, and JWT auth uses the JWT credential with either a passphrase or PEM key.
- [WhatsApp Business Cloud Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/whatsapp.md): This document outlines the requirements and steps for setting up WhatsApp Business Cloud credentials in n8n, including creating a Meta developer account, business portfolio, and app, as well as configuring API key and OAuth2 authentication methods for use with the WhatsApp Business Cloud and WhatsApp Trigger nodes. It also provides links to relevant WhatsApp API documentation and resources for Meta Tech Providers.
- [Wise Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/wise.md): These credentials allow n8n to authenticate with Wise using an API token, supporting both live and test environments, and handle Strong Customer Authentication (SCA) with a private key for live endpoints.
- [Wolfram|Alpha Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/wolframalpha.md): This document describes how to obtain and use Wolfram|Alpha API credentials within n8n, including steps to register for an App ID and resolve potential "Forbidden" connection errors related to email verification.
- [WooCommerce Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/woocommerce.md): This document provides instructions on how to configure WooCommerce credentials in n8n using an API key, including prerequisites, supported authentication methods, and troubleshooting tips for the "Consumer key is missing" error, along with references to WooCommerce's REST API documentation.
- [WordPress Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/wordpress.md): This document explains how to set up WordPress credentials in n8n using basic authentication, including enabling two-step authentication, creating an application password, and configuring the credential with your WordPress username, application password, and URL.
- [Workable Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/workable.md): This document describes how to authenticate Workable nodes in n8n using an API key, including instructions for obtaining the subdomain and access token from your Workable account and selecting the appropriate token scopes.
- [Wufoo Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/wufoo.md): This document provides instructions on how to configure Wufoo credentials, including obtaining the API Key and Subdomain, for use with n8n nodes, with links to Wufoo's API documentation and help resources.
- [xAI credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/xai.md): These credentials allow n8n users to authenticate the Chat xAI Grok node using an API key obtained from their xAI account, as detailed in xAI's API documentation and the Hitchhiker's Guide to Grok.
- [Xata Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/xata.md): This document explains how to configure Xata credentials in n8n, including prerequisites, supported authentication methods (API key), and related resources, with a focus on obtaining the Database Endpoint, Branch, and API Key from your Xata account.
- [Xero Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/xero.md): This document explains how to configure Xero credentials in n8n using OAuth2, including prerequisites, supported authentication methods, and instructions for generating a Client ID and Secret within the Xero developer portal.
- [Yourls credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/yourls.md): These credentials allow n8n to authenticate with Yourls using an API key, requiring a Signature token and the URL of your Yourls instance, as detailed in Yourls' documentation.
- [Zabbix Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/zabbix.md): This document describes how to configure Zabbix credentials, including the API key and URL, for use with the HTTP Request node in n8n to make custom API calls to a Zabbix server.
- [Zammad Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/zammad.md): This document provides information on how to configure Zammad credentials for use with n8n, including prerequisites, supported authentication methods (Basic Auth and Token Auth), and instructions for obtaining the necessary credentials.
- [Zendesk Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/zendesk.md): This document provides instructions on how to configure Zendesk credentials in n8n, including prerequisites, supported authentication methods (API token and OAuth2), and required information such as subdomain, email, API token, Client ID, and Client Secret.
- [Zep Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/zep.md): This document provides instructions for configuring Zep credentials in n8n, covering both Zep Cloud and self-hosted Zep Open Source setups using an API key for authentication with the Zep and Zep Vector Store nodes.
- [Zoho Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/zoho.md): This document provides instructions on how to configure Zoho credentials, including prerequisites, supported authentication methods (OAuth2), and related resources such as Zoho's CRM API documentation and instructions for registering an application with Zoho. It also provides region-specific access token URLs for different Zoho data centers. Instructions are provided both for n8n cloud users and those configuring OAuth2 from scratch.
- [Zoom Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/zoom.md): This document explains how to configure Zoom credentials in n8n, covering prerequisites, supported authentication methods (API JWT token and OAuth2), and instructions for obtaining the necessary Client ID and Client Secret when using OAuth2.
- [Zscaler ZIA Credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/zscalerzia.md): These credentials enable authentication when using the HTTP Request node to make a Custom API call to Zscaler Internet Access (ZIA) by using basic auth and API key combo.
- [Zulip credentials](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/credentials/zulip.md): This document explains how to configure Zulip credentials in n8n using an API key, including the required URL, email address, and instructions for obtaining the API key from Zulip.
- [Node Types](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/node-types.md): This document describes the different types of nodes available in n8n, including triggers, actions, core nodes, cluster nodes, credentials, and community nodes.
- [Handling API Rate Limits](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/rate-limits.md): This document explains how to handle API rate limits in n8n, which are restrictions on the frequency of requests to an API, and it describes identifying rate limit issues and handling rate limits for integrations (using Retry On Fail, Loop Over Items, and Wait nodes) and in the HTTP Request node (batch requests, paginate results).
- [n8n-nodes-base.acuityschedulingtrigger](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.acuityschedulingtrigger.md): The Acuity Scheduling Trigger node allows n8n workflows to be triggered by events in Acuity Scheduling, a cloud-based appointment scheduling software.
- [Airtable Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.airtabletrigger.md): The Airtable Trigger node in n8n allows users to monitor Airtable bases and tables for new events based on polling intervals. It responds to new Airtable events and offers options to configure poll times, specify the base and table, define trigger fields, and download attachments. Additional parameters allow filtering results using Airtable formulas and specifying a view ID.
- [n8n Autopilot Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.autopilottrigger.md): The Autopilot Trigger node in n8n allows users to trigger workflows based on events in Autopilot, a visual marketing software, such as contact updates, list changes, and segment activity.
- [n8n Box Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.boxtrigger.md): This document explains how to use the Box Trigger node in n8n, which allows users to monitor files and folders in Box and trigger workflows based on changes.
- [Chargebee Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.chargebeetrigger.md): The Chargebee Trigger node allows n8n to react to events in Chargebee, a subscription billing platform, by using webhooks to automate recurring payment collection, invoicing, taxes, and customer management.
- [Clockify Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.clockifytrigger.md): The Clockify Trigger node allows n8n to react to events in Clockify, a free time tracker, by monitoring work hours across projects, and it uses the workflow timezone setting to specify the range of time entries starting time.
- [n8n crowd.dev Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.crowddevtrigger.md): The crowd.dev Trigger node allows n8n to respond to events in crowd.dev, such as new activities and new members, enabling integration with other applications.
- [Facebook Lead Ads Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebookleadadstrigger.md): The Facebook Lead Ads Trigger node responds to events in Facebook Lead Ads, such as new leads, allowing integration with other applications. It is important to note that Facebook only allows one webhook per app, which can cause issues when switching between testing and production URLs. A workaround is to disable the workflow when testing to avoid conflicts with the production webhook URL. Refer to Facebook's documentation for details about their API.
- [Facebook Trigger Ad Account Object](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/ad-account.md): This document explains how to configure the Facebook Trigger node in n8n to receive updates on ad changes in a Facebook Ad Account, including credential setup, app ID configuration, object selection, and field name/ID filtering for specific events like "In Process Ad Objects" and "With Issues Ad Objects." It also emphasizes the necessity of enabling the "Include Values" option and provides links to related Facebook API documentation. The trigger can be configured to listen to all available Ad Account events or be limited to specific ones.
- [Facebook Trigger Application Object](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/application.md): This document explains how to use the Facebook Trigger Application object in n8n to receive updates sent to a specific Facebook app, including configuration steps and available trigger events.
- [Facebook Trigger Certificate Transparency Object](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/certificate-transparency.md): This document explains how to use the Certificate Transparency object with the Facebook Trigger in n8n to receive updates about newly issued certificates for subscribed domains, including certificate and phishing alerts, and provides configuration instructions and links to related resources.
- [Facebook Trigger Group Object](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/group.md): This document describes how to configure the Facebook Trigger node in n8n to receive updates about activities and events in a Facebook group, including credential setup, trigger configuration, and related resources from Meta's Workplace API reference.
- [Facebook Trigger Instagram Object Documentation](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/instagram.md): This document describes how to use the Instagram object with the Facebook Trigger in n8n to receive updates on media comments, mentions, and story expirations. Configuration involves setting up a Facebook App credential, specifying the App ID, selecting "Instagram" as the object, and choosing the specific events to trigger on, such as comments, mentions, or story insights. The "Include Values" option must be enabled. Refer to Facebook and Meta resources for additional information.
- [Facebook Trigger Link Object](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/link.md): This document describes how to configure the Facebook Trigger node in n8n to receive updates about links for rich previews from external providers, focusing on the Link object and its specific configuration requirements, including credential setup, app ID, object selection, and the necessity of enabling the 'Include Values' option.
- [Facebook Trigger Page object documentation](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/page.md): This document describes how to configure the Facebook Trigger node in n8n to receive updates when changes occur on a Facebook page, such as changes to profile fields, mentions, or live video status, requiring specific app and page configurations and the `manage_pages` permission.
- [Facebook Trigger Permissions Object](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/permissions.md): This document describes the Facebook Trigger Permissions object, which allows users to receive updates when a user grants or revokes a permission for their app in n8n, covering credentials, configuration, and related resources on Meta's Graph API.
- [Facebook Trigger User object](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/user.md): The Facebook Trigger User object is used to receive updates when changes to a user's profile occur. The trigger can be configured with a Facebook App credential, APP ID, and the User object. Field names or IDs can be selected to limit events, and the option to include values for changes can be enabled. Refer to Meta's User Graph API for more information.
- [Facebook Trigger WhatsApp Business Account object documentation](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/whatsapp.md): This document describes how to use the Facebook Trigger node in n8n with the WhatsApp Business Account object to receive updates about changes to your WhatsApp Business Account (WABA). It outlines the necessary prerequisites, including app configuration and WhatsApp account setup, and details the trigger configuration steps, such as selecting credentials, specifying the App ID, and choosing the specific events to monitor. Note that n8n recommends using the dedicated WhatsApp Trigger node instead of the Facebook Trigger node.
- [Facebook Trigger Workplace Security Object](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger/workplace-security.md): This document explains how to use the Facebook Trigger Workplace Security object in n8n to receive updates about Workplace security events; it covers credentials, trigger configuration, and related resources, emphasizing the necessity of enabling the "Include Values" option.
- [Facebook Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.facebooktrigger.md): The Facebook Trigger node in n8n allows users to trigger workflows based on events occurring in Facebook, supporting various objects like Ad Accounts, Pages, and User profiles; it is recommended to use the WhatsApp Trigger node for WhatsApp events, and users can select specific field names or IDs to receive detailed data.
- [n8n-nodes-base.figmatrigger](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.figmatrigger.md): This document describes the Figma Trigger node in n8n, which allows workflows to be triggered by events in Figma, such as file commenting, deletion, updates, version updates, and library publishing; note that Figma's free "Starter" plan does not support webhooks, requiring a "Professional" plan.
- [GetResponse Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.getresponsetrigger.md): The GetResponse Trigger node allows n8n to receive notifications for events like new subscriptions, unsubscriptions, email opens, clicks, and survey submissions from GetResponse, an email marketing platform.
- [n8n-nodes-base.githubtrigger](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.githubtrigger.md): The GitHub Trigger node allows n8n workflows to be triggered by events in GitHub repositories, enabling automations based on Git activity, issue tracking, and collaboration features.
- [Gmail Trigger Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger/common-issues.md): This document provides solutions for common errors encountered while using the Gmail Trigger node, specifically addressing the 401 unauthorized error related to credential scopes and permissions, with guidance for both OAuth2 and Service Account credentials.
- [Gmail Trigger Node Poll Mode Options](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger/poll-mode-options.md): The Gmail Trigger node in n8n allows users to configure how often it polls for new emails, offering several modes: Every Hour, Every Day, Every Week, Every Month, Every X, and Custom (Cron Expression).
- [Gmail Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger.md): The Gmail Trigger node in n8n allows workflows to be triggered by events in Gmail, such as new messages. It supports filtering messages based on labels, sender, read status, and search criteria. The node polls Gmail at specified intervals and can return simplified or raw data. It can also include messages from Spam and Trash folders. Refer to Google's Gmail API documentation for additional information.
- [Google Business Profile Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.googlebusinessprofiletrigger.md): The Google Business Profile Trigger node allows n8n to respond to events in Google Business Profile, such as new reviews, and integrate with other applications; n8n also provides an app node for Google Business Profile.
- [Google Calendar Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.googlecalendartrigger.md): The Google Calendar Trigger node in n8n allows users to automate workflows based on events in Google Calendar, such as when events are created, started, ended, updated, or cancelled.
- [Google Drive Trigger Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.googledrivetrigger/common-issues.md): This document provides solutions to common issues encountered while using the Google Drive Trigger node in n8n, including 401 unauthorized errors and handling multiple file changes within a single polling interval.
- [Google Drive Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.googledrivetrigger.md): The Google Drive Trigger node in n8n allows users to monitor Google Drive for specific events and trigger workflows based on those events, using Google Drive for file storage and synchronization.
- [Google Sheets Trigger Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.googlesheetstrigger/common-issues.md): This document provides solutions to common issues encountered when using the Google Sheets Trigger node in n8n, including resolving stuck executions and correctly formatting date and time columns.
- [Google Sheets Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.googlesheetstrigger.md): The Google Sheets Trigger node in n8n allows users to automate workflows based on events in Google Sheets, such as when rows are added or updated, using Google Sheets API. It requires Google authentication and offers templates and examples for usage. Refer to Google Sheet's API documentation for more information about the service. n8n also provides an app node for Google Sheets. Troubleshooting information and related content are available on n8n's website.
- [HubSpot Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.hubspottrigger.md): The HubSpot Trigger node allows n8n workflows to be triggered by events in HubSpot, such as when a company, contact, conversation, deal, or ticket is created, deleted, or updated; note that only one trigger can be active at a time due to HubSpot webhook limitations.
- [KoboToolbox Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.kobotoolboxtrigger.md): The KoboToolbox Trigger node in n8n starts a workflow when a new submission is received for a specified form in KoboToolbox, handling hook creation and deletion. It functions similarly to the Get Submission operation in the KoboToolbox node, with the same reformatting options.
- [Lemlist Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.lemlisttrigger.md): The Lemlist Trigger node in n8n allows users to monitor events within Lemlist, an email outreach platform, and trigger automated workflows based on events such as emails bounced, clicked, or replied, as well as LinkedIn actions and custom events.
- [LoneScale Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.lonescaletrigger.md): The LoneScale Trigger node allows n8n workflows to respond to events in LoneScale, enabling integration with other applications; it supports triggering on new LoneScale events.
- [n8n-nodes-base.mailerlitetrigger](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.mailerlitetrigger.md): The MailerLite Trigger node in n8n responds to events like campaign sends, subscriber actions (added, created, bounced, etc.), and automation triggers in MailerLite.
- [Mautic Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.mautictrigger.md): The Mautic Trigger node allows n8n to react to events in Mautic, a marketing automation platform, such as lead generation, contact scoring, and segmentation. It can be used with the Mautic app node.
- [Microsoft OneDrive Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.microsoftonedrivetrigger.md): The Microsoft OneDrive Trigger node allows n8n to respond to file and folder events in Microsoft OneDrive, enabling integration with other applications.
- [Microsoft Outlook Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.microsoftoutlooktrigger.md): The Microsoft Outlook Trigger node allows n8n to respond to events in Microsoft Outlook, such as receiving a new message, and integrate with other applications.
- [Microsoft Teams Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.microsoftteamstrigger.md): The Microsoft Teams Trigger node allows responding to events like new channels, messages, chats, and team members in Microsoft Teams, enabling integration with other applications.
- [Netlify Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.netlifytrigger.md): The Netlify Trigger node allows n8n to react to events in Netlify, a web application hosting and serverless backend service. It requires credentials which are detailed in the documentation. n8n also provides an app node for Netlify. Refer to n8n's website for example workflows and related content. This trigger node enables building automated workflows that respond to Netlify events.
- [Notion Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.notiontrigger.md): The Notion Trigger node in n8n allows users to monitor Notion databases for page additions and updates, enabling automated workflows based on these events.
- [n8n Onfleet Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.onfleettrigger.md): The Onfleet Trigger node allows n8n workflows to be triggered by events in Onfleet, a last-mile delivery solution, such as task arrival, completion, or worker duty changes.
- [Postgres Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.postgrestrigger.md): The Postgres Trigger node allows n8n to respond to events in Postgres databases, such as insert, update, and delete operations, or to listen to a specific channel.
- [Pushcut Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.pushcuttrigger.md): The Pushcut Trigger node allows n8n to trigger workflows based on smart notifications from the Pushcut iOS app, enabling users to initiate shortcuts, URLs, and online automation. Configuration involves setting up an Integration Trigger within the Pushcut app and linking it to the n8n workflow. Authentication information and usage examples are available in the n8n documentation. This node enables workflows to start based on actions performed within the Pushcut app. Instructions are provided for configuring the Pushcut Trigger node with the Pushcut app.
- [RabbitMQ Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.rabbitmqtrigger.md): The RabbitMQ Trigger node allows n8n to receive messages from a RabbitMQ message broker, enabling automated workflows based on real-time data.
- [Salesforce Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.salesforcetrigger.md): The Salesforce Trigger node in n8n allows users to respond to various events in Salesforce, such as when accounts, contacts, leads, or opportunities are created or updated, enabling integration with other applications.
- [Slack Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.slacktrigger.md): The Slack Trigger node allows n8n to respond to events in Slack, such as new messages, mentions, file sharing, and new user creation, enabling integration with other applications; it requires appropriate scopes and careful management of webhook URLs to avoid conflicts between testing and production environments.
- [Strava Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.stravatrigger.md): The Strava Trigger node allows n8n to react to events in Strava, an internet service for tracking exercise with social network features, including events related to activities and athletes.
- [Telegram Trigger Node Common Issues](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.telegramtrigger/common-issues.md): This document provides solutions and troubleshooting steps for common issues encountered with the Telegram Trigger node in n8n, including problems with stuck executions, bad webhook requests, and conflicts between testing and production environments due to Telegram's single webhook limitation.
- [Telegram Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.telegramtrigger.md): The Telegram Trigger node allows n8n workflows to respond to events from Telegram, such as new messages, channel posts, and callback queries, with options to filter by chat and user IDs.
- [TheHive 5 Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.thehive5trigger.md): TheHive 5 Trigger node allows n8n to respond to events in TheHive 5, such as alerts, cases, and tasks, to integrate TheHive with other applications.
- [TheHive Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.thehivetrigger.md): This document describes the TheHive Trigger node, which allows n8n to respond to events in TheHive version 3 or 4, including created, deleted, and updated alerts, cases, logs, observables, and tasks, and provides instructions for configuring a webhook in TheHive.
- [Trello Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.trellotrigger.md): The Trello Trigger node allows n8n to react to events within Trello, a web-based Kanban-style list-making application, by monitoring changes to Trello models like lists and cards.
- [Twilio Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.twiliotrigger.md): The Twilio Trigger node allows n8n to respond to events in Twilio, such as new SMS messages and calls, enabling integration with other applications; it supports On New SMS and On New Call events.
- [n8n Venafi TLS Protect Cloud Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.venafitlsprotectcloudtrigger.md): The Venafi TLS Protect Cloud Trigger node allows n8n workflows to be triggered by events in the cloud-based Venafi TLS Protect service, a cybersecurity platform for machine identity management.
- [WhatsApp Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger.md): The WhatsApp Trigger node allows n8n to respond to events in WhatsApp, such as account updates, message events, and phone number changes, enabling integration with other applications; it supports a variety of WhatsApp events and provides examples and templates for getting started.
- [Wise Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.wisetrigger.md): The Wise Trigger node in n8n allows users to create workflows triggered by events in Wise, such as balance changes and transfer updates. It supports triggers for balance credits, debits, transfer case updates, and transfer status updates. Authentication information and usage examples are available in the n8n documentation. Wise is a service for international money transfers.
- [WooCommerce Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.woocommercetrigger.md): The WooCommerce Trigger node allows n8n to react to events in WooCommerce, a customizable e-commerce plugin for WordPress, such as coupon, customer, order, and product creation, updates, and deletions.
- [n8n Workable Trigger Node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/builtin/trigger-nodes/n8n-nodes-base.workabletrigger.md): The Workable Trigger node allows n8n to respond to events in Workable, a recruiting platform, such as when a candidate is created or moved; this node requires authentication information found in the credentials section and offers example workflows and templates on the n8n website.
- [Building Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/community-nodes/build-community-nodes.md): This document outlines the standards and requirements for building and submitting community nodes to the n8n community node repository, including package naming, keywords, and submission guidelines, as well as the requirements for submitting a node for verification by n8n.
- [GUI Install of Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/community-nodes/installation/gui-install.md): This document explains how to install, uninstall, upgrade, and downgrade community nodes in n8n using the graphical user interface, including how to browse for nodes on npm and manage node versions.
- [Manual Installation of Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/community-nodes/installation/manual-install.md): This document outlines the steps to manually install, uninstall, and upgrade community nodes from the npm registry on self-hosted n8n instances, including how to handle specific versions and breaking changes.
- [Install Verified Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/community-nodes/installation/verified-install.md): This page explains how n8n instance owners and admins can install and uninstall verified community nodes, which are available for all members of the n8n instance to use in their workflows.
- [Installation and Management of Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/community-nodes/installation.md): This document outlines three methods for installing and managing community nodes in n8n: using the nodes panel, the GUI, or manually from the command line, with specific instructions for verified and unverified nodes, and notes on self-hosting requirements.
- [Risks of Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/community-nodes/risks.md): Installing community nodes poses system and data security risks, as these unverified packages from npm have full access to the n8n instance; verified nodes are vetted by n8n, and community nodes can be disabled in self-hosted instances or the Cloud Admin Panel.
- [Troubleshooting Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/community-nodes/troubleshooting.md): This document provides solutions for troubleshooting issues with community nodes in n8n, such as missing packages and startup failures, and explains how to prevent loading community nodes on n8n cloud instances.
- [Build a declarative-style node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/declarative-style-node.md): This tutorial guides you through building a declarative-style node for n8n, using the NASA API to create a node that fetches Astronomy Picture of the Day and Mars Rover Photos..
- [Node Development Environment Setup](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/node-development-environment.md): This document outlines the necessary dependencies, including Node.js and npm, and editor setup, recommending VS Code with specific extensions, for setting up an n8n node development environment.
- [Build a programmatic-style node](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/programmatic-style-node.md): This tutorial guides users through building a programmatic-style node for n8n, focusing on integrating the SendGrid API to create a contact. The tutorial covers setting up the project, adding an icon, defining the node in the base file, adding resources and operations, and other essential steps. It utilizes n8n's node starter repository and provides a step-by-step approach to node development.
- [Code Standards](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/code-standards.md): This document outlines the code standards for building n8n nodes, emphasizing readability, maintainability, and error prevention through the use of linters, TypeScript, and specific guidelines for resource and operation definitions, internal parameter naming, and programmatic node development, including data handling and HTTP request practices.
- [Credentials Files](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/credentials-files.md): This document explains the structure of credential files in n8n, which define the authorization methods for nodes and affect what n8n displays in the Credentials modal. It covers the basic structure including import statements, class creation, and property definitions for controlling authentication. The document details parameters like name, displayName, documentationUrl, properties, authenticate (with types body, header, qs, and auth), and test. It provides code snippets illustrating different authentication methods and credential testing. 
- [HTTP Request Helper for Node Builders](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/http-helpers.md): n8n provides a flexible helper for making HTTP requests within node builders, abstracting away complexity with options for authentication, request configuration, and response handling, including a migration guide from the previous helper implementation.
- [Declarative-style Parameters](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-base-files/declarative-style-parameters.md): This document outlines the parameters available for declarative-style nodes in n8n, including `methods`, `loadOptions`, `routing`, and `version`. It provides code snippets to illustrate the structure and concepts, and references the declarative-style node tutorial for real-world examples. The `methods` parameter contains the `loadOptions` object for querying services, while `routing` defines API call details. The `version` parameter specifies the node version, with declarative-style nodes requiring the light versioning approach.
- [Programmatic-style execute() method](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-base-files/programmatic-style-execute-method.md): The programmatic style in n8n node creation uses an `execute()` method to handle incoming data, build API requests, and return an instance of `INodeExecutionData`, differing from the declarative style that uses the `routing` key.
- [Programmatic-style parameters](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-base-files/programmatic-style-parameters.md): This document outlines the parameters available for programmatic-style nodes in n8n, including `defaultVersion`, `methods`, `loadOptions`, and `version`, with code snippets and examples for implementation, complementing the `execute()` method and standard parameters.
- [Standard Parameters in n8n Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-base-files/standard-parameters.md): This document outlines the standard parameters used in the node base file for n8n, including displayName, name, icon, group, description, defaults, forceInputNodeExecution, inputs, outputs, requiredInputs, credentials, requestDefaults, and properties, which define node behaviors and UI elements. 
- [Structure of the node base file](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-base-files/structure.md): This document outlines the basic structure of a node base file in n8n, including both declarative and programmatic styles, emphasizing the `description` object and the `execute()` method for programmatic nodes.
- [Node Base File](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-base-files.md): The node base file contains the core code of a node, and every node must have one; the contents differ depending on whether the node is declarative-style or programmatic-style. It includes information on the structure of the node base file and standard parameters, as well as declarative-style parameters and programmatic-style parameters and the execute() method.
- [Node Codex Files](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-codex-files.md): The codex file contains metadata about an n8n node, including its name, version, categories, and links to documentation, and is a JSON file at the root of the node.
- [Node File Structure](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-file-structure.md): This document outlines the recommended file and directory structure for n8n nodes, emphasizing maintainability, modularity, and best practices such as using a package.json file, a nodes directory for node code, and a credentials directory for credentials. It covers modular structures with actions, methods, and transport directories, and discusses node versioning and how to organize files when including multiple nodes in a single npm package. The Airtable node is presented as a best-practice example for programmatic nodes.
- [Node Versioning](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/node-versioning.md): This document explains how to use node versioning in n8n to make changes to existing nodes without breaking existing workflows, covering light versioning for all node types and full versioning for non-declarative nodes.
- [Item Linking](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/paired-items.md): This document explains how to use n8n's item linking feature in programmatic-style nodes to access data from preceding items and ensure expressions in other nodes don't break.
- [Node UI elements](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/ui-elements.md): This document describes the predefined UI components available in n8n for users to input various data types when building nodes, including strings, numbers, collections, date/time, booleans, colors, and options.
- [UX Guidelines for Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/ux-guidelines.md): These UX guidelines ensure that community nodes meet n8n's standards for verified status, covering credentials, node structure (CRUD operations, resource locators), consistency, functionality (deleting operations output, simplifying output fields), and copy (text case, terminology, placeholders, and operation naming).
- [Community Node Verification Guidelines](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/build/reference/verification-guidelines.md): These guidelines outline the requirements for n8n community node verification, covering package source, dependencies, documentation, environment access, and coding practices to ensure high-quality, maintainable, and secure nodes for users to discover and install.
- [Install Private Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/deploy/install-private-nodes.md): Learn how to install custom n8n nodes in Docker and global n8n instances without publishing them to npm, for internal use.
- [Submit Community Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/deploy/submit-community-nodes.md): This document outlines the standards and procedures for submitting community nodes to the n8n community node repository and for n8n verification, covering naming conventions, package requirements, testing, and submission to the npm registry.
- [Creating Nodes in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/overview.md): This document provides guidance on how to build custom nodes for n8n, covering planning, tutorials, testing, sharing, and reference materials, and assumes familiarity with JavaScript, TypeScript, and n8n data structures.
- [Choose Node Building Method](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/plan/choose-node-method.md): Learn about the declarative and programmatic node-building styles in n8n, including when to use each style and the differences in syntax and data handling.
- [Node Types in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/plan/node-types.md): This document describes the two types of nodes that can be built for n8n: trigger nodes, which start a workflow and supply the initial data, and action nodes, which perform operations as part of a workflow.
- [Node UI design](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/plan/node-ui-design.md): This document provides design guidance and standards for creating user interfaces for n8n nodes, focusing on user-friendliness and consistency with n8n's built-in nodes, covering aspects like UI text style, terminology, naming conventions, field display, help elements, error handling, toggles, lists, trigger node inputs, and subtitles.
- [Node Linter](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/test/node-linter.md): The n8n node linter analyzes n8n node and credential source code to detect issues and enforce best practices, using the `eslint-plugin-n8n-nodes-base` plugin which includes a collection of rules for different file types; it can be set up via npm install, used automatically or manually, and exceptions to rules can be made when necessary.
- [Run Node Locally](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/test/run-node-locally.md): This document outlines how to test a custom n8n node by running it in a local n8n instance, including installation, local publishing, and troubleshooting steps.
- [Troubleshooting Node Development](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/creating-nodes/test/troubleshooting-node-development.md): This document provides solutions to common problems encountered during n8n node development, including credential errors, editor UI issues, icon display problems, node registration, and linter warnings related to file naming conventions.
- [Custom API Operations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations/custom-operations.md): This document explains how to use n8n's HTTP Request node with predefined credential types to perform custom API calls for integrations where n8n does not have a dedicated node or the existing node does not support the desired operation, including how to handle credential scopes.
- [n8n Integrations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/integrations.md): This page provides documentation and guides for n8n integrations, which are called nodes and serve as building blocks for workflows. The documentation covers built-in nodes, community nodes, credential-only nodes, custom operations, and generic integrations using the HTTP Request node. It also provides links to resources for creating nodes, managing community nodes, exploring node libraries, and adding credentials.
- [Keyboard Shortcuts](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/keyboard-shortcuts.md): This document lists keyboard shortcuts for common n8n actions, workflow controls, canvas manipulations, node operations, and node panel interactions.
- [Learning path](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/learning-path.md): This guide provides a series of tutorials and resources to help users get started with n8n, covering topics such as setting up n8n, trying out basic workflows, structured courses, self-hosting options, building nodes, and staying updated with the n8n community.
- [License Key](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/license-key.md): Instructions for activating an n8n license either via the UI or by setting the N8N_LICENSE_ACTIVATION_KEY environment variable, including the need to allowlist Cloudflare IP addresses.
- [Log streaming](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/log-streaming.md): This document describes the log streaming feature in n8n, which allows users on Enterprise Self-hosted and Cloud plans to send events from n8n to their own logging tools, enabling centralized monitoring and alerting.
- [AI Assistant](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/manage-cloud/ai-assistant.md): The n8n AI Assistant is a tool that helps users build, debug, and optimize n8n workflows by answering questions, providing coding support, assisting with expressions, and offering credential setup tips, and available to users on a Cloud plan.
- [Change Instance Ownership or Username](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/manage-cloud/change-ownership-or-username.md): Instructions for changing the ownership of an n8n instance by updating the email address in the settings, and a note that changing the username is not currently supported, requiring a new account and data transfer.
- [Cloud Data Management](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/manage-cloud/cloud-data-management.md): This document outlines strategies for managing data within n8n Cloud, focusing on memory usage, data storage, and best practices for building memory-efficient workflows, as well as how to manage execution data and automatic/manual data pruning to prevent out-of-memory incidents.
- [Cloud Free Trial](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/manage-cloud/cloud-free-trial.md): This document describes the n8n cloud free trial, which offers 14 days of Pro plan features with certain limits, and explains how to upgrade to a paid account or download workflows before the trial expires and data is deleted.
- [Cloud IP Addresses](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/manage-cloud/cloud-ip.md): n8n Cloud IP addresses are dynamic and subject to change without notice, so users should implement strong authentication and secure transport protocols when connecting to and from n8n; a list of potential outbound IP addresses is provided.
- [Cloud Concurrency in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/manage-cloud/concurrency.md): This document explains how concurrency works in n8n Cloud, including concurrency limits, details, and a comparison to queue mode.
- [Update your Cloud version](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/manage-cloud/update-cloud-version.md): This page provides instructions on how to manually update an n8n Cloud instance to the latest stable or beta version, recommends frequent updates and testing, and explains the automatic update process for outdated instances.
- [Privacy](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/privacy-security/privacy.md): This document outlines n8n's data privacy practices, including GDPR compliance, data collection in self-hosted and cloud versions, AI usage, and documentation telemetry, while emphasizing the measures taken to protect user data and offering options to opt out of telemetry.
- [What You Can Do](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/privacy-security/what-you-can-do.md): This document outlines steps users can take to secure their n8n code and data, including reporting security issues, using user management, setting up a reverse proxy, encrypting data, running security audits, and being aware of risks when installing community nodes.
- [Contributing to n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/reference/contributing.html.md): This document outlines various ways to contribute to the n8n project, including reviewing n8n, helping community members, contributing workflow templates, building nodes, contributing to the code or documentation, writing blog articles, and referring candidates for open positions.
- [Keyboard Shortcuts](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/reference/keyboard-shortcuts.md): This document lists the keyboard shortcuts available in n8n for workflow controls, canvas manipulation, node panel interactions, and node-specific actions.
- [n8n Release Notes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/reference/release-notes.md): These release notes cover new features, bug fixes, and updates for n8n, a workflow automation platform, including details on updating n8n, semantic versioning, and specific changes in recent releases like sub-workflows and API support for user project assignments.
- [n8n Docs: Workflow Automation and Integrations](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/reference.md): This documentation covers the setup, usage, and development of n8n, a fair-code licensed workflow automation tool with AI capabilities. It provides resources for quickstarts, choosing the right n8n option, exploring integrations, and building AI functionality. n8n connects apps with APIs and allows data manipulation with low-code. It offers customizable workflows, convenient deployment options, and a focus on privacy. The documentation is a work in progress, and contributions are welcome.
- [Release Notes Pre 1.0](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/release-notes/0-x.md): This document contains release notes for n8n versions prior to 1.0.0, including features, bug fixes, and update instructions, with links to the GitHub repository for detailed release information.
- [n8n Release Notes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/release-notes.md): These release notes cover new features, bug fixes, and updates for n8n, a workflow automation platform, including details on how to update n8n and explanations of semantic versioning.
- [Create environments with source control](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/create-environments.md): This tutorial guides you through creating development and production environments using source control in n8n, covering multi-instance, multi-branch and multi-instance, single-branch patterns with GitHub as the Git provider, and explains how to connect n8n instances to a repository, push changes from development, and pull updates to production, including optional automation using a GitHub Action.
- [Set up source control for environments](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/setup.md): This document outlines how to link a Git repository to an n8n instance and configure source control for managing environments, including setting up the repository, configuring Git in n8n, creating a deploy key, and connecting n8n to the instance.
- [Environments in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/understand/environments.md): This document explains the purpose of environments in n8n, how they work, and how to copy work between environments, covering the use of Git branches and n8n instances for development and production workflows. In n8n, an environment comprises an n8n instance and a Git branch.
- [Git and n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/understand/git.md): This document introduces Git concepts and terminology used in n8n for source control, explaining branches, local/remote repositories, push, pull, and commit operations. It highlights that n8n uses Git to provide source control, emphasizing the importance of understanding basic Git concepts for effectively using this feature, and it clarifies that n8n's implementation is not a full version control system. The page serves as a brief introduction to the key Git terms needed when using environments in n8n. It also warns about the potential for pulling to overwrite local changes. Refer to Push and pull for detailed information about how n8n interacts with Git.
- [Branch Patterns](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/understand/patterns.md): This document describes various patterns for connecting n8n instances to Git branches, including multiple instances with multiple branches, multiple instances with one branch, one instance with multiple branches, and one instance with one branch, outlining the advantages and disadvantages of each approach for managing workflows across different environments. 
- [Understand source control and environments](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/understand.md): This document explains source control and environments in n8n, including feature availability, environments, Git usage, and branch patterns.
- [Copy Work Between Environments](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/using/copy-work.md): This document outlines the process of copying work between different n8n instances, covering both single-branch and multiple-branch Git configurations, and explains how to automate sending changes to n8n using the `/source-control/pull` API endpoint with examples for GitHub Actions.
- [Push and pull](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/using/push-pull.md): This document explains how to use the push and pull features in n8n to keep your work in sync with a Git repository, including how to fetch changes, send your work to Git, and handle merge behaviors and conflicts. It recommends a unidirectional workflow to minimize merge conflicts and potential data loss, and highlights the roles required to push and pull changes, as well as considerations for workflows, credentials, variables, and tags. It also covers how n8n handles credentials, variables, and workflow tags differently, automatically resolving merge conflicts for credentials and variables. It warns about potential data loss when pulling or pushing workflows and advises caution when manually editing files in the Git repository.
- [Using Source Control and Environments](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments/using.md): Instructions for using source control in n8n Enterprise, including pushing and pulling changes, handling merge conflicts, and copying work between environments.
- [Source Control and Environments](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/source-control-environments.md): This document explains how to use Git-based source control in n8n to create multiple environments, covering setup, usage, and a tutorial for creating environments with source control.
- [Sustainable Use License](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/sustainable-use-license.md): This document describes n8n's Sustainable Use License, a fair-code license that allows free use, modification, and redistribution with limitations on commercial use, distribution for commercial purposes, and alteration of licensing notices.
- [Very Quick Quickstart](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/try-it-out/quickstart.md): This quickstart guides new n8n users through the basics of using n8n Cloud, loading a workflow template, adding a node, configuring it with expressions, and running their first workflow.
- [Your first workflow](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/try-it-out/tutorial-first-workflow.md): This tutorial guides you through creating a workflow in n8n, covering trigger nodes, credentials, data processing, logic representation, and expressions to fetch and analyze NASA solar flare data, filter it based on classification, and output reports to Postbin.
- [Account Types](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/account-types.md): Learn about the three account types in n8n: owner, admin, and member, and how they affect user permissions and access to workflows, credentials, projects, and the Cloud dashboard.
- [Best practices for user management](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/best-practices.md): This page provides best practices for user management in n8n, covering topics such as account types, collaborative workflow editing, moving workflows between accounts, webhook path uniqueness, and self-hosted configurations.
- [Cloud Setup](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/cloud-setup.md): Instructions for setting up user management on n8n Cloud, including creating an owner account and inviting new users, with a warning about an irreversible upgrade after setting up user management.
- [LDAP in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/ldap.md): This document explains how to enable and configure Lightweight Directory Access Protocol (LDAP) in n8n for user authentication using organization credentials, covering aspects like enabling LDAP, merging accounts, user management, and disabling LDAP.
- [RBAC Projects](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/rbac/projects.md): This document outlines how to use projects in n8n to group workflows and credentials, assign roles to users, and manage access levels within each project.
- [RBAC Role Types](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/rbac/role-types.md): This document describes the different user roles within n8n projects: Admin, Editor, and Viewer, outlining the permissions each role has for managing project settings, members, workflows, credentials, and executions.
- [Role-based access control (RBAC)](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/rbac.md): This document provides guidance on using role-based access control (RBAC) in n8n to manage access to workflows and credentials based on user roles and projects, including information on role types and projects.
- [Okta Workforce Identity SAML setup](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/saml/okta.md): This guide explains how to configure SAML SSO in n8n using Okta Workforce Identity, covering prerequisites, setup steps within Okta, assigning the n8n app to users, and obtaining the metadata XML for n8n configuration.
- [Set up SAML](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/saml/setup.md): This document guides users on enabling SAML SSO in n8n, covering setup steps, generic IdP configurations, and resources for common identity providers like Auth0, Azure AD, and Okta.
- [SAML](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/saml.md): This document provides guidance on using SAML SSO (single sign-on) with n8n, including setup, Okta configuration, troubleshooting, and user management.
- [two-factor-auth](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management/two-factor-auth.md): This document explains how to enable and disable two-factor authentication (2FA) in n8n, which adds an extra layer of security to user accounts by requiring a code from an authenticator app in addition to a username and password.
- [User Management](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/user-management.md): The user management feature in n8n allows you to invite people to work in your n8n instance, manage logins, add/remove users, and assign account types (Owner, Member, and Admin).
- [Video Courses](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/video-courses.md): n8n offers beginner and advanced video courses on YouTube that cover topics ranging from basic workflows and APIs to complex data flows and enterprise features.
- [Connections](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/components/connections.md): A connection in n8n establishes a link between nodes, routing data from one node's output to another node's input within a workflow.
- [Nodes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/components/nodes.md): Nodes are the basic building blocks of n8n workflows, used to start workflows, fetch/send data, and process/manipulate data, and n8n allows users to add built-in and community nodes, as well as create their own.
- [Sticky Notes](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/components/sticky-notes.md): Sticky Notes allow users to annotate and comment on workflows within n8n, with options for creating, editing, coloring, and positioning notes, as well as using Markdown for formatting and adjusting image widths.
- [Create a Workflow in n8n](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/create.md): Learn how to create a new workflow in n8n, either in your personal space or within a project. The documentation explains how to manually run workflows for testing and building purposes. It also describes how to activate workflows with trigger or Webhook nodes for automatic execution based on defined trigger conditions. New workflows are inactive by default and must be activated to run automatically. Activate or deactivate workflows using the Inactive/Active toggle.
- [All Executions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/executions/all-executions.md): This page explains how to view and filter all executions from an n8n instance, including executions from workflows within specific projects; it also describes how to retry failed workflows and load data from previous executions into the current workflow.
- [Custom Executions Data](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/executions/custom-executions-data.md): This document explains how to set and access custom data on n8n workflows using the Code node or the Execution Data node, for filtering executions or fetching data in workflows. Custom executions data is available on Cloud Pro/Enterprise and Self-Hosted Enterprise/registered Community plans, starting from version 0.222.0. You can set a single piece of extra data or overwrite the whole custom data object, with limitations on key and value lengths and the number of items. During execution, access the custom data object or specific values using JavaScript or Python code.
- [Debug and re-run past executions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/executions/debug.md): This document explains how to load data from a previous n8n workflow execution into the current workflow for debugging purposes, allowing users to examine failed executions, fix issues, and re-run the workflow with the original data.
- [Manual, Partial, and Production Executions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/executions/manual-partial-and-production-executions.md): This document explains the differences between manual, partial, and production executions in n8n, including how they are triggered and how to troubleshoot common issues.
- [Workflow-Level Executions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/executions/single-workflow-executions.md): The Executions list in n8n shows all executions for a specific workflow, allowing users to view previous runs, filter executions by status and time, and retry failed workflows with either the current or original workflow definition, while deleted workflows also remove associated execution history; this feature is available in version 0.222.0 and above.
- [Executions](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/executions.md): An execution is a single run of a workflow in n8n, which can be triggered manually for testing or automatically in production when the workflow is active; n8n provides workflow-level and global execution lists, and supports adding custom data to executions.
- [Export and Import Workflows](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/export-import.md): This document explains how to export and import n8n workflows as JSON files, using copy-paste, the Editor UI menu, or command line tools, while also addressing credential sharing considerations.
- [Workflow History](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/history.md): This document explains how to use the workflow history feature in n8n to view and restore previous versions of workflows, which are created when saving, restoring, or pulling from Git; it also clarifies the difference between workflow history and execution history.
- [Settings](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/settings.md): This page describes n8n workflow settings, which enable users to customize workflow behavior such as execution order, error handling, timezone, and saving of executions, including the option to set a timeout duration for workflow executions.
- [Workflow Sharing](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/sharing.md): This document explains how to share workflows with other users in n8n, including information on user roles, permissions, and credential access. Workflow sharing is available on Pro and Enterprise Cloud plans, and Enterprise self-hosted plans.
- [Workflow Tags](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/tags.md): Workflow tags in n8n allow users to label and filter workflows, with tags being global across the n8n instance and manageable by instance owners.
- [Templates](https://raw.githubusercontent.com/dyingc/mcp_docs/master/docs_output/n8n/workflows/templates.md): This document describes how to use workflow templates in n8n, including accessing the template library, submitting workflows, disabling templates, and using a custom template library with specific endpoints, query parameters, and data schemas.
